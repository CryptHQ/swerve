{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./node_modules/bitcoin-address-validation/lib/index.esm.js","webpack:///./src/components/ren/Withdraw.vue?a42f","webpack:///./node_modules/bech32/index.js","webpack:///./src/components/ren/Withdraw.vue?a168","webpack:///src/components/ren/Withdraw.vue","webpack:///./src/components/ren/Withdraw.vue?edec","webpack:///./src/components/ren/Withdraw.vue"],"names":["$","$values","values","target","stat","O","base58","sha256","payload","from","update","digest","addressTypes","0","type","network","validateBech32","address","decoded","decode","error","prefixesNetwork","bc","tb","bcrt","prefix","undefined","witnessVersion","words","data","fromWords","slice","length","bech32","validateBtcAddress","substr","version","readUInt8","checksum","body","expectedChecksum","equals","Object","assign","strictValidation","validated","ALPHABET","ALPHABET_MAP","z","x","charAt","TypeError","polymodStep","pre","b","prefixChk","chk","i","c","charCodeAt","v","encode","LIMIT","toLowerCase","Error","result","__decode","str","lowered","uppered","toUpperCase","split","lastIndexOf","wordChars","push","decodeUnsafe","res","apply","arguments","convert","inBits","outBits","pad","value","bits","maxV","toWordsUnsafe","bytes","Array","isArray","toWords","fromWordsUnsafe","module","exports","render","_obj","_vm","this","_h","$createElement","_c","_self","staticClass","_v","directives","name","rawName","expression","attrs","domProps","showstaked","_i","on","$event","$$a","$$el","$$c","checked","$$v","$$i","concat","currentPool","style","composing","share","handle_change_share","_l","keys","currencies","currency","class","withdrawc","getTokenIcon","_s","includes","_f","inputs","ref","refInFor","inputStyles","$set","handle_change_amounts","amountAfterBTC","minOrderSize","_m","to_currency","handleCheck","_q","maxSlippage","customippageDisabled","customSlippageDisabled","maxInputSlippage","btcAddress","checkAddress","from_currency","handle_remove_liquidity","loadingAction","staked_balance","slippage","pendingSNXRewards","claim_SNX","toFixed","pendingRENRewards","waitingMessage","estimateGas","gasPrice","ethPrice","_b","show_nobalance","show_nobalance_i","staticRenderFns","console","log","token_balance","component"],"mappings":"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","file":"js/chunk-458de676.22b75c20.js","sourcesContent":["var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.github.io/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","import baseX from 'base-x';\nimport bech32 from 'bech32';\nimport sha from 'sha.js';\nimport { Buffer } from 'buffer';\n\nconst base58 = baseX('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\n\nconst sha256 = payload => Buffer.from(sha('sha256').update(payload).digest());\n\nconst addressTypes = {\n  0x00: {\n    type: 'p2pkh',\n    network: 'mainnet'\n  },\n\n  0x6f: {\n    type: 'p2pkh',\n    network: 'testnet'\n  },\n\n  0x05: {\n    type: 'p2sh',\n    network: 'mainnet'\n  },\n\n  0xc4: {\n    type: 'p2sh',\n    network: 'testnet'\n  }\n};\n\nconst validateBech32 = (address) => {\n  let decoded;\n\n  try {\n    decoded = bech32.decode(address);\n  } catch (error) {\n    return false;\n  }\n\n  const prefixesNetwork = {\n    bc: 'mainnet',\n    tb: 'testnet',\n    bcrt: 'regtest'\n  };\n\n  const network = prefixesNetwork[decoded.prefix];\n\n  if (network === undefined) {\n    return false;\n  }\n\n  const witnessVersion = decoded.words[0];\n\n  if (witnessVersion < 0 || witnessVersion > 16) {\n    return false;\n  }\n\n  const data = bech32.fromWords(decoded.words.slice(1));\n\n  let type;\n\n  if (data.length === 20) {\n    type = 'p2wpkh';\n  } else if (data.length === 32) {\n    type = 'p2wsh';\n  }\n\n  return {\n    bech32: true,\n    network,\n    address,\n    type\n  };\n};\n\nconst validateBtcAddress = (address) => {\n  if (!address) {\n    return false;\n  }\n\n  let decoded;\n  const prefix = address.substr(0, 2);\n\n  if (prefix === 'bc' || prefix === 'tb') {\n    return validateBech32(address);\n  }\n\n  try {\n    decoded = base58.decode(address);\n  } catch (error) {\n    return false;\n  }\n\n  const { length } = decoded;\n\n  if (length !== 25) {\n    return false;\n  }\n\n  const version = decoded.readUInt8(0);\n\n  const checksum = decoded.slice(length - 4, length);\n  const body = decoded.slice(0, length - 4);\n\n  const expectedChecksum = sha256(sha256(body)).slice(0, 4);\n\n  if (!checksum.equals(expectedChecksum)) {\n    return false;\n  }\n\n  return addressTypes[version]\n    ? Object.assign({ address, bech32: false }, addressTypes[version])\n    : false;\n};\n\nconst strictValidation = (address, network) => {\n  const validated = validateBtcAddress(address);\n  if (!validated) return false;\n  if (network) {\n    if (validated.network !== network) return false;\n    return true;\n  }\n  return validated;\n};\n\nexport default strictValidation;\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=style&index=0&lang=css&\"","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","var render = function () {\nvar _obj;\nvar _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"add-liquidity\"},[_c('fieldset',{staticClass:\"percentage\"},[_c('legend',[_vm._v(\" Share of liquidity (%) \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.showstaked),expression:\"showstaked\"}],attrs:{\"id\":\"showstaked\",\"type\":\"checkbox\",\"name\":\"showstaked\"},domProps:{\"checked\":Array.isArray(_vm.showstaked)?_vm._i(_vm.showstaked,null)>-1:(_vm.showstaked)},on:{\"change\":function($event){var $$a=_vm.showstaked,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showstaked=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showstaked=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showstaked=$$c}}}}),_c('label',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool == 'sbtc'),expression:\"currentPool == 'sbtc'\"}],attrs:{\"for\":\"showstaked\"}},[_vm._v(\" Show staked \")])]),_c('ul',[_c('li',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.share),expression:\"share\"}],style:(_vm.shareStyles),attrs:{\"type\":\"text\",\"id\":\"liquidity-share\",\"name\":\"liquidity-share\"},domProps:{\"value\":(_vm.share)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.share=$event.target.value},_vm.handle_change_share],\"focus\":_vm.handle_change_share}})])])]),_c('fieldset',{staticClass:\"currencies\"},[_c('legend',[_vm._v(\"Currencies:\")]),_c('ul',_vm._l((Object.keys(_vm.currencies)),function(currency,i){\nvar _obj;\nreturn _c('li',[_c('label',{staticClass:\"currency_label\",attrs:{\"for\":'currency_'+i}},[_c('img',{class:( _obj = {'token-icon': true}, _obj[currency+'-icon'] = true, _obj['y'] =  _vm.withdrawc, _obj[_vm.currentPool] = true, _obj ),attrs:{\"src\":_vm.getTokenIcon(i == 0 ? 'btc' : currency)}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.withdrawc),expression:\"withdrawc\"}]},[_vm._v(_vm._s(_vm.currencies[currency])+\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!(currency == 'usdt' && _vm.currentPool == 'usdt') && !['susdv2','ren','sbtc'].includes(_vm.currentPool)),expression:\"!(currency == 'usdt' && currentPool == 'usdt') && !['susdv2','ren','sbtc'].includes(currentPool)\"}]},[_vm._v(\"(in \"+_vm._s(_vm._f(\"capitalize\")(currency))+\")\")])]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.withdrawc && !['susdv2', 'tbtc', 'ren'].includes(_vm.currentPool)),expression:\"!withdrawc && !['susdv2', 'tbtc', 'ren'].includes(currentPool)\"}]},[_vm._v(_vm._s(_vm._f(\"capitalize\")(currency)))]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.withdrawc && ['susdv2', 'tbtc', 'ren'].includes(_vm.currentPool)),expression:\"!withdrawc && ['susdv2', 'tbtc', 'ren'].includes(currentPool)\"}]},[_vm._v(_vm._s(_vm.currencies[currency]))])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs[i]),expression:\"inputs[i]\"}],ref:(\"inputs\" + i),refInFor:true,style:(_vm.inputStyles[i]),attrs:{\"type\":\"text\",\"id\":'currency_'+i,\"name\":\"from_cur\",\"disabled\":_vm.currentPool == 'susd'},domProps:{\"value\":(_vm.inputs[i])},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(_vm.inputs, i, $event.target.value)},function($event){return _vm.handle_change_amounts(i)}],\"focus\":function($event){return _vm.handle_change_amounts(i)}}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(i == 0 && _vm.amountAfterBTC > 0),expression:\"i == 0 && amountAfterBTC > 0\"}]},[_vm._v(\" BTC Amount received after renVM fees: \"+_vm._s(_vm.amountAfterBTC)+\" \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(i == 0 && _vm.amountAfterBTC < 0),expression:\"i == 0 && amountAfterBTC < 0\"}]},[_vm._v(\" Minimum withdraw amount in BTC is \"+_vm._s(_vm.minOrderSize)+\" \")])])}),0)]),_c('fieldset',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool != 'susd'),expression:\"currentPool != 'susd'\"}]},[_vm._m(0),_c('ul',[_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(!['susdv2','tbtc','ren','sbtc'].includes(_vm.currentPool)),expression:\"!['susdv2','tbtc','ren','sbtc'].includes(currentPool)\"}]},[_c('input',{attrs:{\"type\":\"radio\",\"id\":\"to_cur_comb\",\"name\":\"to_cur\"},domProps:{\"value\":10,\"checked\":_vm.to_currency === 10},on:{\"click\":function($event){return _vm.handleCheck(10)}}}),_c('label',{attrs:{\"for\":\"to_cur_comb\"}},[_vm._v(\" Combination of all coins \"),_vm._l((Object.keys(_vm.currencies)),function(currency,i){\nvar _obj;\nreturn _c('span',[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(i > 0),expression:\"i > 0\"}]},[_vm._v(\"+\")]),_c('img',{class:( _obj = {'token-icon': true}, _obj[currency+'-icon'] = true, _obj['y'] =  _vm.withdrawc, _obj[_vm.currentPool] = true, _obj ),attrs:{\"src\":_vm.getTokenIcon(i == 0 ? 'btc' : currency)}})])})],2)]),_c('li',{staticClass:\"withdrawin\"},[_c('input',{attrs:{\"type\":\"radio\",\"id\":'to_cur_'+0,\"name\":\"to_cur\"},domProps:{\"value\":0,\"checked\":_vm.to_currency === 0},on:{\"click\":function($event){return _vm.handleCheck(0)}}}),_c('label',{attrs:{\"for\":'to_cur_'+0}},[_c('img',{class:( _obj = {'token-icon': true}, _obj['btc-icon'] = true, _obj ),attrs:{\"src\":_vm.getTokenIcon('btc')}}),_c('span',[_vm._v(\" BTC \")])])])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showWithdrawSlippage),expression:\"showWithdrawSlippage\"}],attrs:{\"id\":\"max_slippage\"}},[_c('span',[_vm._v(\"Max slippage:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.maxSlippage),expression:\"maxSlippage\"}],attrs:{\"id\":\"slippage02\",\"type\":\"radio\",\"name\":\"slippage\",\"value\":\"0.2\"},domProps:{\"checked\":_vm._q(_vm.maxSlippage,\"0.2\")},on:{\"change\":function($event){_vm.maxSlippage=\"0.2\"}}}),_c('label',{attrs:{\"for\":\"slippage02\"}},[_vm._v(\"0.2%\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.maxSlippage),expression:\"maxSlippage\"}],attrs:{\"id\":\"slippage1\",\"type\":\"radio\",\"name\":\"slippage\",\"checked\":\"\",\"value\":\"3\"},domProps:{\"checked\":_vm._q(_vm.maxSlippage,\"3\")},on:{\"change\":function($event){_vm.maxSlippage=\"3\"}}}),_c('label',{attrs:{\"for\":\"slippage1\"}},[_vm._v(\"3%\")]),_c('input',{attrs:{\"id\":\"custom_slippage\",\"type\":\"radio\",\"name\":\"slippage\",\"value\":\"-\"},on:{\"click\":function($event){_vm.customippageDisabled = false}}}),_c('label',{attrs:{\"for\":\"custom_slippage\"},on:{\"click\":function($event){_vm.customSlippageDisabled = false}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.maxInputSlippage),expression:\"maxInputSlippage\"}],attrs:{\"type\":\"text\",\"id\":\"custom_slippage_input\",\"disabled\":_vm.customSlippageDisabled,\"name\":\"custom_slippage_input\"},domProps:{\"value\":(_vm.maxInputSlippage)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.maxInputSlippage=$event.target.value}}}),_vm._v(\" % \")])]),_c('div',{staticClass:\"input address btc\"},[_c('label',{attrs:{\"for\":\"address\"}},[_vm._v(\"BTC withdrawal address\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.btcAddress),expression:\"btcAddress\"}],attrs:{\"id\":\"address\",\"type\":\"text\",\"placeholder\":\"Address\"},domProps:{\"value\":(_vm.btcAddress)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.btcAddress=$event.target.value}}})]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.nobalance),expression:\"nobalance\"}],staticClass:\"info-message gentle-message\",attrs:{\"id\":\"amount-warning\"}},[_vm._v(\" You don't have any available amount to withdraw \")]),_c('approve-chi'),_c('gas-price'),_c('div',{staticClass:\"buttons\",attrs:{\"id\":\"withdraw_buttons\"}},[_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool == 'ren'),expression:\"currentPool == 'ren'\"}]},[_c('a',{attrs:{\"href\":\"https://bridge.renproject.io/\"}},[_vm._v(\" Mint/redeem renBTC \")])]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.btcAddress && !_vm.checkAddress),expression:\"btcAddress && !checkAddress\"}],staticClass:\"simple-error invalid-address\"},[_vm._v(\" Invalid \"+_vm._s(_vm.from_currency == 0 ? 'ETH' : 'BTC')+\" address \")]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool != 'susd'),expression:\"currentPool != 'susd'\"}],staticClass:\"simplebutton\",attrs:{\"id\":\"remove-liquidity\",\"disabled\":!_vm.btcAddress || _vm.amountAfterBTC < 0 || !_vm.checkAddress},on:{\"click\":function($event){return _vm.handle_remove_liquidity()}}},[_vm._v(\" Withdraw \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.loadingAction == 1),expression:\"loadingAction == 1\"}],staticClass:\"loading line\"})]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2', 'sbtc'].includes(_vm.currentPool) && _vm.staked_balance > 0 ),expression:\"['susdv2', 'sbtc'].includes(currentPool) && staked_balance > 0 \"}],staticClass:\"simplebutton\",attrs:{\"id\":\"remove-liquidity-unstake\",\"disabled\":_vm.slippage < -0.03 || !_vm.btcAddress || _vm.amountAfterBTC < 0 || !_vm.checkAddress},on:{\"click\":function($event){return _vm.handle_remove_liquidity(true)}}},[_vm._v(\" Withdraw & claim \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.loadingAction == 2),expression:\"loadingAction == 2\"}],staticClass:\"loading line\"})]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2', 'sbtc'].includes(_vm.currentPool) && _vm.pendingSNXRewards > 0),expression:\"['susdv2', 'sbtc'].includes(currentPool) && pendingSNXRewards > 0\"}],attrs:{\"id\":\"claim-snx\"},on:{\"click\":_vm.claim_SNX}},[_vm._v(\" Claim \"+_vm._s((_vm.pendingSNXRewards / 1e18).toFixed(2))+\" SNX \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool == 'sbtc'),expression:\"currentPool == 'sbtc'\"}]},[_vm._v(\" + \"+_vm._s((_vm.pendingRENRewards / 1e18).toFixed(2))+\" REN\")])]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2', 'sbtc'].includes(_vm.currentPool) && _vm.staked_balance > 0),expression:\"['susdv2', 'sbtc'].includes(currentPool) && staked_balance > 0\"}],attrs:{\"id\":\"unstake-snx\"},on:{\"click\":function($event){return _vm.handle_remove_liquidity(true, true)}}},[_vm._v(\" Unstake \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_loading),expression:\"show_loading\"}],staticClass:\"info-message gentle-message\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.waitingMessage)}}),_vm._v(\" \"),_c('span',{staticClass:\"loading line\"})]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.estimateGas),expression:\"estimateGas\"}],staticClass:\"info-message gentle-message\"},[_vm._v(\" Estimated tx cost: \"+_vm._s((_vm.estimateGas * _vm.gasPrice / 1e9 * _vm.ethPrice).toFixed(2))+\"$ \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.warninglow),expression:\"warninglow\"}],staticClass:\"simple-error\"},[_vm._v(\" You're withdrawing too little amount in one coin \")]),_c('Slippage',_vm._b({},'Slippage',{show_nobalance: _vm.show_nobalance, show_nobalance_i: _vm.show_nobalance_i},false))],1),_c('tx-table')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('legend',[_vm._v(\" Withdraw % in: \"),_c('span',{staticClass:\"tooltip\"},[_vm._v(\" [?] \"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\" You can also withdraw in one coin by typing in a currency field \")])])])}]\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"add-liquidity\">\n        <fieldset class=\"percentage\">\n            <legend>\n            \tShare of liquidity (%)\n        \t\t<input id='showstaked' type='checkbox' name='showstaked' v-model = 'showstaked'>\n        \t\t<label for='showstaked' v-show=\"currentPool == 'sbtc'\"> Show staked </label>\n            </legend>\n            <ul>\n                <li>\n                    <input type=\"text\"\n                    id=\"liquidity-share\"\n                    name=\"liquidity-share\"\n                    v-model='share'\n                    @input='handle_change_share'\n                    @focus='handle_change_share'\n                    :style='shareStyles'>\n                </li>\n            </ul>\n        </fieldset>\n        <fieldset class=\"currencies\">\n            <legend>Currencies:</legend>\n            <ul>\n                <li v-for='(currency, i) in Object.keys(currencies)'>\n                    <label :for=\"'currency_'+i\" class='currency_label'>\n                        <img\n                            :class=\"{'token-icon': true, [currency+'-icon']: true, 'y': withdrawc, [currentPool]: true}\"\n                            :src=\"getTokenIcon(i == 0 ? 'btc' : currency)\">\n                        <span v-show='withdrawc'>{{currencies[currency]}}\n\t                    \t<span v-show=\"!(currency == 'usdt' && currentPool == 'usdt') && !['susdv2','ren','sbtc'].includes(currentPool)\">(in {{currency | capitalize}})</span>\n                    \t</span>\n                    \t<span v-show=\"!withdrawc && !['susdv2', 'tbtc', 'ren'].includes(currentPool)\">{{currency | capitalize}}</span>\n                        <span v-show=\"!withdrawc && ['susdv2', 'tbtc', 'ren'].includes(currentPool)\">{{currencies[currency]}}</span>\n                    </label>\n                    <input type=\"text\"\n                    :id=\"'currency_'+i\"\n                    name=\"from_cur\"\n                    v-model = 'inputs[i]'\n                    :style = \"inputStyles[i]\"\n                    :disabled = \"currentPool == 'susd'\"\n                    :ref=\"`inputs${i}`\"\n                    @input='handle_change_amounts(i)'\n                    @focus='handle_change_amounts(i)'>\n                    <div v-show='i == 0 && amountAfterBTC > 0'>\n                        BTC Amount received after renVM fees: {{ amountAfterBTC }}\n                    </div>\n                    <div v-show='i == 0 && amountAfterBTC < 0'>\n                        Minimum withdraw amount in BTC is {{ minOrderSize }}\n                    </div>\n                </li>\n            </ul>\n        </fieldset>\n        <fieldset v-show = \"currentPool != 'susd'\">\n        \t<legend>\n                Withdraw % in:\n                <span class='tooltip'> [?]\n                    <span class='tooltiptext long'>\n                        You can also withdraw in one coin by typing in a currency field\n                    </span>\n                </span>\n            </legend>\n        \t<ul>\n        \t\t<li v-show = \"!['susdv2','tbtc','ren','sbtc'].includes(currentPool)\">\n        \t\t\t<input type='radio' id='to_cur_comb' name=\"to_cur\" :value='10' :checked='to_currency === 10' @click='handleCheck(10)'>\n        \t\t\t<label for='to_cur_comb'>\n                        Combination of all coins\n                        <span v-for='(currency, i) in Object.keys(currencies)'>\n                            <span v-show='i > 0'>+</span>\n                            <img\n                            :class=\"{'token-icon': true, [currency+'-icon']: true, 'y': withdrawc, [currentPool]: true}\"\n                            :src=\"getTokenIcon(i == 0 ? 'btc' : currency)\">\n                        </span>\n                    </label>\n        \t\t</li>\n\t\t\t\t<li class='withdrawin'>\n\t                <input type=\"radio\" :id=\"'to_cur_'+0\" name=\"to_cur\" :value='0' :checked='to_currency === 0' @click='handleCheck(0)'>\n\t                <label :for=\"'to_cur_'+0\">\n                        <img\n                            :class=\"{'token-icon': true, ['btc-icon']: true}\"\n                            :src=\"getTokenIcon('btc')\">\n                            <span> BTC </span>\n                    </label>\n\t            </li>\n        \t</ul>\n        </fieldset>\n        <div id='max_slippage' v-show='showWithdrawSlippage'><span>Max slippage:</span>\n            <input id=\"slippage02\" type=\"radio\" name=\"slippage\" value='0.2' v-model='maxSlippage'>\n            <label for=\"slippage02\">0.2%</label>\n\n            <input id=\"slippage1\" type=\"radio\" name=\"slippage\" checked value='3' v-model='maxSlippage'>\n            <label for=\"slippage1\">3%</label>\n\n            <input id=\"custom_slippage\" type=\"radio\" name=\"slippage\" value='-' @click='customippageDisabled = false'>\n            <label for=\"custom_slippage\" @click='customSlippageDisabled = false'>\n                <input type=\"text\" id=\"custom_slippage_input\" :disabled='customSlippageDisabled' name=\"custom_slippage_input\" v-model='maxInputSlippage'> %\n            </label>\n        </div>\n        <div class='input address btc'>\n            <label for='address'>BTC withdrawal address</label>\n            <input id='address' type='text' v-model='btcAddress' placeholder='Address'>\n        </div>\n\n\n        <div class='info-message gentle-message' id='amount-warning' v-show = 'nobalance'>\n            You don't have any available amount to withdraw\n            <!-- <div v-show=\"currentPool == 'susdv2'\">\n                (You have {{(staked_balance / 1e18) | toFixed2}} staked)\n            </div> -->\n        </div>\n\n        <approve-chi></approve-chi>\n\n        <gas-price></gas-price>\n\n        <div id='withdraw_buttons' class='buttons'>\n            <p v-show=\"currentPool == 'ren'\">\n                <a href='https://bridge.renproject.io/'> Mint/redeem renBTC </a>\n            </p>\n\n            <p class='simple-error invalid-address' v-show='btcAddress && !checkAddress'>\n                Invalid {{ from_currency == 0 ? 'ETH' : 'BTC' }} address\n            </p>\n\n            <button id=\"remove-liquidity\"\n                class=\"simplebutton\"\n                :disabled = \"!btcAddress || amountAfterBTC < 0 || !checkAddress\"\n                @click='handle_remove_liquidity()' v-show=\"currentPool != 'susd'\">\n                Withdraw <span class='loading line' v-show='loadingAction == 1'></span>\n            </button>\n            <button\n                id='remove-liquidity-unstake'\n                class=\"simplebutton\"\n                v-show = \"['susdv2', 'sbtc'].includes(currentPool) && staked_balance > 0 \"\n                :disabled = 'slippage < -0.03 || !btcAddress || amountAfterBTC < 0 || !checkAddress'\n                @click='handle_remove_liquidity(true)'>\n                Withdraw & claim <span class='loading line' v-show='loadingAction == 2'></span>\n            </button>\n            <button id='claim-snx'\n                @click='claim_SNX'\n                v-show=\"['susdv2', 'sbtc'].includes(currentPool) && pendingSNXRewards > 0\"\n            >\n                Claim {{(pendingSNXRewards / 1e18).toFixed(2)}} SNX\n                <span v-show=\"currentPool == 'sbtc'\"> + {{(pendingRENRewards / 1e18).toFixed(2)}} REN</span>\n            </button>\n            <button id='unstake-snx'\n                @click='handle_remove_liquidity(true, true)'\n                v-show=\"['susdv2', 'sbtc'].includes(currentPool) && staked_balance > 0\"\n            >\n                Unstake\n            </button>\n            <div class='info-message gentle-message' v-show='show_loading'>\n                <span v-html='waitingMessage'></span> <span class='loading line'></span>\n            </div>\n            <div class='info-message gentle-message' v-show='estimateGas'>\n                Estimated tx cost: {{ (estimateGas * gasPrice / 1e9 * ethPrice).toFixed(2) }}$\n            </div>\n            <div class='simple-error' v-show='warninglow'>\n                You're withdrawing too little amount in one coin\n            </div>\n            <Slippage v-bind=\"{show_nobalance, show_nobalance_i}\"/>\n        </div>\n\n        <tx-table></tx-table>\n\n    </div>\n</template>\n\n<script>\n\timport Vue from 'vue'\n    import { notifyHandler, notifyNotification } from '../../init'\n    import * as common from '../../utils/common.js'\n    import { getters, contract as currentContract, gas as contractGas} from '../../contract'\n    import allabis, { balancer_ABI,  balancer_address } from '../../allabis'\n    const compound = allabis.compound\n    import * as helpers from '../../utils/helpers'\n\n    import BN from 'bignumber.js'\n\n    import Slippage from '../common/Slippage.vue'\n\n    import Table from './Table.vue'\n    import * as store from './shiftStore'\n    import { state } from './shiftState'\n\n    import * as gasPriceStore from '../common/gasPriceStore'\n    import GasPrice from '../common/GasPrice.vue'\n\n    import * as errorStore from '../common/errorStore'\n\n    import ApproveCHI from './ApproveCHI.vue'\n\n    import validate from 'bitcoin-address-validation';\n\n    export default {\n    \tcomponents: {\n    \t\tSlippage,\n            'tx-table': Table,\n            'approve-chi': ApproveCHI,\n            GasPrice,\n    \t},\n    \tdata: () => ({\n    \t\tshare: '100.00',\n    \t\tshareStyles: {\n    \t\t\tbackgroundColor: '#707070',\n    \t\t\tcolor: '#d0d0d0',\n    \t\t},\n    \t\tinputs: [],\n            btcAddress: '',\n    \t\tinputStyles: [],\n            swapbtc: false,\n            loading: false,\n    \t\twallet_balances: [],\n    \t\tcalc_balances: [],\n    \t\tbalances: [],\n    \t\tstaked_balance: null,\n    \t\ttoken_balance: null,\n    \t\ttoken_supply: 0,\n    \t\tshow_nobalance: false,\n    \t\tshow_nobalance_i: 0,\n    \t\tbgColor: [],\n    \t\tamounts: [],\n    \t\tto_currency: 10,\n    \t\ttest: null,\n    \t\twithdrawc: false,\n    \t\tdonate_dust: false,\n    \t\tshowstaked: false,\n            pendingSNXRewards: 0,\n            pendingRENRewards: 0,\n            balancerPool: null,\n            show_loading: false,\n            waitingMessage: '',\n            showWithdrawSlippage: false,\n            maxSlippage: 0.2,\n            setSlippage: false,\n            maxInputSlippage: '',\n            customSlippageDisabled: true,\n            estimateGas: 0,\n            customGasDisabled: true,\n            customGasInput: null,\n            ethPrice: 0,\n            loadingAction: false,\n            warninglow: false,\n    \t\tslippagePromise: helpers.makeCancelable(Promise.resolve()),\n    \t}),\n        created() {\n            this.$watch(()=>currentContract.default_account, (val, oldval) => {\n            \tif(!val || !oldval) return;\n            \tif(val.toLowerCase() == oldval.toLowerCase()) return;\n                if(val) this.mounted();\n            })\n            this.$watch(()=>currentContract.initializedContracts, val => {\n                if(val) this.mounted();\n            })\n            this.$watch(()=>currentContract.currentContract, (val, oldval) => {\n            \tthis.setInputStyles(false, val, oldval)\n                if(currentContract.initializedContracts) this.mounted();\n            })\n        },\n        watch: {\n        \tto_currency(val) {\n        \t\tif(this.share == 0 || this.share == '---') this.share = 100\n\t        \tthis.setInputStyles()\n\t        \tif(val !== null) this.handle_change_share();\n        \t},\n        \twithdrawc(val) {\n        \t\tif(this.share == '---' ) return;\n        \t\tif(!val && this.to_currency === null) this.to_currency = 10\n        \t\tif(val && this.to_currency !== null) this.to_currency = null\n        \t},\n            maxSlippage() {\n                this.setSlippage = true\n            },\n            maxInputSlippage(val) {\n                if(val) this.setSlippage = true\n            },\n        },\n        computed: {\n\t\t\t...getters,\n            currencies() {\n                if(currentContract.currentContract == 'ren') {\n                    return {\n                        btc: 'BTC',\n                        wbtc: 'WBTC',\n                    }\n                }\n                if(currentContract.currentContract == 'sbtc') {\n                    return {\n                        btc: 'BTC',\n                        wbtc: 'wBTC',\n                        sbtc: 'sBTC',\n                    }\n                }\n            },\n        \tshowMigrateNew() {\n        \t\treturn (this.currentPool == 'compound' && this.oldBalance > 0) || this.currentPool == 'susd'\n         \t},\n         \tnobalance() {\n         \t\treturn this.staked_balance && this.token_balance.plus(this.staked_balance).eq(BN(0))\n         \t},\n            getMaxSlippage() {\n                let maxSlippage = this.maxSlippage;\n                if(this.maxInputSlippage) maxSlippage = this.maxInputSlippage;\n                return (100 + maxSlippage)/100\n            },\n            minAmount() {\n            if(['tbtc', 'ren', 'sbtc'].includes(currentContract.currentContract)) return 1e-8\n                return 0.01\n            },\n            calcFee() {\n                let N_COINS = allabis[currentContract.currentContract].N_COINS\n                return this.fee * N_COINS / (4 * (N_COINS -1))\n            },\n            amountAfterBTC() {\n              return (BN(this.inputs[0]).times(1e8).times(1-state.mintFee/10000).minus(state.minersLockFee)).div(1e8).toFixed(8)\n            },\n            minOrderSize() {\n                return ((state.minersReleaseFee + state.burnFee / 10000) / 1e8 + 0.00000547).toFixed(8)\n            },\n            gasPrice() {\n                return gasPriceStore.state.gasPrice\n            },\n            gasPriceWei() {\n                return gasPriceStore.state.gasPriceWei\n            },\n            checkAddress() {\n                return validate(this.btcAddress) !== false\n            },\n        },\n        async mounted() {\n            this.$emit('loaded')\n        \tthis.$watch(() => this.showstaked, this.handle_change_share)\n        \tthis.setInputStyles(true)\n            if(currentContract.initializedContracts) this.mounted();\n        },\n        methods: {\n            async mounted() {\n            \tif(['susdv2', 'tbtc', 'ren'].includes(this.currentPool)) {\n            \t\tthis.withdrawc = true;\n            \t\tthis.to_currency = null\n            \t}\n                if(this.currentPool == 'sbtc') this.showstaked = true\n            \tcurrentContract.showSlippage = false;\n        \t\tcurrentContract.slippage = 0;\n\n                let curveRewards = currentContract.curveRewards\n                if(['sbtc'].includes(this.currentPool)) {\n                    this.balancerPool = new currentContract.web3.eth.Contract(balancer_ABI, balancer_address)\n                    let calls = [\n                        [curveRewards._address, curveRewards.methods.earned(this.default_account).encodeABI()],\n                        [this.balancerPool._address, this.balancerPool.methods.totalSupply().encodeABI()],\n                        [this.balancerPool._address, this.balancerPool.methods.getBalance('0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f').encodeABI()],\n                        [this.balancerPool._address, this.balancerPool.methods.getBalance('0x408e41876cccdc0f92210600ef50372656052a38').encodeABI()],\n                    ]\n                    let aggcalls = await currentContract.multicall.methods.aggregate(calls).call()\n                    let decoded = aggcalls[1].map(hex => currentContract.web3.eth.abi.decodeParameter('uint256', hex))\n\n                    this.pendingSNXRewards = decoded[0] * decoded[2] / decoded[1]\n                    this.pendingRENRewards = decoded[0] * decoded[3] / decoded[1]\n\n                }\n\n                await common.update_fee_info();\n                await this.update_balances();\n                this.setCalcBalances()\n            \tthis.handle_change_share();\n            },\n            getTokenIcon(token) {\n                return helpers.getTokenIcon(token, this.withdrawc, this.currentPool)\n            },\n            toFixed(num, precisions = 2, round = 4) {\n                if(num == '' || num == undefined || +num == 0) return '0.00'\n                if(precisions == 2 && ['tbtc', 'ren', 'sbtc'].includes(currentContract.currentContract)) precisions = 8\n                let rounded = num.toFixed(precisions)\n                return isNaN(rounded) ? '0.00' : rounded\n            },\n            inputsFormat(i) {\n        \t\tif(this.inputs[i]) {\n        \t\t\treturn this.toFixed(+this.inputs[i])\n        \t\t}\n        \t\treturn '0.00'\n        \t},\n            setInputStyles(newInputs = false, newContract, oldContract) {\n\t        \tif(oldContract) {\n                    for(let i = 0; i < allabis[newContract].N_COINS - allabis[oldContract].N_COINS; i++) {\n                        this.inputs.push('0.00')\n                    }\n                    if(allabis[oldContract].N_COINS - allabis[newContract].N_COINS > 0) {\n                        this.inputs = this.inputs.filter((_, i) => i < allabis[newContract].N_COINS)\n                    }\n                }\n                else if(newInputs) {\n                    this.inputs = new Array(Object.keys(this.currencies).length).fill('0.00')\n                }\n\t        \tthis.inputStyles = Array(Object.keys(this.currencies).length).fill({\n\t        \t\tbackgroundColor: '#707070',\n\t        \t\tcolor: '#d0d0d0',\n\t        \t})\n            },\n            async calcSlippage(...args) {\n            \tthis.slippagePromise.cancel();\n        \t\tthis.slippagePromise = helpers.makeCancelable(common.calc_slippage(...args))\n        \t\tawait this.slippagePromise;\n            },\n            handleCheck(val) {\n            \tif(val === this.to_currency) {\n            \t\tthis.to_currency = null\n\n            \t\tcurrentContract.slippage = 0\n            \t\tcurrentContract.showSlippage = false\n            \t}\n            \telse {\n            \t\tthis.to_currency = val\n            \t}\n            },\n            setCalcBalances() {\n                for (let i = 0; i < currentContract.N_COINS; i++) {\n                    let token_balance = this.showstaked ? this.token_balance.plus(this.staked_balance) : this.token_balance\n                    let value = BN(100 / 100 * this.balances[i] * currentContract.c_rates[i] * token_balance / this.token_supply)\n                    Vue.set(this.calc_balances, i, value)\n                }\n            },\n            async update_balances() {\n            \tlet calls = []\n\t\t\t    if (currentContract.default_account) {\n\t\t\t        for (let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t        \tcalls.push([currentContract.underlying_coins[i]._address ,currentContract.underlying_coins[i].methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t\t        }\n\t\t\t        calls.push([currentContract.swap_token._address ,currentContract.swap_token.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        this.token_balance = BN(0);\n\t\t\t    }\n\t\t\t    for (let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t    \tcalls.push([currentContract.swap._address ,currentContract.swap.methods.balances(i).encodeABI()])\n\t\t\t    }\n\t\t    \tif(['susdv2', 'sbtc'].includes(this.currentPool)) calls.push([currentContract.curveRewards._address, currentContract.curveRewards.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t\t\tcalls.push([currentContract.swap_token._address ,currentContract.swap_token.methods.totalSupply().encodeABI()])\n\t\t\t\tlet aggcalls = await currentContract.multicall.methods.aggregate(calls).call()\n\t\t\t\tlet decoded = aggcalls[1].map(hex => currentContract.web3.eth.abi.decodeParameter('uint256', hex))\n\t\t\t\tif(currentContract.default_account) {\n\t\t\t\t\tdecoded.slice(0, currentContract.N_COINS).map((v, i) => {\n\t\t\t\t\t\tVue.set(this.wallet_balances, i, +v / allabis[this.currentPool].coin_precisions[i])\n\t\t\t\t\t})\n\t\t\t\t\tthis.token_balance = BN(decoded[currentContract.N_COINS])\n\t\t\t\t\tdecoded = decoded.slice(currentContract.N_COINS+1)\n\t\t\t\t}\n\t\t\t\tdecoded.slice(0, currentContract.N_COINS+1 + currentContract.N_COINS).map((v, i) => {\n\t\t\t\t\tVue.set(this.balances, i, +v)\n\t\t\t        if(!currentContract.default_account) Vue.set(this.balances, i, 0)\n\t\t\t\t})\n\t\t\t\tif(['susdv2', 'sbtc'].includes(this.currentPool)) this.staked_balance = BN(decoded[decoded.length-2])\n                else this.staked_balance = BN(0)\n\t\t\t\tthis.token_supply = +decoded[decoded.length-1]\n\t\t\t},\n\t\t\tasync handle_change_amounts(i, event) {\n                this.showWithdrawSlippage = true;\n                this.show_nobalance = false\n\t\t\t\tif(event) {\n\t\t\t\t\tthis.inputs[i] = event.target.value\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.to_currency = null\n\t\t        var values = this.inputs.map((x,i) => x / currentContract.c_rates[i])\n\t\t        values = values.map(v=>BN(Math.floor(v).toString()).toFixed(0))\n\t\t        this.show_nobalance = false;\n\t\t        this.show_nobalance_i = 0;\n\t\t        let calls = [...Array(currentContract.N_COINS).keys()].map(i=>[currentContract.swap._address, currentContract.swap.methods.balances(i).encodeABI()])\n\t\t        calls.push([currentContract.swap._address ,currentContract.swap.methods.calc_token_amount(values, false).encodeABI()])\n\t\t        calls.push([currentContract.swap_token._address, currentContract.swap_token.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t        try {\n                    let aggcalls = await currentContract.multicall.methods.aggregate(calls).call()\n                    let decoded = aggcalls[1].map(hex => currentContract.web3.eth.abi.decodeParameter('uint256', hex))\n                    decoded.slice(0, currentContract.N_COINS).forEach((v, i) => {\n                        let coin_balance = +v * currentContract.c_rates[i]\n                        if(coin_balance < this.inputs[i]) {\n                            this.show_nobalance |= true;\n                            this.show_nobalance_i = i;\n                        }\n                        else\n                            this.show_nobalance |= false;\n                    })\n\t\t            var availableAmount = BN(decoded[decoded.length-2])\n\t\t            availableAmount = availableAmount.div(BN(1 - currentContract.fee * currentContract.N_COINS / (4 * (currentContract.N_COINS - 1))))\n\t\t            var maxAvailableAmount = BN(decoded[decoded.length-1]);\n\t\t            if(i == 1 && availableAmount.gt(maxAvailableAmount.plus(BN(this.staked_balance))) || i == 0 && this.amountAfterBTC < 0) {\n\t\t                this.setAllInputBackground('red')\n\t\t            }\n\t\t            else if(i == 0 && this.amountAfterBTC > 0) {\n\t\t                this.setAllInputBackground('blue')\n\t\t            }\n\t\t            this.calcSlippage(this.inputs, false);\n\n\t\t            this.share = '---';\n\t\t            this.shareStyles = {\n\t\t            \tbackgroundColor: '#707070',\n\t\t            \tcolor: '#d0d0d0'\n\t\t            }\n\t\t        }\n\t\t        catch(err) {\n\t\t            console.error(err)\n                    this.show_nobalance = true;\n                    this.show_nobalance_i = currentContract.bal_info.findIndex((balance, i) => {\n                        return +this.inputs[i] > +balance\n                    });\n\t\t            this.setAllInputBackground('red')\n\t\t        }\n\t\t\t},\n\t\t\tasync getMinAmounts() {\n\t\t\t\t//use update rates instead\n\t\t\t\tawait common.update_fee_info();\n\t\t\t\tlet min_amounts = []\n\t\t\t\tfor(let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t    \tmin_amounts[i] = (BN(1).div(BN(this.getMaxSlippage))).times(this.share/100).times(BN(this.balances[i]))\n\t\t\t\t\tmin_amounts[i] = min_amounts[i].times(BN(this.token_balance))\n\t\t\t\t\t\t            .div(BN(this.token_supply))\n\t\t\t\t\t\t            .toFixed(0,1)\n\t\t\t\t}\n\t\t\t\treturn min_amounts;\n\t\t\t},\n            async claim_SNX() {\n                this.show_loading = true\n                this.waitingMessage = `Claiming ${(this.pendingSNXRewards / 1e18).toFixed(2)} SNX`\n                if(this.currentPool == 'sbtc')\n                    this.waitingMessage += ` and ${(this.pendingRENRewards / 1e18).toFixed(2)} REN`\n                var { dismiss } = notifyNotification(this.waitingMessage)\n                let earned = await currentContract.curveRewards.methods.earned(currentContract.default_account).call()\n\n                await new Promise((resolve, reject) => {\n                    currentContract.curveRewards.methods.getReward()\n                        .send({\n                            from: currentContract.default_account,\n                            gasPrice: this.gasPriceWei,\n                            gas: 200000,\n                        })\n                        .once('transactionHash', hash => {\n                            dismiss()\n                            notifyHandler(hash)\n                            resolve()\n                        })\n                        .on('receipt', () => this.pendingSNXRewards = 0)\n                        .catch(err => {\n                            dismiss()\n                            errorStore.handleError(err)\n                            reject(err)\n                        })\n                })\n\n                if(this.currentPool == 'sbtc') {\n\n                    try {\n                        await this.balancerPool.methods.exitPool(earned, ['0', '0'])\n                        .send({\n                            from: currentContract.default_account,\n                            gasPrice: this.gasPriceWei,\n                            gas: 600000,\n                        })\n                        .once('transactionHash', hash => {\n                            notifyHandler(hash)\n                        })\n                    }\n                    catch(err) {\n                        console.error(err)\n                        errorStore.handleError(err)\n                    }\n                }\n\n            },\n            async unstake(amount, exit = false, unstake_only = false) {\n                if(unstake_only)\n                    this.waitingMessage = `\n                        Unstaking ${this.toFixed(amount.div(BN(1e18)))} tokens from Mintr\n                    `\n                else\n                    this.waitingMessage = `\n                    Need to unstake ${this.toFixed(amount.div(BN(1e18)))} tokens from Mintr for withdrawal.\n                    <br>\n                    A bit more tokens are needed to unstake to ensure that withdrawal is successful.\n                    You'll see them in your unstaked balance afterwards.\n\n                `;\n                var { dismiss } = notifyNotification(this.waitingMessage)\n\n                try {\n                    await new Promise((resolve, reject) => {\n                        currentContract.curveRewards.methods.withdraw(amount.toFixed(0,1))\n                            .send({\n                                from: currentContract.default_account,\n                                gasPrice: this.gasPriceWei,\n                                gas: 125000,\n                            })\n                            .once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                                resolve()\n                            })\n                            .on('receipt', receipt => {\n                                this.staked_balance = this.staked_balance.minus(amount)\n                                currentContract.curveStakedBalance -= amount\n                                common.update_fee_info()\n                            })\n                            .catch(err => {\n                                dismiss()\n                                reject(err)\n                            })\n                    })\n                    if(exit) {\n                        this.claim_SNX()\n                    }\n                }\n                catch(err) {\n                    console.error(err)\n                    errorStore.handleError(err)\n                    this.waitingMessage = ''\n                    this.show_loading = false;\n                    throw err\n                }\n            },\n            setLoadingAction(val) {\n                this.loadingAction = val;\n                setTimeout(() => this.loadingAction = false, 500)\n            },\n\t\t\tasync handle_remove_liquidity(unstake = false, unstake_only = false) {\n                let actionType = unstake == false ? 1 : 2\n                if(this.loadingAction == actionType) return;\n                this.setLoadingAction(actionType)\n                let promises = await Promise.all([helpers.getETHPrice()])\n                this.ethPrice = promises[0]\n                this.estimateGas = 0;\n                //this.show_loading = true;\n                let inOneCoin = currentContract.deposit_zap\n                if(['tbtc','ren','sbtc'].includes(currentContract.currentContract)) inOneCoin = currentContract.swap\n\n\t\t\t\tlet min_amounts = []\n\t\t\t    for (let i = 0; i < currentContract.N_COINS; i++) {\n                    let maxDiff = BN(this.calc_balances[i]).minus(BN(this.inputs[i]))\n\t\t\t    \tlet useMax = this.calc_balances[i] > 0 && maxDiff.lte(BN(this.minAmount)) && maxDiff > 0\n                    if(useMax) {\n\t\t\t    \t\tVue.set(this.amounts, i, BN(this.calc_balances[i]).div(currentContract.c_rates[i]).toFixed(0,1))\n\t\t\t    \t}\n\t\t\t    \telse {\n\t\t\t        \tVue.set(this.amounts, i, BN(Math.floor(this.inputs[i] / currentContract.c_rates[i]).toString()).toFixed(0,1)); // -> c-tokens\n\t\t\t    \t}\n\t\t\t    }\n\t\t\t    var txhash;\n\t\t\t    if (this.share == '---') {\n\t\t\t    \tvar token_amount;\n\t\t\t        try {\n\t\t\t        \ttoken_amount = await currentContract.swap.methods.calc_token_amount(this.amounts, false).call();\n\t\t\t        }\n\t\t\t        catch(err) {\n\t\t\t        \tconsole.error(err)\n\t\t\t\t\t\tthis.show_nobalance = true;\n\t\t\t\t\t\tthis.show_nobalance_i = this.to_currency;\n\t\t\t        }\n                    token_amount = BN(token_amount).times(BN(1).plus(this.calcFee))\n\t\t\t        token_amount = BN(Math.floor(token_amount * this.getMaxSlippage).toString()).toFixed(0,1)\n                    if((this.token_balance.lt(BN(token_amount)) || unstake) && ['susdv2', 'sbtc'].includes(this.currentPool))\n                        await this.unstake(BN(token_amount).minus(BN(this.token_balance)), unstake && !unstake_only, unstake_only)\n                    if(unstake_only) return;\n\t\t\t        let nonZeroInputs = this.inputs.filter(Number).length\n\t\t        \tlet gas = contractGas.withdraw[this.currentPool].imbalance(nonZeroInputs) | 0\n                    this.estimateGas = gas / 2;\n                    try {\n                        await common.ensure_allowance_zap_out(token_amount, undefined, allabis[currentContract.currentContract].adapterBiconomyAddress)\n                        var { dismiss } = notifyNotification('Please confirm withdrawal transaction')\n\t\t\t        \tawait store.removeLiquidityImbalanceThenBurn({\n                            address: this.btcAddress,\n                            coinDestination: currentContract.default_account,\n                            amounts: this.amounts,\n                            renBTCAmount: this.inputs[0],\n                            max_burn_amount: token_amount,\n                            gasPrice: this.gasPriceWei,\n                            dismiss: dismiss,\n                        })\n                    }\n                    catch(err) {\n                        this.waitingMessage = ''\n                        this.show_loading = false\n                        throw err;\n                    }\n\t\t\t    }\n\t\t\t    else {\n                    let balance = BN(this.token_balance)\n                    if(this.share == 100) balance = BN(await currentContract.swap_token.methods.balanceOf(currentContract.default_account).call());\n                    if(this.showstaked) balance = balance.plus(this.staked_balance)\n                    var amount = BN(this.share).div(BN(100)).times(balance)\n\n                    if((this.token_balance.lt(BN(amount)) || unstake) && ['susdv2', 'sbtc'].includes(this.currentPool))\n                        await this.unstake(BN(amount).minus(BN(this.token_balance)), unstake && !unstake_only, unstake_only)\n                    if(unstake_only) return;\n                    amount = amount.toFixed(0,1)\n                    if(this.to_currency !== null && this.to_currency < 10) {\n                        this.waitingMessage = `Please approve ${this.toFixed((amount / 1e18))} tokens for withdrawal`\n                        var { dismiss } = notifyNotification(this.waitingMessage)\n                        this.estimateGas = contractGas.depositzap[this.currentPool].withdraw / 2\n                        let min_amount;\n                        try {\n                            min_amount = await currentContract.swap.methods.calc_withdraw_one_coin(amount, this.to_currency).call();\n                            min_amount = BN(min_amount).times(BN(1).minus(this.calcFee))\n                        }\n                        catch(err) {\n                            console.error(err)\n                            this.show_nobalance = true;\n                            this.show_nobalance_i = this.to_currency;\n                        }\n                        this.waitingMessage = 'Please confirm withdrawal transaction'\n                        var { dismiss } = notifyNotification(this.waitingMessage)\n                        console.log('remove liqudiity one coin then burn')\n\t\t\t        \tawait store\n\t\t\t        \t\t.removeLiquidityOneCoinThenBurn({\n                                address: this.btcAddress,\n                                coinDestination: currentContract.default_account,\n                                token_amounts: amount,\n                                renBTCAmount: this.inputs[0],\n                                min_amount: BN(min_amount).times(BN(1).div(BN(this.getMaxSlippage))).toFixed(0, 1),\n                                gasPrice: this.gasPriceWei,\n                                dismiss: dismiss,\n                            })\n\t\t\t        }\n\t\t\t        else {\n                        try {\n    \t\t\t        \tlet min_amounts = await this.getMinAmounts();\n                            this.waitingMessage = 'Please confirm withdrawal transaction'\n                            var { dismiss } = notifyNotification(this.waitingMessage)\n                            this.estimateGas = 600000\n    \t\t\t        \tawait store\n                                .removeLiquidityThenBurn({\n                                    address: this.btcAddress,\n                                    coinDestination: currentContract.default_account,\n                                    amount: amount,\n                                    renBTCAmount: this.inputs[0],\n                                    min_amounts: min_amounts,\n                                    gasPrice: this.gasPriceWei,\n                                    dismiss: dismiss,\n                                })\n                        }\n                        catch(err) {\n                            this.waitingMessage = ''\n                            this.show_loading = false\n                            throw err;\n                        }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    if(this.share == '---') {\n\t\t\t        for (let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t            this.handle_change_amounts(i);\n\t\t\t        }\n\t\t\t    }\n                this.show_loading = false;\n                this.waitingMessage = ''\n                this.estimateGas = 0\n                this.gasPrice = 0\n\n\t\t\t    await this.update_balances();\n\t\t\t    await common.update_fee_info();\n\t\t\t},\n\t\t\tasync handle_change_share() {\n                let inOneCoin = currentContract.deposit_zap\n                if(['tbtc','ren','sbtc'].includes(currentContract.currentContract)) inOneCoin = currentContract.swap\n\n                this.warninglow = false;\n                this.showWithdrawSlippage = false\n                this.show_nobalance = false\n                if(this.to_currency == null && this.withdrawc == false && this.share == '---') this.to_currency = 10\n                if(this.share != '---' && this.to_currency != null && this.to_currency != 10) this.showWithdrawSlippage = true\n\t\t\t\tlet token_balance = this.showstaked ? this.token_balance.plus(this.staked_balance) : this.token_balance\n                console.log(token_balance, \"TOKEN BALANCE\")\n\t        \tcurrentContract.showSlippage = false;\n        \t\tcurrentContract.slippage = 0;\n        \t\tif(this.to_currency !== null && this.to_currency < 10) {\n                    var amount = BN(this.share).div(BN(100)).times(token_balance).toFixed(0,1);\n                    if (this.share == 100) {\n                        amount = await currentContract.swap_token.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').call();\n                        if(this.showstaked) amount = BN(amount).plus(BN(this.staked_balance)).toFixed(0,1)\n                    }\n/*\t\t\t\t        this.inputs = this.inputs.map(v=>0)\n\t\t\t\t        Vue.set(this.inputs, this.to_currency, amount / 1e18)\n\t\t\t\t        let ref = 'inputs'+this.to_currency\n\t\t\t\t        this.handle_change_amounts(this.to_currency);*/\n\t\t\t\t        //this.$refs[ref][0].focus();\n\t                let precision = allabis[currentContract.currentContract].coin_precisions[this.to_currency]\n\t\t\t\t\tlet zap_values = Array(currentContract.N_COINS).fill(0)\n\t\t\t\t\ttry {\n                        this.warninglow = false\n                        let calOneCoin = 0;\n                        calOneCoin = await inOneCoin.methods.calc_withdraw_one_coin(amount, this.to_currency).call()\n                        zap_values[this.to_currency] = BN(calOneCoin)\n                        if(zap_values[this.to_currency].eq(BN(0))) this.warninglow = true\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err) {\n\t\t\t\t\t\tconsole.log('calc withdraw one coin error 4444');\n                        if(this.share != '') {\n    \t\t\t\t\t\tthis.show_nobalance = true;\n    \t\t\t\t\t\tthis.show_nobalance_i = this.to_currency;\n                        }\n\t\t\t\t\t}\n\t\t\t        let real_values = Array(currentContract.N_COINS).fill(0)\n\t\t\t        real_values[this.to_currency] = zap_values[this.to_currency].div(precision)\n\t\t\t        this.inputs = this.inputs.map(v=>0)\n\t\t\t        this.inputs[this.to_currency] = this.toFixed(BN(real_values[this.to_currency]), 2,1)\n\t\t\t\t    await this.calcSlippage([], false, zap_values, this.to_currency)\n        \t\t}\n\n\t\t\t\tthis.shareStyles.backgroundColor = 'blue'\n\t\t\t\tthis.shareStyles.color = 'aqua'\n\t\t\t    if (this.share == '---') {\n\t\t\t        this.share = 0;\n\t\t\t    }\n\t\t\t    else if ((this.share > 100) | (this.share < 0))\n\t\t\t        this.shareStyles.backgroundColor = 'red'\n\t\t\t    if(this.to_currency !== null && this.to_currency < 10) return;\n\t\t\t    for (let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t        if ((this.share >=0) & (this.share <= 100)) {\n\t\t\t        \tlet value = BN(this.share / 100 * this.balances[i] * currentContract.c_rates[i] * token_balance / this.token_supply)\n\t\t\t            Vue.set(this.inputs, i, this.toFixed(value, 2, 1))\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            Vue.set(this.inputs, i, 0)\n\t\t\t        }\n\t\t\t        Vue.set(this.inputStyles, i, {\n\t\t\t        \tbackgroundColor: '#707070',\n\t\t\t        \tcolor: '#d0d0d0'\n\t\t\t        })\n\t\t\t    }\n\t\t\t},\n\t\t\tsetAllInputBackground(bgcolor) {\n\t\t\t\tfor(let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t\t\tVue.set(this.inputStyles, i, Object.assign(this.inputStyles[i] || {}, {backgroundColor: bgcolor}))\n\t\t\t\t}\n\t\t\t},\n\t        async handle_migrate_new() {\n\t        \tif(this.currentPool == 'compound')\n\t        \t\treturn common.handle_migrate_new('new')\n\t        \tthis.share = 100\n\t        \tawait this.handle_remove_liquidity();\n\t        },\n        },\n\n    }\n</script>\n\n<style>\n\t#withdrawold {\n\t\tmargin-left: 3px;\n\t\tcolor: white;\n\t}\n\t#amount-warning {\n\t\tmargin-bottom: 1em;\n\t}\n\t#mintr {\n        margin-top: 1em;\n\t\tmargin-left: 1em;\n\t}\n\t#withdraw_buttons {\n\t\ttext-align: center;\n\t\tmargin-top: 3px;\n\t}\n    .currency_label {\n        display: block;\n        margin-bottom: 0.3em;\n    }\n    .currency_label .token-icon {\n        margin-right: 0.6em;\n    }\n    .withdrawin {\n        margin-bottom: 0.3em;\n    }\n    .input.address.btc {\n        margin-top: 1em;\n    }\n    .simple-error.invalid-address {\n        margin-bottom: 1em;\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Withdraw.vue?vue&type=template&id=01baa94e&\"\nimport script from \"./Withdraw.vue?vue&type=script&lang=js&\"\nexport * from \"./Withdraw.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Withdraw.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}