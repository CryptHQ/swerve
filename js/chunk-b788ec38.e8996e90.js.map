{"version":3,"sources":["webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_baseKeys.js","webpack:///./node_modules/lodash/stubFalse.js","webpack:///./node_modules/lodash/isBuffer.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/ethereumjs-util/dist/secp256k1-adapter.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/_baseIsArguments.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/isArrayLike.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/ethereumjs-util/dist/secp256k1-lib/index.js","webpack:///./node_modules/lodash/_baseTimes.js","webpack:///./node_modules/ethereumjs-util/dist/secp256k1-lib/der.js","webpack:///./node_modules/lodash/_nativeKeys.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/_arrayLikeKeys.js","webpack:///./node_modules/lodash/isTypedArray.js","webpack:///./node_modules/lodash/_baseIsTypedArray.js","webpack:///./node_modules/lodash/_overArg.js","webpack:///./node_modules/lodash/isFunction.js","webpack:///./node_modules/lodash/_nodeUtil.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/_baseUnary.js","webpack:///./node_modules/lodash/isLength.js","webpack:///./node_modules/ethereumjs-util/dist/index.js","webpack:///./node_modules/lodash/_isIndex.js","webpack:///./node_modules/lodash/isArguments.js","webpack:///./node_modules/lodash/_isPrototype.js","webpack:///./node_modules/lodash/keys.js"],"names":["Symbol","objectProto","Object","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","getRawTag","value","isOwn","call","tag","unmasked","e","result","module","exports","isPrototype","nativeKeys","baseKeys","object","key","push","stubFalse","freeExports","nodeType","freeModule","moduleExports","Buffer","root","nativeIsBuffer","isBuffer","isObjectLike","secp256k1","secp256k1v3","der","privateKeyVerify","privateKey","length","Uint8Array","from","privateKeyExport","compressed","RangeError","publicKey","privateKeyImport","Error","privateKeyNegate","privateKeyModInverse","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyCreate","publicKeyConvert","publicKeyVerify","publicKeyTweakAdd","publicKeyTweakMul","publicKeyCombine","publicKeys","keys","forEach","signatureNormalize","signature","signatureExport","signatureImport","signatureImportLax","sigObj","sign","message","options","TypeError","signOptions","data","noncefn","algo","attempt","bufferAlgo","bufferData","buffer","sig","ecdsaSign","recovery","recid","verify","ecdsaVerify","recover","ecdsaRecover","ecdh","ecdhUnsafe","isObject","type","baseGetTag","argsTag","baseIsArguments","objectToString","freeGlobal","freeSelf","self","Function","isFunction","isLength","isArrayLike","nullTag","undefinedTag","BN","EC","ec","ecparams","curve","d","ucmp","n","point","g","mul","toPublicKey","getX","getY","bn","isZero","invm","toArrayLike","r","s","concat","keyFromPublic","scalar","shared","pub","x","y","alloc","isOdd","copy","baseTimes","iteratee","index","Array","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","lenb","len","slice","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","overArg","global","isArray","isArguments","isIndex","isTypedArray","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","func","transform","arg","asyncTag","genTag","proxyTag","freeProcess","process","types","require","binding","MAX_SAFE_INTEGER","_typeof","iterator","obj","constructor","_require","keccak224","keccak384","k256","keccak256","keccak512","assert","rlp","createHash","assign","MAX_INTEGER","TWO_POW256","KECCAK256_NULL_S","SHA3_NULL_S","KECCAK256_NULL","SHA3_NULL","KECCAK256_RLP_ARRAY_S","SHA3_RLP_ARRAY_S","KECCAK256_RLP_ARRAY","SHA3_RLP_ARRAY","KECCAK256_RLP_S","SHA3_RLP_S","KECCAK256_RLP","SHA3_RLP","zeros","bytes","allocUnsafe","fill","zeroAddress","addressLength","bufferToHex","setLengthLeft","setLength","msg","right","buf","toBuffer","setLengthRight","unpad","stripZeros","a","stripHexPrefix","first","v","isHexString","padToEven","intToBuffer","isBN","toArray","bufferToInt","toNumber","fromSigned","num","fromTwos","toUnsigned","toTwos","keccak","bits","sha3","sha256","update","digest","ripemd160","padded","hash","rlphash","encode","isValidPrivate","isValidPublic","sanitize","pubToAddress","publicToAddress","pubKey","privateToPublic","importPublic","ecsign","msgHash","ret","hashPersonalMessage","prefix","ecrecover","senderPubKey","toRpcSig","fromRpcSig","privateToAddress","isValidAddress","address","test","isZeroAddress","addHexPrefix","toChecksumAddress","toLowerCase","i","parseInt","toUpperCase","isValidChecksumAddress","generateAddress","nonce","isPrecompiled","str","isHexPrefixed","isValidSignature","homestead","SECP256K1_N_DIV_2","SECP256K1_N","gt","cmp","baToJSON","ba","array","defineProperties","fields","raw","_fields","toJSON","label","field","this","serialize","getter","setter","allowZero","allowLess","name","defineProperty","enumerable","configurable","get","set","default","alias","decode","indexOf","reIsUint","propertyIsEnumerable","arguments","Ctor","proto"],"mappings":"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","file":"js/chunk-b788ec38.e8996e90.js","sourcesContent":["var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","'use strict';\n\nvar secp256k1 = require('ethereum-cryptography/secp256k1');\n\nvar secp256k1v3 = require('./secp256k1-lib/index');\nvar der = require('./secp256k1-lib/der');\n\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\nvar privateKeyVerify = function privateKeyVerify(privateKey) {\n  // secp256k1 v4 version throws when privateKey length is not 32\n  if (privateKey.length !== 32) {\n    return false;\n  }\n\n  return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\nvar privateKeyExport = function privateKeyExport(privateKey, compressed) {\n  // privateKeyExport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n\n  return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\nvar privateKeyImport = function privateKeyImport(privateKey) {\n  // privateKeyImport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  privateKey = der.privateKeyImport(privateKey);\n  if (privateKey !== null && privateKey.length === 32 && privateKeyVerify(privateKey)) {\n    return privateKey;\n  }\n\n  throw new Error(\"couldn't import from DER format\");\n};\n\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar privateKeyNegate = function privateKeyNegate(privateKey) {\n  return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar privateKeyModInverse = function privateKeyModInverse(privateKey) {\n  if (privateKey.length !== 32) {\n    throw new Error('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nvar privateKeyTweakAdd = function privateKeyTweakAdd(privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nvar privateKeyTweakMul = function privateKeyTweakMul(privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyCreate = function publicKeyCreate(privateKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyConvert = function publicKeyConvert(publicKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nvar publicKeyVerify = function publicKeyVerify(publicKey) {\n  // secp256k1 v4 version throws when publicKey length is not 33 or 65\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyTweakAdd = function publicKeyTweakAdd(publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyTweakMul = function publicKeyTweakMul(publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar publicKeyCombine = function publicKeyCombine(publicKeys, compressed) {\n  var keys = [];\n  publicKeys.forEach(function (publicKey) {\n    keys.push(Uint8Array.from(publicKey));\n  });\n\n  return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureNormalize = function signatureNormalize(signature) {\n  return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureExport = function signatureExport(signature) {\n  return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureImport = function signatureImport(signature) {\n  return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\nvar signatureImportLax = function signatureImportLax(signature) {\n  // signatureImportLax method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure that signature is greater than 0\n  if (signature.length === 0) {\n    throw new RangeError('signature length is invalid');\n  }\n\n  var sigObj = der.signatureImportLax(signature);\n  if (sigObj === null) {\n    throw new Error(\"couldn't parse DER signature\");\n  }\n\n  return secp256k1v3.signatureImport(sigObj);\n};\n\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\nvar sign = function sign(message, privateKey, options) {\n  if (options === null) {\n    throw new TypeError('options should be an Object');\n  }\n\n  var signOptions = void 0;\n\n  if (options) {\n    signOptions = {};\n\n    if (options.data === null) {\n      throw new TypeError('options.data should be a Buffer');\n    }\n\n    if (options.data) {\n      // validate option.data length\n      if (options.data.length !== 32) {\n        throw new RangeError('options.data length is invalid');\n      }\n\n      signOptions.data = new Uint8Array(options.data);\n    }\n\n    if (options.noncefn === null) {\n      throw new TypeError('options.noncefn should be a Function');\n    }\n\n    if (options.noncefn) {\n      //  convert option.noncefn function signature\n      signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n        var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n        var bufferData = data != null ? Buffer.from(data) : null;\n\n        var buffer = Buffer.from('');\n\n        if (options.noncefn) {\n          buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n        }\n\n        return Uint8Array.from(buffer);\n      };\n    }\n  }\n\n  var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n\n  return {\n    signature: Buffer.from(sig.signature),\n    recovery: sig.recid\n  };\n};\n\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nvar verify = function verify(message, signature, publicKey) {\n  // note: secp256k1 v4 verify method has a different argument order\n  return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar recover = function recover(message, signature, recid, compressed) {\n  // note: secp256k1 v4 recover method has a different argument order\n  return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nvar ecdh = function ecdh(publicKey, privateKey) {\n  // note: secp256k1 v3 doesn't allow optional parameter\n  return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\n\n/**\n * Compute an EC Diffie-Hellman secret and return public key as result\n * @method ecdhUnsafe\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nvar ecdhUnsafe = function ecdhUnsafe(publicKey, privateKey, compressed) {\n  // ecdhUnsafe method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure valid publicKey length\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    throw new RangeError('public key length is invalid');\n  }\n\n  // ensure valid privateKey length\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};\n\nmodule.exports = {\n  privateKeyVerify: privateKeyVerify,\n  privateKeyExport: privateKeyExport,\n  privateKeyImport: privateKeyImport,\n  privateKeyNegate: privateKeyNegate,\n  privateKeyModInverse: privateKeyModInverse,\n  privateKeyTweakAdd: privateKeyTweakAdd,\n  privateKeyTweakMul: privateKeyTweakMul,\n\n  publicKeyCreate: publicKeyCreate,\n  publicKeyConvert: publicKeyConvert,\n  publicKeyVerify: publicKeyVerify,\n  publicKeyTweakAdd: publicKeyTweakAdd,\n  publicKeyTweakMul: publicKeyTweakMul,\n  publicKeyCombine: publicKeyCombine,\n\n  signatureNormalize: signatureNormalize,\n  signatureExport: signatureExport,\n  signatureImport: signatureImport,\n  signatureImportLax: signatureImportLax,\n\n  sign: sign,\n  verify: verify,\n  recover: recover,\n\n  ecdh: ecdh,\n  ecdhUnsafe: ecdhUnsafe\n};","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","'use strict';\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nvar BN = require('bn.js');\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey);\n  if (d.ucmp(ecparams.n) >= 0) {\n    throw new Error('couldn\\'t export to DER format');\n  }\n\n  var point = ec.g.mul(d);\n  return toPublicKey(point.getX(), point.getY(), compressed);\n};\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey);\n  if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n    throw new Error('private key range is invalid');\n  }\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r);\n  if (r.ucmp(ecparams.n) >= 0) {\n    r = new BN(0);\n  }\n\n  var s = new BN(sigObj.s);\n  if (s.ucmp(ecparams.n) >= 0) {\n    s = new BN(0);\n  }\n\n  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var point = ec.keyFromPublic(publicKey);\n\n  var scalar = new BN(privateKey);\n  if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n    throw new Error('scalar was invalid (zero or overflow)');\n  }\n\n  var shared = point.pub.mul(scalar);\n  return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\n\nvar toPublicKey = function toPublicKey(x, y, compressed) {\n  var publicKey = void 0;\n\n  if (compressed) {\n    publicKey = Buffer.alloc(33);\n    publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n  } else {\n    publicKey = Buffer.alloc(65);\n    publicKey[0] = 0x04;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n  }\n\n  return publicKey;\n};","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","\"use strict\";\n\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n// begin\n0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n// private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n// middle\n0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x21, 0x02, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n// public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n// begin\n0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n// private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n// middle\n0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x41, 0x04, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0e, 0x11, 0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10, 0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n// public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n  privateKey.copy(result, compressed ? 8 : 9);\n  publicKey.copy(result, compressed ? 181 : 214);\n  return result;\n};\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length;\n\n  // sequence header\n  var index = 0;\n  if (length < index + 1 || privateKey[index] !== 0x30) return null;\n  index += 1;\n\n  // sequence length constructor\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return null;\n\n  var lenb = privateKey[index] & 0x7f;\n  index += 1;\n  if (lenb < 1 || lenb > 2) return null;\n  if (length < index + lenb) return null;\n\n  // sequence length\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n  index += lenb;\n  if (length < index + len) return null;\n\n  // sequence element 0: version number (=1)\n  if (length < index + 3 || privateKey[index] !== 0x02 || privateKey[index + 1] !== 0x01 || privateKey[index + 2] !== 0x01) {\n    return null;\n  }\n  index += 3;\n\n  // sequence element 1: octet string, up to 32 bytes\n  if (length < index + 2 || privateKey[index] !== 0x04 || privateKey[index + 1] > 0x20 || length < index + 2 + privateKey[index + 1]) {\n    return null;\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\n\nexports.signatureImportLax = function (signature) {\n  var r = Buffer.alloc(32, 0);\n  var s = Buffer.alloc(32, 0);\n\n  var length = signature.length;\n  var index = 0;\n\n  // sequence tag byte\n  if (signature[index++] !== 0x30) {\n    return null;\n  }\n\n  // sequence length byte\n  var lenbyte = signature[index++];\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80;\n    if (index > length) {\n      return null;\n    }\n  }\n\n  // sequence tag byte for r\n  if (signature[index++] !== 0x02) {\n    return null;\n  }\n\n  // length for r\n  var rlen = signature[index++];\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80;\n    if (index + lenbyte > length) {\n      return null;\n    }\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      rlen = (rlen << 8) + signature[index];\n    }\n  }\n  if (rlen > length - index) {\n    return null;\n  }\n  var rindex = index;\n  index += rlen;\n\n  // sequence tag byte for s\n  if (signature[index++] !== 0x02) {\n    return null;\n  }\n\n  // length for s\n  var slen = signature[index++];\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80;\n    if (index + lenbyte > length) {\n      return null;\n    }\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      slen = (slen << 8) + signature[index];\n    }\n  }\n  if (slen > length - index) {\n    return null;\n  }\n  var sindex = index;\n  index += slen;\n\n  // ignore leading zeros in r\n  for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1) {}\n  // copy r value\n  if (rlen > 32) {\n    return null;\n  }\n  var rvalue = signature.slice(rindex, rindex + rlen);\n  rvalue.copy(r, 32 - rvalue.length);\n\n  // ignore leading zeros in s\n  for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1) {}\n  // copy s value\n  if (slen > 32) {\n    return null;\n  }\n  var svalue = signature.slice(sindex, sindex + slen);\n  svalue.copy(s, 32 - svalue.length);\n\n  return { r: r, s: s };\n};","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _require = require('ethereum-cryptography/keccak'),\n    keccak224 = _require.keccak224,\n    keccak384 = _require.keccak384,\n    k256 = _require.keccak256,\n    keccak512 = _require.keccak512;\n\nvar secp256k1 = require('./secp256k1-adapter');\nvar assert = require('assert');\nvar rlp = require('rlp');\nvar BN = require('bn.js');\nvar createHash = require('create-hash');\nvar Buffer = require('safe-buffer').Buffer;\nObject.assign(exports, require('ethjs-util'));\n\n/**\n * the max integer that this VM can handle (a ```BN```)\n * @var {BN} MAX_INTEGER\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n\n/**\n * 2^256 (a ```BN```)\n * @var {BN} TWO_POW256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n\n/**\n * Keccak-256 hash of null (a ```String```)\n * @var {String} KECCAK256_NULL_S\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nexports.SHA3_NULL_S = exports.KECCAK256_NULL_S;\n\n/**\n * Keccak-256 hash of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_NULL\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\nexports.SHA3_NULL = exports.KECCAK256_NULL;\n\n/**\n * Keccak-256 of an RLP of an empty array (a ```String```)\n * @var {String} KECCAK256_RLP_ARRAY_S\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\nexports.SHA3_RLP_ARRAY_S = exports.KECCAK256_RLP_ARRAY_S;\n\n/**\n * Keccak-256 of an RLP of an empty array (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP_ARRAY\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\nexports.SHA3_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY;\n\n/**\n * Keccak-256 hash of the RLP of null  (a ```String```)\n * @var {String} KECCAK256_RLP_S\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\nexports.SHA3_RLP_S = exports.KECCAK256_RLP_S;\n\n/**\n * Keccak-256 hash of the RLP of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\nexports.SHA3_RLP = exports.KECCAK256_RLP;\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n * @var {Function}\n */\nexports.BN = BN;\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n * @var {Function}\n */\nexports.rlp = rlp;\n\n/**\n * [`secp256k1`](https://github.com/cryptocoinjs/secp256k1-node/)\n * @var {Object}\n */\nexports.secp256k1 = secp256k1;\n\n/**\n * Returns a buffer filled with 0s\n * @method zeros\n * @param {Number} bytes  the number of bytes the buffer should be\n * @return {Buffer}\n */\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n\n/**\n  * Returns a zero address\n  * @method zeroAddress\n  * @return {String}\n  */\nexports.zeroAddress = function () {\n  var addressLength = 20;\n  var zeroAddress = exports.zeros(addressLength);\n  return exports.bufferToHex(zeroAddress);\n};\n\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @method lsetLength\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @param {Boolean} [right=false] whether to start padding form the left or right\n * @return {Buffer|Array}\n */\nexports.setLengthLeft = exports.setLength = function (msg, length, right) {\n  var buf = exports.zeros(length);\n  msg = exports.toBuffer(msg);\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n    return msg.slice(-length);\n  }\n};\n\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @return {Buffer|Array}\n */\nexports.setLengthRight = function (msg, length) {\n  return exports.setLength(msg, length, true);\n};\n\n/**\n * Trims leading zeros from a `Buffer` or an `Array`\n * @param {Buffer|Array|String} a\n * @return {Buffer|Array|String}\n */\nexports.unpad = exports.stripZeros = function (a) {\n  a = exports.stripHexPrefix(a);\n  var first = a[0];\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n  return a;\n};\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param {*} v the value\n */\nexports.toBuffer = function (v) {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (exports.isHexString(v)) {\n        v = Buffer.from(exports.padToEven(exports.stripHexPrefix(v)), 'hex');\n      } else {\n        v = Buffer.from(v);\n      }\n    } else if (typeof v === 'number') {\n      v = exports.intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n  return v;\n};\n\n/**\n * Converts a `Buffer` to a `Number`\n * @param {Buffer} buf\n * @return {Number}\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n  return new BN(exports.toBuffer(buf)).toNumber();\n};\n\n/**\n * Converts a `Buffer` into a hex `String`\n * @param {Buffer} buf\n * @return {String}\n */\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param {Buffer} num\n * @return {BN}\n */\nexports.fromSigned = function (num) {\n  return new BN(num).fromTwos(256);\n};\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param {BN} num\n * @return {Buffer}\n */\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n\n/**\n * Creates Keccak hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the Keccak width\n * @return {Buffer}\n */\nexports.keccak = function (a, bits) {\n  a = exports.toBuffer(a);\n  if (!bits) bits = 256;\n\n  switch (bits) {\n    case 224:\n      {\n        return keccak224(a);\n      }\n    case 256:\n      {\n        return k256(a);\n      }\n    case 384:\n      {\n        return keccak384(a);\n      }\n    case 512:\n      {\n        return keccak512(a);\n      }\n    default:\n      {\n        throw new Error('Invald algorithm: keccak' + bits);\n      }\n  }\n};\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256)\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.keccak256 = function (a) {\n  return exports.keccak(a);\n};\n\n/**\n * Creates SHA-3 (Keccak) hash of the input [OBSOLETE]\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the SHA-3 width\n * @return {Buffer}\n */\nexports.sha3 = exports.keccak;\n\n/**\n * Creates SHA256 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.sha256 = function (a) {\n  a = exports.toBuffer(a);\n  return createHash('sha256').update(a).digest();\n};\n\n/**\n * Creates RIPEMD160 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Boolean} padded whether it should be padded to 256 bits or not\n * @return {Buffer}\n */\nexports.ripemd160 = function (a, padded) {\n  a = exports.toBuffer(a);\n  var hash = createHash('rmd160').update(a).digest();\n  if (padded === true) {\n    return exports.setLength(hash, 32);\n  } else {\n    return hash;\n  }\n};\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\nexports.rlphash = function (a) {\n  return exports.keccak(rlp.encode(a));\n};\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n * @param {Buffer} privateKey\n * @return {Boolean}\n */\nexports.isValidPrivate = function (privateKey) {\n  return secp256k1.privateKeyVerify(privateKey);\n};\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param {Buffer} publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Boolean}\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n  }\n\n  if (!sanitize) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(publicKey);\n};\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param {Buffer} pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Buffer}\n */\nexports.pubToAddress = exports.publicToAddress = function (pubKey, sanitize) {\n  pubKey = exports.toBuffer(pubKey);\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n  }\n  assert(pubKey.length === 64);\n  // Only take the lower 160bits of the hash\n  return exports.keccak(pubKey).slice(-20);\n};\n\n/**\n * Returns the ethereum public key of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\nvar privateToPublic = exports.privateToPublic = function (privateKey) {\n  privateKey = exports.toBuffer(privateKey);\n  // skip the type flag and use the X, Y points\n  return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n\n/**\n * Converts a public key to the Ethereum format.\n * @param {Buffer} publicKey\n * @return {Buffer}\n */\nexports.importPublic = function (publicKey) {\n  publicKey = exports.toBuffer(publicKey);\n  if (publicKey.length !== 64) {\n    publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n  }\n  return publicKey;\n};\n\n/**\n * ECDSA sign\n * @param {Buffer} msgHash\n * @param {Buffer} privateKey\n * @return {Object}\n */\nexports.ecsign = function (msgHash, privateKey) {\n  var sig = secp256k1.sign(msgHash, privateKey);\n\n  var ret = {};\n  ret.r = sig.signature.slice(0, 32);\n  ret.s = sig.signature.slice(32, 64);\n  ret.v = sig.recovery + 27;\n  return ret;\n};\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n * @param message\n * @returns {Buffer} hash\n */\nexports.hashPersonalMessage = function (message) {\n  var prefix = exports.toBuffer('\\x19Ethereum Signed Message:\\n' + message.length.toString());\n  return exports.keccak(Buffer.concat([prefix, message]));\n};\n\n/**\n * ECDSA public key recovery from signature\n * @param {Buffer} msgHash\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {Buffer} publicKey\n */\nexports.ecrecover = function (msgHash, v, r, s) {\n  var signature = Buffer.concat([exports.setLength(r, 32), exports.setLength(s, 32)], 64);\n  var recovery = v - 27;\n  if (recovery !== 0 && recovery !== 1) {\n    throw new Error('Invalid signature v value');\n  }\n  var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n  return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {String} sig\n */\nexports.toRpcSig = function (v, r, s) {\n  // NOTE: with potential introduction of chainId this might need to be updated\n  if (v !== 27 && v !== 28) {\n    throw new Error('Invalid recovery id');\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  // FIXME: this might change in the future - https://github.com/ethereum/go-ethereum/issues/2053\n  return exports.bufferToHex(Buffer.concat([exports.setLengthLeft(r, 32), exports.setLengthLeft(s, 32), exports.toBuffer(v - 27)]));\n};\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * @param {String} sig\n * @return {Object}\n */\nexports.fromRpcSig = function (sig) {\n  sig = exports.toBuffer(sig);\n\n  // NOTE: with potential introduction of chainId this might need to be updated\n  if (sig.length !== 65) {\n    throw new Error('Invalid signature length');\n  }\n\n  var v = sig[64];\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: sig.slice(0, 32),\n    s: sig.slice(32, 64)\n  };\n};\n\n/**\n * Returns the ethereum address of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\nexports.privateToAddress = function (privateKey) {\n  return exports.publicToAddress(privateToPublic(privateKey));\n};\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too\n * @param {String} address\n * @return {Boolean}\n */\nexports.isValidAddress = function (address) {\n  return (/^0x[0-9a-fA-F]{40}$/.test(address)\n  );\n};\n\n/**\n  * Checks if a given address is a zero address\n  * @method isZeroAddress\n  * @param {String} address\n  * @return {Boolean}\n  */\nexports.isZeroAddress = function (address) {\n  var zeroAddress = exports.zeroAddress();\n  return zeroAddress === exports.addHexPrefix(address);\n};\n\n/**\n * Returns a checksummed address\n * @param {String} address\n * @return {String}\n */\nexports.toChecksumAddress = function (address) {\n  address = exports.stripHexPrefix(address).toLowerCase();\n  var hash = exports.keccak(address).toString('hex');\n  var ret = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase();\n    } else {\n      ret += address[i];\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Checks if the address is a valid checksummed address\n * @param {Buffer} address\n * @return {Boolean}\n */\nexports.isValidChecksumAddress = function (address) {\n  return exports.isValidAddress(address) && exports.toChecksumAddress(address) === address;\n};\n\n/**\n * Generates an address of a newly created contract\n * @param {Buffer} from the address which is creating this new address\n * @param {Buffer} nonce the nonce of the from account\n * @return {Buffer}\n */\nexports.generateAddress = function (from, nonce) {\n  from = exports.toBuffer(from);\n  nonce = new BN(nonce);\n\n  if (nonce.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    nonce = null;\n  } else {\n    nonce = Buffer.from(nonce.toArray());\n  }\n\n  // Only take the lower 160bits of the hash\n  return exports.rlphash([from, nonce]).slice(-20);\n};\n\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium)\n * @param {Buffer|String} address\n * @return {Boolean}\n */\nexports.isPrecompiled = function (address) {\n  var a = exports.unpad(address);\n  return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\"\n * @param {String} str\n * @return {String}\n */\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return exports.isHexPrefixed(str) ? str : '0x' + str;\n};\n\n/**\n * Validate ECDSA signature\n * @method isValidSignature\n * @param {Buffer} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @param {Boolean} [homestead=true]\n * @return {Boolean}\n */\n\nexports.isValidSignature = function (v, r, s, homestead) {\n  var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n  var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false;\n  }\n\n  if (v !== 27 && v !== 28) {\n    return false;\n  }\n\n  r = new BN(r);\n  s = new BN(s);\n\n  if (r.isZero() || r.gt(SECP256K1_N) || s.isZero() || s.gt(SECP256K1_N)) {\n    return false;\n  }\n\n  if (homestead === false && new BN(s).cmp(SECP256K1_N_DIV_2) === 1) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Converts a `Buffer` or `Array` to JSON\n * @param {Buffer|Array} ba\n * @return {Array|String|null}\n */\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return '0x' + ba.toString('hex');\n  } else if (ba instanceof Array) {\n    var array = [];\n    for (var i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n    return array;\n  }\n};\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param {Object} self the `Object` to define properties on\n * @param {Array} fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param {*} data data to be validated against the definitions\n */\nexports.defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = [];\n\n  // attach the `toJSON`\n  self.toJSON = function (label) {\n    if (label) {\n      var obj = {};\n      self._fields.forEach(function (field) {\n        obj[field] = '0x' + self[field].toString('hex');\n      });\n      return obj;\n    }\n    return exports.baToJSON(this.raw);\n  };\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw);\n  };\n\n  fields.forEach(function (field, i) {\n    self._fields.push(field.name);\n    function getter() {\n      return self.raw[i];\n    }\n    function setter(v) {\n      v = exports.toBuffer(v);\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n\n      if (field.allowLess && field.length) {\n        v = exports.stripZeros(v);\n        assert(field.length >= v.length, 'The field ' + field.name + ' must not have more ' + field.length + ' bytes');\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(field.length === v.length, 'The field ' + field.name + ' must have byte length of ' + field.length);\n      }\n\n      self.raw[i] = v;\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n\n    if (field.default) {\n      self[field.name] = field.default;\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  });\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(exports.stripHexPrefix(data), 'hex');\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data);\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      }\n\n      // make sure all the items are buffers\n      data.forEach(function (d, i) {\n        self[self._fields[i]] = exports.toBuffer(d);\n      });\n    } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n      var keys = Object.keys(data);\n      fields.forEach(function (field) {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n"],"sourceRoot":""}