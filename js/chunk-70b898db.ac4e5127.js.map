{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/modules/es.array.flat-map.js","webpack:///./src/components/common/priceStore.js","webpack:///./src/components/TotalDeposits.vue?a890","webpack:///src/components/TotalDeposits.vue","webpack:///./src/components/TotalDeposits.vue?6dfa","webpack:///./src/components/TotalDeposits.vue","webpack:///./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack:///./src/components/TotalDeposits.vue?8dd8","webpack:///./node_modules/core-js/internals/flatten-into-array.js"],"names":["$","aFunction","toObject","fails","arrayMethodIsStrict","test","nativeSort","sort","FAILS_ON_UNDEFINED","undefined","FAILS_ON_NULL","STRICT_METHOD","FORCED","target","proto","forced","comparefn","call","this","flattenIntoArray","toLength","arraySpeciesCreate","flatMap","callbackfn","A","O","sourceLen","length","arguments","state","btcPrice","getBTCPrice","helpers","fetch","req","json","res","bitcoin","usd","render","_vm","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","expression","attrs","domProps","Array","isArray","showbars","_i","on","$event","$$a","$$el","$$c","checked","$$v","$$i","concat","slice","_v","showline","ref","chartdata","coinchartdata","piechartdata","piechartdatacoins","totalDeposits","mypiechartdata","staticRenderFns","component","addToUnscopables","bind","original","source","start","depth","mapper","thisArg","element","targetIndex","sourceIndex","mapFn","TypeError","module","exports"],"mappings":"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A,yEACA,+BADA,yCAEA,2BAFA,OAFA,CAMA,SAIA,WAEA,gBACA,OACA,yBACA,qBACA,cACA,YAEA,OACA,0BAEA,SACA,6DAEA,eACA,OACA,kBAGA,aACA,KACA,oBACA,iBACA,YACA,WACA,sBACA,mBACA,yEACA,yDADA,yCAEA,2BAFA,OAFA,CAMA,MACA,QACA,sBACA,aACA,YAKA,WAEA,eACA,OACA,WACA,aACA,cACA,cACA,YAEA,OACA,0BAEQ,cAAR,CACA,YAEA,aACA,QACA,cACA,UACA,OACA,cAGA,OACA,QACA,kBACA,kBACA,qDACA,6BAHA,MASA,QACA,kBACA,YACA,cAIA,WACA,SACA,eACA,wBACA,YACA,cACA,eACA,cACA,cACA,YACA,cACA,cAEA,kBAIA,OACA,YACA,OACA,2BACA,OACA,gBAGU,YAAV,CACA,WACA,OACA,kBACA,MACA,gCACA,sCACA,SAGA,sBAEA,OACA,QACA,OACA,iBAIA,UACA,SACA,gBACA,eAFA,WAGA,sIAGA,QACA,aAGA,WACA,cACA,mBACA,gBACA,eACA,YACA,YACA,cACA,cACA,UACA,YACA,QACA,KACA,QACA,UACA,OACA,QACA,OACA,SAEA,kBAIA,OACA,SADA,SACA,GACA,wBACA,aACA,IACA,UAEA,6CACA,4BAGA,SAXA,SAWA,GACA,wBACA,aACA,cACA,sDAIA,QAhWA,WAgWA,WACA,yFACA,wCACA,sBACA,CACA,gBAIA,QAzWA,WAyWA,yOACA,iCACA,mCACA,6CACA,uCACA,qCAEA,sBACA,yBACA,2BACA,0BACA,gFAXA,UAYA,kBAZA,eAaA,0BAbA,UAcA,gJAdA,eAcA,EAdA,iBAeA,SAfA,QAgBA,IADA,EAfA,OAgBA,2CACA,2BAEA,OADA,gFACA,KAYA,IATA,uCACA,6MACA,IAEA,0BAEA,KA5BA,0CA+BA,EA/BA,KA+BA,EA/BA,KAgCA,QAhCA,uBAiCA,GAjCA,yBAiCA,EAjCA,QAkCA,iCACA,oCACA,4EAEA,WACA,gBACA,2CAPA,+BAjCA,gCA+BA,2CA/BA,MA+CA,kBA/CA,sEA+CA,EA/CA,KA+CA,EA/CA,KAgDA,UAhDA,wDAiDA,mBACA,cACA,OACA,SACA,MArDA,oCAwDA,0EACA,iDAzDA,0CA4DA,EA5DA,KA4DA,EA5DA,KA6DA,8BA7DA,uBA8DA,GA9DA,yBA8DA,EA9DA,QA+DA,iCACA,IAhEA,EAgEA,gCACA,4EAjEA,iBAmEA,aAnEA,IAmEA,0EACA,uBACA,uBACA,sBACA,mCACA,qEACA,MACA,QAGA,mCA7EA,gCA8DA,+BA9DA,sCA4DA,kBA5DA,sJAkFA,kFACA,0CACA,uBACA,cACA,OACA,SACA,MAIA,sBACA,iBAEA,0BACA,qBAEA,uCACA,6MACA,IAGA,KAvGA,iBAyGA,sBAzGA,IAyGA,IAzGA,6CAyGA,EAzGA,KA0GA,GA1GA,KA0GA,qFACA,2FAFA,2BAzGA,8BA8GA,mBACA,YACA,0BACA,SAGA,6HACA,4FAEA,0GAEA,0CAEA,uCAEA,8BACA,8DACA,WAIA,kHACA,eACA,iBAEA,sBACA,cACA,SACA,MAEA,yBAEA,6HACA,4FAEA,2IAEA,0CAEA,uCAEA,8BACA,iFACA,WAIA,kHACA,eACA,iBAEA,2BACA,cACA,SACA,MAEA,8BAEA,gBACA,OACA,qEA1KA,+CAmLA,SACA,aADA,WACA,iLACA,6DACA,uBAFA,wDAGA,iCACA,yBACA,OAEA,+FAEA,0CAEA,mHACA,iHACA,kHAbA,UAcA,6CAdA,eAcA,EAdA,OAeA,4EAfA,UAgBA,iBAhBA,QAgBA,EAhBA,OAkBA,iDACA,WACA,0CACA,+EAEA,WACA,qEACA,oEACA,2DAEA,+HACA,uEACA,oBACA,2CACA,0BACA,2BAGA,kHACA,eACA,iBAEA,wBACA,iBACA,SACA,OAGA,2BA9CA,iDCvlBuV,I,wBCQnVC,EAAY,eACd,EACAtC,EACAqC,GACA,EACA,KACA,WACA,MAIa,aAAAC,E,gCCjBf,IAAIC,EAAmB,EAAQ,QAE/BA,EAAiB,Y,kCCJjB,0BAA4e,EAAG,G,kCCC/e,IAAIxB,EAAU,EAAQ,QAClBlC,EAAW,EAAQ,QACnB2D,EAAO,EAAQ,QAIf5D,EAAmB,SAAUN,EAAQmE,EAAUC,EAAQvD,EAAWwD,EAAOC,EAAOC,EAAQC,GAC1F,IAGIC,EAHAC,EAAcL,EACdM,EAAc,EACdC,IAAQL,GAASL,EAAKK,EAAQC,EAAS,GAG3C,MAAOG,EAAc9D,EAAW,CAC9B,GAAI8D,KAAeP,EAAQ,CAGzB,GAFAK,EAAUG,EAAQA,EAAMR,EAAOO,GAAcA,EAAaR,GAAYC,EAAOO,GAEzEL,EAAQ,GAAK7B,EAAQgC,GACvBC,EAAcpE,EAAiBN,EAAQmE,EAAUM,EAASlE,EAASkE,EAAQ3D,QAAS4D,EAAaJ,EAAQ,GAAK,MACzG,CACL,GAAII,GAAe,iBAAkB,MAAMG,UAAU,sCACrD7E,EAAO0E,GAAeD,EAGxBC,IAEFC,IAEF,OAAOD,GAGTI,EAAOC,QAAUzE","file":"js/chunk-70b898db.ac4e5127.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar test = [];\nvar nativeSort = test.sort;\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD;\n\n// `Array.prototype.sort` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? nativeSort.call(toObject(this))\n      : nativeSort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","import * as helpers from '../../utils/helpers'\n\nexport let state = {\n\tbtcPrice: null,\n}\n\nexport async function getBTCPrice() {\n\tlet req = await helpers.retry(fetch(`https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd`), 300);\n    let res = await req.json();\n    state.btcPrice = res.bitcoin.usd;\n    return res.bitcoin.usd\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"window white\"},[_c('div',{staticClass:\"chartoptions\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.showbars),expression:\"showbars\"}],attrs:{\"id\":\"showbars\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.showbars)?_vm._i(_vm.showbars,null)>-1:(_vm.showbars)},on:{\"change\":function($event){var $$a=_vm.showbars,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showbars=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showbars=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showbars=$$c}}}}),_c('label',{attrs:{\"for\":\"showbars\"}},[_vm._v(\"Show bars\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.showline),expression:\"showline\"}],attrs:{\"id\":\"showline\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.showline)?_vm._i(_vm.showline,null)>-1:(_vm.showline)},on:{\"change\":function($event){var $$a=_vm.showline,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showline=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showline=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showline=$$c}}}}),_c('label',{attrs:{\"for\":\"showline\"}},[_vm._v(\"Show line\")])]),_c('highcharts',{ref:\"highcharts\",attrs:{\"constructor-type\":'stockChart',\"options\":_vm.chartdata}})],1),_c('div',{staticClass:\"window white\"},[_c('highcharts',{ref:\"coincharts\",attrs:{\"constructor-type\":'stockChart',\"options\":_vm.coinchartdata}})],1),_c('div',{staticClass:\"window white\"},[_c('highcharts',{ref:\"piecharts\",attrs:{\"options\":_vm.piechartdata}})],1),_c('div',{staticClass:\"window white\"},[_c('highcharts',{ref:\"piecoinscharts\",attrs:{\"options\":_vm.piechartdatacoins}})],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.totalDeposits > 0),expression:\"totalDeposits > 0\"}],staticClass:\"window white\"},[_c('highcharts',{ref:\"mypiecharts\",attrs:{\"options\":_vm.mypiechartdata}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<div class='window white'>\n\t\t\t<div class='chartoptions'>\n\t\t\t\t<input id='showbars' type='checkbox' v-model='showbars'>\n\t\t\t\t<label for='showbars'>Show bars</label>\n\n\t\t\t\t<input id='showline' type='checkbox' v-model='showline'>\n\t\t\t\t<label for='showline'>Show line</label>\n\t\t\t</div>\n\t\t\t<highcharts :constructor-type=\"'stockChart'\" :options=\"chartdata\" ref='highcharts'></highcharts>\n\t\t</div>\n\n\t\t<div class='window white'>\n\t\t\t<highcharts :constructor-type=\"'stockChart'\" :options='coinchartdata' ref='coincharts'></highcharts>\n\t\t</div>\n\n\t\t<div class='window white'>\n\t\t\t<highcharts :options=\"piechartdata\" ref='piecharts'></highcharts>\n\t\t</div>\n\n\t\t<div class='window white'>\n\t\t\t<highcharts :options=\"piechartdatacoins\" ref='piecoinscharts'></highcharts>\n\t\t</div>\n\n\t\t<div class='window white' v-show='totalDeposits > 0'>\n\t\t\t<highcharts :options=\"mypiechartdata\" ref='mypiecharts'></highcharts>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport Vue from 'vue'\n\n\timport Highcharts from 'highcharts'\n\timport HC_exporting from 'highcharts/modules/exporting';\n\timport HC_exporting_data from 'highcharts/modules/export-data';\n\tHC_exporting(Highcharts);\n\tHC_exporting_data(Highcharts)\n\n\timport {Chart} from 'highcharts-vue'\n\timport stockInit from 'highcharts/modules/stock'\n\tstockInit(Highcharts)\n\n\tHighcharts.setOptions({\n\t\tlang: {\n\t\t\tloading: '',\n\t\t}\n\t})\n\n\timport * as volumeStore from './common/volumeStore'\n\timport allabis from '../allabis'\n\timport * as helpers from '../utils/helpers'\n\n\timport { contract } from '../contract'\n\n\timport * as priceStore from './common/priceStore'\n\n\texport default {\n\t\tcomponents: {\n\t\t\thighcharts: Chart,\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tchartdata: {\n\t\t\t\tchart: {\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t        panKey: 'ctrl',\n\t\t\t        type: 'column',\n\t\t\t        height: 600,\n\t\t\t\t},\n\t\t        title: {\n\t\t        \ttext: 'Total USD Deposits', \n\t\t        },\n                rangeSelector: {\n\t\t            selected: 1\n\t\t        },\n\t\t        plotOptions: {\n\t\t\t\t\tseries: {\n\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t  forced: true,\n\t\t\t\t\t\t  units: [\n\t\t\t\t\t\t    ['day', [1]]\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpoint: {\n\t\t\t\t\t\t\tevents: {\n\t\t\t\t\t\t\t\tclick: (function(self) {\n\t\t\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t\t\tlet index = this.dataGroup ? this.dataGroup.start : this.index\n\t\t\t\t\t\t\t\t\t\tconsole.log(this, index, \"INDEX\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})(this)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tcolumn: {\n\t\t\t\t\t\tstacking: 'normal',\n\t\t\t\t\t\tdataLabels: {\n\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t        exporting: {\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tcontextButton: {\n\t\t\t\t\t\t\tmenuItems: [\"printChart\",\n\t\t\t\t\t                    \"separator\",\n\t\t\t\t\t                    \"downloadPNG\",\n\t\t\t\t\t                    \"downloadJPEG\",\n\t\t\t\t\t                    \"downloadPDF\",\n\t\t\t\t\t                    \"downloadSVG\",\n\t\t\t\t\t                    \"separator\",\n\t\t\t\t\t                    \"downloadCSV\",\n\t\t\t\t\t                    \"downloadXLS\",\n\t\t\t\t\t                    //\"viewData\",\n\t\t\t\t\t                    \"openInCloud\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t            yAxis: {\n\t            \topposite: false,\n\t            \ttitle: {\n\t            \t\ttext: 'Total deposits',\n\t            \t\tstyle: {\n\t            \t\t\tcolor: 'black'\n\t            \t\t},\n\t            \t},\n            \t\tstackLabels: {\n\t\t\t            enabled: false,\n\t\t\t            style: {\n\t\t\t                fontWeight: 'bold',\n\t\t\t                color: ( // theme\n\t\t\t                    Highcharts.defaultOptions.title.style &&\n\t\t\t                    Highcharts.defaultOptions.title.style.color\n\t\t\t                ) || 'gray'\n\t\t\t            }\n\t\t\t        },\n\t            \ttickPixelInterval: 10,\n\t            },\n\t            xAxis: {\n\t            \tlabels: {\t\n\t\t            \tstyle: {\n\t\t            \t\tcolor: 'black'\n\t\t            \t}\n\t            \t},\n\t            },\n\t\t        series: [],\n\t\t        tooltip: {\n\t                valueDecimals: 5,\n\t                pointFormatter() {\n\t                \treturn `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${this.y.toFixed(2)}</b><br/>`\n\t                },\n\t            },\n\t            legend: {\n\t            \tenabled: true,\n\t            },\n\t\t\t},\n\t\t\tpiechartdata: {\n\t\t\t\tchart: {\n\t\t\t        plotBackgroundColor: null,\n\t\t\t        plotBorderWidth: null,\n\t\t\t        plotShadow: false,\n\t\t\t        type: 'pie'\n\t\t\t    },\n\t\t\t    title: {\n\t\t\t        text: 'Pool USD % holdings'\n\t\t\t    },\n\t\t\t    tooltip: {\n\t\t\t        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n\t\t\t    },\n\t\t\t    accessibility: {\n\t\t\t        point: {\n\t\t\t            valueSuffix: '%'\n\t\t\t        }\n\t\t\t    },\n\t\t\t    plotOptions: {\n\t\t\t        pie: {\n\t\t\t            allowPointSelect: true,\n\t\t\t            cursor: 'pointer',\n\t\t\t            dataLabels: {\n\t\t\t                enabled: true,\n\t\t\t                formatter: (function(self) {\n\t\t\t                \treturn function(point) { \n\t\t\t                \t\treturn `<b>${this.key}</b>: \n\t\t\t                \t\t${helpers.formatNumber(self.allPools[this.key], 0)}$\n\t\t\t                \t\t(${this.percentage.toFixed(2)}%)`\n\t\t\t                \t}\n\t\t\t                })(this),\n\t\t\t            }\n\t\t\t        }\n\t\t\t    },\n\t\t\t    series: [],\n\t\t\t},\n\t\t\tpiechartdatacoins: {\n\t\t\t\tchart: {\n\t\t\t        plotBackgroundColor: null,\n\t\t\t        plotBorderWidth: null,\n\t\t\t        plotShadow: false,\n\t\t\t        type: 'pie'\n\t\t\t    },\n\t\t\t    title: {\n\t\t\t        text: 'Pool coin % holdings'\n\t\t\t    },\n\t\t\t    tooltip: {\n\t\t\t        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n\t\t\t    },\n\t\t\t    accessibility: {\n\t\t\t        point: {\n\t\t\t            valueSuffix: '%'\n\t\t\t        }\n\t\t\t    },\n\t\t\t    plotOptions: {\n\t\t\t        pie: {\n\t\t\t            allowPointSelect: true,\n\t\t\t            cursor: 'pointer',\n\t\t\t            dataLabels: {\n\t\t\t                enabled: true,\n\t\t\t                formatter: (function(self) {\n\t\t\t                \treturn function(point) { \n\t\t\t                \t\treturn `<b>${this.key}</b>: \n\t\t\t                \t\t${helpers.formatNumber(self.allCoins[this.key], 0)}$\n\t\t\t                \t\t(${this.percentage.toFixed(2)}%)`\n\t\t\t                \t}\n\t\t\t                })(this),\n\t\t\t            }\n\t\t\t        }\n\t\t\t    },\n\t\t\t    series: [],\n\t\t\t},\n\t\t\tmypiechartdata: {\n\t\t\t\tchart: {\n\t\t\t        plotBackgroundColor: null,\n\t\t\t        plotBorderWidth: null,\n\t\t\t        plotShadow: false,\n\t\t\t        type: 'pie'\n\t\t\t    },\n\t\t\t    title: {\n\t\t\t        text: 'My USD % holdings'\n\t\t\t    },\n\t\t\t    tooltip: {\n\t\t\t        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n\t\t\t    },\n\t\t\t    accessibility: {\n\t\t\t        point: {\n\t\t\t            valueSuffix: '%'\n\t\t\t        }\n\t\t\t    },\n\t\t\t    plotOptions: {\n\t\t\t        pie: {\n\t\t\t            allowPointSelect: true,\n\t\t\t            cursor: 'pointer',\n\t\t\t            dataLabels: {\n\t\t\t                enabled: true,\n\t\t\t                formatter: (function(self) {\n\t\t\t                \treturn function(point) { \n\t\t\t                \t\treturn `<b>${this.key}</b>: \n\t\t\t                \t\t${helpers.formatNumber(self.balances[this.key == 'susd' ? 'susdv2' : this.key],0)}$\n\t\t\t                \t\t(${this.percentage.toFixed(2)}%)`\n\t\t\t                \t}\n\t\t\t                })(this),\n\t\t\t                filter: {\n\t\t\t                    property: 'percentage',\n\t\t\t                    operator: '>',\n\t\t\t                    value: 0\n\t\t\t                },\n\t\t\t            }\n\t\t\t        }\n\t\t\t    },\n\t\t\t    series: [],\n\t\t\t},\n\t\t\tcoinchartdata: {\n\t\t\t\tchart: {\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t        panKey: 'ctrl',\n\t\t\t        type: 'column',\n\t\t\t        height: 600,\n\t\t\t\t},\n\t\t        title: {\n\t\t        \ttext: 'Coin USD Deposits', \n\t\t        },\n                rangeSelector: {\n\t\t            selected: 1\n\t\t        },\n\t\t        plotOptions: {\n\t\t\t\t\tseries: {\n\t\t\t\t\t\tdataGrouping: {\n\t\t\t\t\t\t  forced: true,\n\t\t\t\t\t\t  units: [\n\t\t\t\t\t\t    ['day', [1]]\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpoint: {\n\t\t\t\t\t\t\tevents: {\n\t\t\t\t\t\t\t\tclick: (function(self) {\n\t\t\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t\t\tlet index = this.dataGroup ? this.dataGroup.start : this.index\n\t\t\t\t\t\t\t\t\t\tconsole.log(this, index, \"INDEX\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})(this)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tcolumn: {\n\t\t\t\t\t\tstacking: 'normal',\n\t\t\t\t\t\tdataLabels: {\n\t\t\t\t\t\t\tenabled: false\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t        exporting: {\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tcontextButton: {\n\t\t\t\t\t\t\tmenuItems: [\"printChart\",\n\t\t\t\t\t                    \"separator\",\n\t\t\t\t\t                    \"downloadPNG\",\n\t\t\t\t\t                    \"downloadJPEG\",\n\t\t\t\t\t                    \"downloadPDF\",\n\t\t\t\t\t                    \"downloadSVG\",\n\t\t\t\t\t                    \"separator\",\n\t\t\t\t\t                    \"downloadCSV\",\n\t\t\t\t\t                    \"downloadXLS\",\n\t\t\t\t\t                    //\"viewData\",\n\t\t\t\t\t                    \"openInCloud\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t            yAxis: {\n\t            \topposite: false,\n\t            \ttitle: {\n\t            \t\ttext: 'Total coin deposits',\n\t            \t\tstyle: {\n\t            \t\t\tcolor: 'black'\n\t            \t\t},\n\t            \t},\n            \t\tstackLabels: {\n\t\t\t            enabled: false,\n\t\t\t            style: {\n\t\t\t                fontWeight: 'bold',\n\t\t\t                color: ( // theme\n\t\t\t                    Highcharts.defaultOptions.title.style &&\n\t\t\t                    Highcharts.defaultOptions.title.style.color\n\t\t\t                ) || 'gray'\n\t\t\t            }\n\t\t\t        },\n\t            \ttickPixelInterval: 10,\n\t            },\n\t            xAxis: {\n\t            \tlabels: {\t\n\t\t            \tstyle: {\n\t\t            \t\tcolor: 'black'\n\t\t            \t}\n\t            \t},\n\t            },\n\t\t        series: [],\n\t\t        tooltip: {\n\t                valueDecimals: 5,\n\t                pointFormatter() {\n\t                \treturn `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${this.y.toFixed(2)}</b><br/>`\n\t                },\n\t            },\n\t            legend: {\n\t            \tenabled: true,\n\t            },\n\t\t\t},\n\t\t\tchart: null,\n\t\t\tpiechart: null,\n\t\t\tpiecoinschart: null,\n\t\t\tmypiechart: null,\n\t\t\tcoinchart: null,\n\t\t\tshowbars: true,\n\t\t\tshowline: true,\n\t\t\tallPools: null,\n\t\t\tallCoins: null,\n\t\t\tbalances: {\n\t\t\t\tcompound: -1,\n\t\t\t\tusdt: -1,\n\t\t\t\ty: -1,\n\t\t\t\tbusd: -1,\n\t\t\t\tsusdv2: -1,\n\t\t\t\tpax: -1,\n\t\t\t\ttbtc: -1,\n\t\t\t\tren: -1,\n\t\t\t\tsbtc: -1,\n\t\t\t},\n\t\t\ttotalDeposits: 0,\n\t\t}\n\t\t},\n\n\t\twatch: {\n\t\t\tshowbars(val) {\n\t\t\t\tif(val == false && !this.showline) return;\n\t\t\t\tlet toggle = 'show'\n\t\t\t\tif(!val) {\n\t\t\t\t\ttoggle = 'hide'\n\t\t\t\t}\n\t\t\t\tfor(let i = 0; i < this.chart.series.length - 2; i++) {\n\t\t\t\t\tthis.chart.series[i][toggle]()\n\t\t\t\t}\n\t\t\t},\n\t\t\tshowline(val) {\n\t\t\t\tif(val == false && !this.showbars) return\n\t\t\t\tlet toggle = 'show'\n\t\t\t\tif(!val) toggle = 'hide'\n\t\t\t\tthis.chart.series[this.chart.series.length - 2][toggle]()\n\t\t\t},\n\t\t},\n\n\t\tcreated() {\n\t\t\tthis.$watch(() => contract.multicall && contract.default_account, (val, oldval) => {\n\t\t\t\tif(val && val.toLowerCase() == oldval && oldval.toLowerCase()) return;\n\t\t\t\tif(val) this.showBalances()\n\t\t\t}, {\n\t\t\t\timmediate: true,\n\t\t\t})\n\t\t},\n\n\t\tasync mounted() {\n\t\t\tthis.chart = this.$refs.highcharts.chart;\n\t\t\tthis.piechart = this.$refs.piecharts.chart;\n\t\t\tthis.piecoinschart = this.$refs.piecoinscharts.chart;\n\t\t\tthis.mypiechart = this.$refs.mypiecharts.chart;\n\t\t\tthis.coinchart = this.$refs.coincharts.chart;\n\t\t\tthis\n\t\t\tthis.chart.showLoading()\n\t\t\tthis.piechart.showLoading()\n\t\t\tthis.mypiechart.showLoading()\n\t\t\tthis.coinchart.showLoading()\n\t\t\tlet pools = Object.keys(allabis).filter(pool => pool != 'susd' && pool != 'y' && pool != 'tbtc')\n\t\t\tawait volumeStore.fetchVolumeData(pools, true, 1440)\n\t\t\tlet data = volumeStore.state.volumeData[1440]\n\t\t\tlet btcPrices = await helpers.retry(fetch(`https://api.coingecko.com/api/v3/coins/bitcoin/market_chart/range?vs_currency=usd&from=1589587198&to=${(Date.now() / 1000) | 0}`))\n\t\t\tbtcPrices = await btcPrices.json()\n\t\t\tfor(let btcPool of ['ren', 'sbtc']) {\n\t\t\t\tdata[btcPool] = data[btcPool].map(d => {\n\t\t\t\t\td.balances = d.balances.map(bal => bal * volumeStore.findClosestPrice(d.timestamp, btcPrices.prices))\n\t\t\t\t\treturn d;\n\t\t\t\t})\n\t\t\t}\n\t\t\tdata = Object.keys(data).reduce((obj, key) => {\n\t\t\t\treturn {...obj, [key]: (new Array(Math.max(...Object.values(data).map(arr=>arr.length))-data[key].length).fill({})).concat(data[key])}\n\t\t\t}, {})\n\n\t\t\tconsole.log(data, \"THE DATA\")\n\n\t\t\tlet volumes = {}\n\n\n\t\t\tfor(let [pool, points] of Object.entries(data)) {\n\t\t\t\tvolumes[pool] = []\n\t\t\t\tfor(let point of points) {\n\t\t\t\t\tif(!point.timestamp) continue\n\t\t\t\t\tlet coinBalances = point.balances.map((bal, i) => {\n\t\t\t\t\t\treturn bal * point.rates[i] / 1e18 / allabis[pool == 'susd' ? 'susdv2' : pool].coin_precisions[i]\n\t\t\t\t\t})\n\t\t\t\t\tvolumes[pool].push([\n\t\t\t\t\t\tpoint.timestamp * 1000,\n\t\t\t\t\t\tcoinBalances.reduce((a, b) => a + b, 0)\n\t\t\t\t\t])\n\t\t\t\t}\n\t\t\t}\n\n\n\n\t\t\tfor(let [pool, volume] of Object.entries(volumes)) {\n\t\t\t\tif(pool == 'tbtc') continue\n\t\t\t\tthis.chart.addSeries({\n\t\t\t\t\ttype: 'column',\n\t\t\t\t\tname: pool,\n\t\t\t\t\tdata: volume,\n\t\t\t\t}, false, false)\n\t\t\t}\n\n\t\t\tlet coins = ['DAI', 'USDC', 'USDT', 'TUSD', 'BUSD', 'SUSD', 'PAX', 'renBTC', 'WBTC', 'sBTC']\n\t\t\tlet coinbalances = coins.reduce((a,b)=> (a[b]=[],a),{});\n\n\n\t\t\tfor(let [pool, points] of Object.entries(data)) {\n\t\t\t\tif(pool == 'tbtc') continue\n\t\t\t\tfor(let point of points) {\n\t\t\t\t\tif(!point.timestamp) continue\n\t\t\t\t\tlet coinBalances = point.balances.map((bal, i) => {\n\t\t\t\t\t\treturn bal * point.rates[i] / 1e18 / allabis[pool == 'susd' ? 'susdv2' : pool].coin_precisions[i]\n\t\t\t\t\t})\n\t\t\t\t\tfor(let [i, balance] of coinBalances.entries()) {\n\t\t\t\t\t\tif(pool == 'busd' && i == 3) i = 4\n\t\t\t\t\t\tif(pool == 'susd' && i == 3) i = 5\n\t\t\t\t\t\tif(pool == 'pax' && i == 3) i = 6\n\t\t\t\t\t\tif(['ren', 'sbtc'].includes(pool)) i += 7\n\t\t\t\t\t\tlet hasPoint = coinbalances[coins[i]].find(p => p[0] == point.timestamp*1000)\n\t\t\t\t\t\tif(hasPoint !== undefined) {\n\t\t\t\t\t\t\thasPoint[1] += balance\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcoinbalances[coins[i]].push([point.timestamp*1000, balance])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(let [coin, balance] of Object.entries(coinbalances)) {\n\t\t\t\tbalance.sort((a,b) => a[0] - b[0])\n\t\t\t\tthis.coinchart.addSeries({\n\t\t\t\t\ttype: 'column',\n\t\t\t\t\tname: coin,\n\t\t\t\t\tdata: balance,\n\t\t\t\t}, false, false)\n\t\t\t}\n\n\n\t\t\tthis.chart.hideLoading()\n\t\t\tthis.chart.redraw()\n\n\t\t\tthis.coinchart.hideLoading()\n\t\t\tthis.coinchart.redraw()\n\n\t\t\tlet balances = Object.keys(volumes).reduce((obj, key) => {\n\t\t\t\treturn {...obj, [key]: (new Array(Math.max(...Object.values(volumes).map(arr=>arr.length))-volumes[key].length).fill({})).concat(volumes[key])}\n\t\t\t}, {})\n\n\n\t\t\tlet line = []\n\n\t\t\tfor(let [i, balance] of balances.compound.entries()) {\n\t\t\t\tlet v = Object.values(balances).map(v => v[i]).filter(v=>v[0])\n\t\t\t\tline.push([v[0][0], v.map(v=>v[1]).reduce((a, b) => a + b, 0)])\n\t\t\t}\n\n\t\t\tthis.chart.addSeries({\n\t\t\t\ttype: 'line',\n\t\t\t\tname: `Total USD Deposits`,\n\t\t\t\tdata: line,\n\t\t\t})\n\n\t\t\tthis.allPools = Object.fromEntries(Object.entries(volumes).filter(([p, v]) => p != 'tbtc')\n\t\t\t\t\t\t\t\t\t.map(([p, v]) => [p, volumes[p][volumes[p].length-1][1]]))\n\n\t\t\tlet latestDeposits = Object.keys(volumes).filter(p => p != 'tbtc').map(p => volumes[p][volumes[p].length-1][1])\n\n\t\t\tlet poolHoldings = latestDeposits.reduce((a, b) => a + b, 0)\n\n\t\t\tlet poolPercentages = latestDeposits.map(poolDeposits => (poolDeposits / poolHoldings) * 100)\n\n\t\t\tpoolPercentages = poolPercentages.map((percentage, i) => ({\n\t\t\t\tname: Object.keys(volumes).filter(p => p != 'tbtc')[i],\n\t\t\t\ty: poolPercentages[i],\n\t\t\t}))\n\n\n\t\t\tlet highest = poolPercentages.map(data=>data.y).indexOf(Math.max(...poolPercentages.map(data => data.y)))\n\t\t\tpoolPercentages[highest].sliced = true;\n\t\t\tpoolPercentages[highest].selected = true;\n\n\t\t\tthis.piechart.addSeries({\n\t\t\t\tname: 'Pool %',\n\t\t\t\tdata: poolPercentages,\n\t\t\t}, true, false)\n\n\t\t\tthis.piechart.hideLoading()\n\n\t\t\tthis.allCoins = Object.fromEntries(Object.entries(coinbalances).filter(([p, v]) => p != 'tbtc')\n\t\t\t\t\t\t\t\t\t.map(([p, v]) => [p, coinbalances[p][coinbalances[p].length-1][1]]))\n\n\t\t\tlatestDeposits = Object.keys(coinbalances).filter(p => !['tbtc','hbtc'].includes(p.toLowerCase())).map(p => coinbalances[p][coinbalances[p].length-1][1])\n\n\t\t\tpoolHoldings = latestDeposits.reduce((a, b) => a + b, 0)\n\n\t\t\tpoolPercentages = latestDeposits.map(poolDeposits => (poolDeposits / poolHoldings) * 100)\n\n\t\t\tpoolPercentages = poolPercentages.map((percentage, i) => ({\n\t\t\t\tname: Object.keys(coinbalances).filter(p => !['hbtc','tbtc'].includes(p))[i],\n\t\t\t\ty: poolPercentages[i],\n\t\t\t}))\n\n\n\t\t\thighest = poolPercentages.map(data=>data.y).indexOf(Math.max(...poolPercentages.map(data => data.y)))\n\t\t\tpoolPercentages[highest].sliced = true;\n\t\t\tpoolPercentages[highest].selected = true;\n\n\t\t\tthis.piecoinschart.addSeries({\n\t\t\t\tname: 'Coin %',\n\t\t\t\tdata: poolPercentages,\n\t\t\t}, true, false)\n\n\t\t\tthis.piecoinschart.hideLoading()\n\n\t\t\tthis.chart.update({\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: `Total USD Deposits ${helpers.formatNumber(line[line.length-1][1], 0)}$`\n\t\t\t\t},\n\t\t\t})\n\n\n\n\t\t\n\t\t},\n\n\t\tmethods: {\n\t\t\tasync showBalances() {\n\t\t\t\tlet pools = ['compound','usdt','y','busd','susdv2','pax','ren', 'sbtc']\n\t\t\t\tif(!contract.default_account) return;\n\t\t\t\tcontract.contracts.compound = contract;\n\t\t\t\tlet calls = pools.flatMap(k => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t//balanceOf(address)\n\t\t\t\t\t\t[allabis[k].token_address, '0x70a08231000000000000000000000000' + contract.default_account.slice(2)],\n\t\t\t\t\t\t//get_virtual_price\n\t\t\t\t\t\t[allabis[k].swap_address, \"0xbb7b8b80\"]\n\t\t\t\t\t]})\n\t\t\t\tcalls.push([allabis.susdv2.sCurveRewards_address, '0x70a08231000000000000000000000000' + contract.default_account.slice(2)])\n\t\t\t\tcalls.push([allabis.sbtc.sCurveRewards_address, '0x70a08231000000000000000000000000' + contract.default_account.slice(2)])\n\t\t\t\tcalls.push([allabis.swusd.sCurveRewards_address, '0x70a08231000000000000000000000000' + contract.default_account.slice(2)])\n\t\t\t\tlet aggcalls = await contract.multicall.methods.aggregate(calls).call()\n\t\t\t\tlet decoded = aggcalls[1].map(hex => web3.eth.abi.decodeParameter('uint256', hex))\n\t\t\t\tlet btcPrice = await helpers.retry(priceStore.getBTCPrice())\n\t\t\t\t//this.balances = []\n\t\t\t\thelpers.chunkArr(decoded, 2).slice(0,pools.length).map((v, i) => {\n\t\t\t\t\tlet key = pools[i]\n\t\t\t\t\tVue.set(this.balances, key, +v[0] * (+v[1]) / 1e36);\n\t\t\t\t\tif(['tbtc', 'ren', 'sbtc'].includes(key)) Vue.set(this.balances, key, this.balances[key] * btcPrice)\n\t\t\t\t})\n\t\t\t\tlet len = decoded.length\n\t\t\t\tVue.set(this.balances, 'susdv2', this.balances.susdv2 + (+decoded[len-3] * decoded[9]) / 1e36)\n\t\t\t\tVue.set(this.balances, 'sbtc', this.balances.sbtc + ((+decoded[len-2] * decoded[15]) / 1e36) * btcPrice)\n\t\t\t\tVue.set(this.balances, 'y', this.balances.y + (+decoded[len-1] * decoded[5]) / 1e36)\n\n\t\t\t\tlet deposits = Object.fromEntries(Object.entries(this.balances).map(([k, v]) => [k, v > 0 ? v : 0]))\n\t\t\t\tthis.totalDeposits = Object.values(deposits).reduce((a, b) => a + b, 0)\n\t\t\t\tif(this.totalDeposits > 0) {\n\t\t\t\t\tlet depositPercentages = Object.keys(deposits).map((pool, i) => ({\n\t\t\t\t\t\tname: pool == 'susdv2' ? 'susd' : pool,\n\t\t\t\t\t\ty: deposits[pool] / this.totalDeposits,\n\t\t\t\t\t}))\n\n\t\t\t\t\tlet highest = depositPercentages.map(data=>data.y).indexOf(Math.max(...depositPercentages.map(data => data.y)))\n\t\t\t\t\tdepositPercentages[highest].sliced = true;\n\t\t\t\t\tdepositPercentages[highest].selected = true;\n\n\t\t\t\t\tthis.mypiechart.addSeries({\n\t\t\t\t\t\tname: 'My pool %',\n\t\t\t\t\t\tdata: depositPercentages,\n\t\t\t\t\t}, true, false)\n\t\t\t\t}\n\n\t\t\t\tthis.mypiechart.hideLoading()\n\n\t\t\t},\n\t\t},\n\t}\n</script>\n\n<style scoped>\n\t.chartoptions label:nth-of-type(2) {\n\t\tmargin-left: 1em;\n\t}\n\t.chartoptions {\n\t\tmargin-bottom: 1em;\n\t}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TotalDeposits.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TotalDeposits.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TotalDeposits.vue?vue&type=template&id=6ad8861a&scoped=true&\"\nimport script from \"./TotalDeposits.vue?vue&type=script&lang=js&\"\nexport * from \"./TotalDeposits.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TotalDeposits.vue?vue&type=style&index=0&id=6ad8861a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6ad8861a\",\n  null\n  \n)\n\nexport default component.exports","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\naddToUnscopables('flatMap');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TotalDeposits.vue?vue&type=style&index=0&id=6ad8861a&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TotalDeposits.vue?vue&type=style&index=0&id=6ad8861a&scoped=true&lang=css&\"","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n"],"sourceRoot":""}