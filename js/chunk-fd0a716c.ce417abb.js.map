{"version":3,"sources":["webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/object.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/signature.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/index.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/hash.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/address.js","webpack:///./node_modules/bnc-onboard/node_modules/bn.js/lib/bn.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/externals.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/bytes.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/account.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/constants.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/helpers.js"],"names":["Object","defineProperty","exports","value","defineProperties","ethjsUtil","assert","rlp","bytes_1","self","fields","data","raw","_fields","toJSON","label","obj_1","forEach","field","toString","baToJSON","serialize","encode","i","getter","setter","v","toBuffer","allowZero","Buffer","allocUnsafe","allowLess","length","unpadBuffer","name","push","enumerable","configurable","get","set","default","alias","from","stripHexPrefix","isBuffer","decode","Array","isArray","Error","d","keys_1","keys","indexOf","hashPersonalMessage","isValidSignature","fromRpcSig","toRpcSig","ecrecover","ecsign","_a","ecdsaSign","ecdsaRecover","publicKeyConvert","BN","hash_1","helpers_1","calculateSigRecovery","chainId","isValidSigRecovery","recovery","msgHash","privateKey","sig","recid","ret","r","signature","slice","s","concat","setLengthLeft","senderPubKey","bufferToHex","buf","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","isZero","gt","cmp","message","assertIsBuffer","prefix","keccak","__createBinding","this","create","o","m","k","k2","undefined","__exportStar","p","hasOwnProperty","rlphash","ripemd160FromArray","ripemd160FromString","ripemd160","sha256FromArray","sha256FromString","sha256","keccakFromArray","keccakFromHexString","keccakFromString","keccak256","keccak224","keccak384","k256","keccak512","createHash","a","bits","assertIsString","assertIsHexString","assertIsArray","_sha256","update","digest","padded","_ripemd160","hash","Address","account_1","zero","zeros","fromString","str","isValidAddress","fromPublicKey","pubKey","pubToAddress","fromPrivateKey","privateToAddress","generate","nonce","isBN","generateAddress","toArrayLike","generate2","salt","initCode","generateAddress2","prototype","equals","val","msg","inherits","ctor","superCtor","super_","TempCtor","constructor","number","base","endian","negative","words","red","_init","module","wordSize","e","parseHex","start","end","len","Math","min","z","b","c","charCodeAt","parseBase","mul","move","dest","src","num","max","left","right","_initNumber","_initArray","replace","_parseHex","_parseBase","_strip","toArray","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","modrn","idivn","toNumber","allocate","ArrayType","toBitArray","bitLength","bit","wbit","smallMulTo","lo","ncarry","rword","maxJ","byteLength","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","p224","p192","p25519","MPrime","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","inv","windowSize","wnd","current","currentLen","mont","u","addHexPrefix","toUnsigned","fromSigned","bufferToInt","unpadHexString","unpadArray","setLengthRight","bytes","fill","setLength","stripZeros","first","Uint8Array","isHexString","padToEven","intToBuffer","isHexPrefixed","ba","array","importPublic","privateToPublic","publicToAddress","isValidPublic","isValidPrivate","isValidChecksumAddress","toChecksumAddress","isZeroAddress","zeroAddress","privateKeyVerify","publicKeyCreate","publicKeyVerify","addressLength","addr","hexAddress","test","zeroAddr","eip1191ChainId","address","toLowerCase","parseInt","toUpperCase","nonceBN","publicKey","sanitize","KECCAK256_RLP","KECCAK256_RLP_S","KECCAK256_RLP_ARRAY","KECCAK256_RLP_ARRAY_S","KECCAK256_NULL","KECCAK256_NULL_S","TWO_POW256","MAX_INTEGER"],"mappings":"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","file":"js/chunk-fd0a716c.ce417abb.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineProperties = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\nvar assert = require(\"assert\");\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexports.defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\" + self[field].toString('hex');\n            });\n            return obj_1;\n        }\n        return bytes_1.baToJSON(self.raw);\n    };\n    self.serialize = function serialize() {\n        return rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = bytes_1.toBuffer(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = bytes_1.unpadBuffer(v);\n                assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = bytes_1.toBuffer(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\n//# sourceMappingURL=object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar _a = require('ethereum-cryptography/secp256k1'), ecdsaSign = _a.ecdsaSign, ecdsaRecover = _a.ecdsaRecover, publicKeyConvert = _a.publicKeyConvert;\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexports.ecsign = function (msgHash, privateKey, chainId) {\n    var sig = ecdsaSign(msgHash, privateKey);\n    var recovery = sig.recid;\n    var ret = {\n        r: Buffer.from(sig.signature.slice(0, 32)),\n        s: Buffer.from(sig.signature.slice(32, 64)),\n        v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27,\n    };\n    return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = ecdsaRecover(signature, recovery, msgHash);\n    return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1));\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexports.toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexports.fromRpcSig = function (sig) {\n    var buf = bytes_1.toBuffer(sig);\n    // NOTE: with potential introduction of chainId this might need to be updated\n    if (buf.length !== 65) {\n        throw new Error('Invalid signature length');\n    }\n    var v = buf[64];\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: buf.slice(0, 32),\n        s: buf.slice(32, 64),\n    };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new BN(r);\n    var sBN = new BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexports.hashPersonalMessage = function (message) {\n    helpers_1.assertIsBuffer(message);\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n    return hash_1.keccak(Buffer.concat([prefix, message]));\n};\nfunction calculateSigRecovery(v, chainId) {\n    return chainId ? v - (2 * chainId + 35) : v - 27;\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === 0 || recovery === 1;\n}\n//# sourceMappingURL=signature.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/// <reference path=\"./@types/ethjs-util/index.ts\"/>\n/**\n * Constants\n */\n__exportStar(require(\"./constants\"), exports);\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n__exportStar(require(\"./account\"), exports);\n/**\n * Address type\n */\n__exportStar(require(\"./address\"), exports);\n/**\n * Hash functions\n */\n__exportStar(require(\"./hash\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(require(\"./signature\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(require(\"./bytes\"), exports);\n/**\n * Function for definining properties on an object\n */\n__exportStar(require(\"./object\"), exports);\n/**\n * External exports (BN, rlp, secp256k1)\n */\n__exportStar(require(\"./externals\"), exports);\n/**\n * Export ethjs-util methods\n */\n__exportStar(require(\"ethjs-util\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rlphash = exports.ripemd160FromArray = exports.ripemd160FromString = exports.ripemd160 = exports.sha256FromArray = exports.sha256FromString = exports.sha256 = exports.keccakFromArray = exports.keccakFromHexString = exports.keccakFromString = exports.keccak256 = exports.keccak = void 0;\nvar _a = require('ethereum-cryptography/keccak'), keccak224 = _a.keccak224, keccak384 = _a.keccak384, k256 = _a.keccak256, keccak512 = _a.keccak512;\nvar createHash = require('create-hash');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexports.keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsBuffer(a);\n    switch (bits) {\n        case 224: {\n            return keccak224(a);\n        }\n        case 256: {\n            return k256(a);\n        }\n        case 384: {\n            return keccak384(a);\n        }\n        case 512: {\n            return keccak512(a);\n        }\n        default: {\n            throw new Error(\"Invald algorithm: keccak\" + bits);\n        }\n    }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexports.keccak256 = function (a) {\n    return exports.keccak(a);\n};\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexports.keccakFromString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsString(a);\n    var buf = Buffer.from(a, 'utf8');\n    return exports.keccak(buf, bits);\n};\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexports.keccakFromHexString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsHexString(a);\n    return exports.keccak(bytes_1.toBuffer(a), bits);\n};\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexports.keccakFromArray = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsArray(a);\n    return exports.keccak(bytes_1.toBuffer(a), bits);\n};\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexports.sha256 = function (a) {\n    helpers_1.assertIsBuffer(a);\n    return _sha256(a);\n};\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexports.sha256FromString = function (a) {\n    helpers_1.assertIsString(a);\n    return _sha256(a);\n};\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexports.sha256FromArray = function (a) {\n    helpers_1.assertIsArray(a);\n    return _sha256(a);\n};\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nvar _sha256 = function (a) {\n    a = bytes_1.toBuffer(a);\n    return createHash('sha256')\n        .update(a)\n        .digest();\n};\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160 = function (a, padded) {\n    helpers_1.assertIsBuffer(a);\n    return _ripemd160(a, padded);\n};\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160FromString = function (a, padded) {\n    helpers_1.assertIsString(a);\n    return _ripemd160(a, padded);\n};\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160FromArray = function (a, padded) {\n    helpers_1.assertIsArray(a);\n    return _ripemd160(a, padded);\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar _ripemd160 = function (a, padded) {\n    a = bytes_1.toBuffer(a);\n    var hash = createHash('rmd160')\n        .update(a)\n        .digest();\n    if (padded === true) {\n        return bytes_1.setLengthLeft(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexports.rlphash = function (a) {\n    return exports.keccak(rlp.encode(a));\n};\n//# sourceMappingURL=hash.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nvar assert = require('assert');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar account_1 = require(\"./account\");\nvar Address = /** @class */ (function () {\n    function Address(buf) {\n        assert(buf.length === 20, 'Invalid address length');\n        this.buf = buf;\n    }\n    /**\n     * Returns the zero address.\n     */\n    Address.zero = function () {\n        return new Address(bytes_1.zeros(20));\n    };\n    /**\n     * Returns an Address object from a hex-encoded string.\n     * @param str - Hex-encoded address\n     */\n    Address.fromString = function (str) {\n        assert(account_1.isValidAddress(str), 'Invalid address');\n        return new Address(bytes_1.toBuffer(str));\n    };\n    /**\n     * Returns an address for a given public key.\n     * @param pubKey The two points of an uncompressed key\n     */\n    Address.fromPublicKey = function (pubKey) {\n        assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer');\n        var buf = account_1.pubToAddress(pubKey);\n        return new Address(buf);\n    };\n    /**\n     * Returns an address for a given private key.\n     * @param privateKey A private key must be 256 bits wide\n     */\n    Address.fromPrivateKey = function (privateKey) {\n        assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer');\n        var buf = account_1.privateToAddress(privateKey);\n        return new Address(buf);\n    };\n    /**\n     * Generates an address for a newly created contract.\n     * @param from The address which is creating this new address\n     * @param nonce The nonce of the from account\n     */\n    Address.generate = function (from, nonce) {\n        assert(BN.isBN(nonce));\n        return new Address(account_1.generateAddress(from.buf, nonce.toArrayLike(Buffer)));\n    };\n    /**\n     * Generates an address for a contract created using CREATE2.\n     * @param from The address which is creating this new address\n     * @param salt A salt\n     * @param initCode The init code of the contract being created\n     */\n    Address.generate2 = function (from, salt, initCode) {\n        assert(Buffer.isBuffer(salt));\n        assert(Buffer.isBuffer(initCode));\n        return new Address(account_1.generateAddress2(from.buf, salt, initCode));\n    };\n    /**\n     * Is address zero.\n     */\n    Address.prototype.isZero = function () {\n        return this.buf.equals(Address.zero().buf);\n    };\n    /**\n     * Returns hex encoding of address.\n     */\n    Address.prototype.toString = function () {\n        return '0x' + this.buf.toString('hex');\n    };\n    return Address;\n}());\nexports.Address = Address;\n//# sourceMappingURL=address.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rlp = exports.BN = void 0;\n// TODO: This can be replaced with a normal ESM import once\n// the new major version of the typescript config package\n// is released and adopted here.\nvar BN = require(\"bn.js\");\nexports.BN = BN;\nvar rlp = require(\"rlp\");\nexports.rlp = rlp;\n//# sourceMappingURL=externals.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.unpadHexString = exports.unpadArray = exports.unpadBuffer = exports.setLengthRight = exports.setLengthLeft = exports.zeros = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\nvar BN = require(\"bn.js\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexports.setLengthLeft = function (msg, length) {\n    helpers_1.assertIsBuffer(msg);\n    return setLength(msg, length, false);\n};\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexports.setLengthRight = function (msg, length) {\n    helpers_1.assertIsBuffer(msg);\n    return setLength(msg, length, true);\n};\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nvar setLength = function (msg, length, right) {\n    var buf = exports.zeros(length);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexports.unpadBuffer = function (a) {\n    helpers_1.assertIsBuffer(a);\n    return stripZeros(a);\n};\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexports.unpadArray = function (a) {\n    helpers_1.assertIsArray(a);\n    return stripZeros(a);\n};\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexports.unpadHexString = function (a) {\n    helpers_1.assertIsHexString(a);\n    a = ethjsUtil.stripHexPrefix(a);\n    return stripZeros(a);\n};\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nvar stripZeros = function (a) {\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v) || v instanceof Uint8Array) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjsUtil.isHexString(v)) {\n                v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjsUtil.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (BN.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n    return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n    buf = exports.toBuffer(buf);\n    return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n    return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\" + ba.toString('hex');\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push(exports.baToJSON(ba[i]));\n        }\n        return array;\n    }\n};\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.importPublic = exports.privateToPublic = exports.privateToAddress = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isZeroAddress = exports.isValidAddress = exports.zeroAddress = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\nvar _a = require('ethereum-cryptography/secp256k1'), privateKeyVerify = _a.privateKeyVerify, publicKeyCreate = _a.publicKeyCreate, publicKeyVerify = _a.publicKeyVerify, publicKeyConvert = _a.publicKeyConvert;\nvar assert = require(\"assert\");\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Returns a zero address.\n */\nexports.zeroAddress = function () {\n    var addressLength = 20;\n    var addr = bytes_1.zeros(addressLength);\n    return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexports.isValidAddress = function (hexAddress) {\n    helpers_1.assertIsHexString(hexAddress);\n    return /^0x[0-9a-fA-F]{40}$/.test(hexAddress);\n};\n/**\n * Checks if a given address is a zero address.\n */\nexports.isZeroAddress = function (hexAddress) {\n    helpers_1.assertIsHexString(hexAddress);\n    var zeroAddr = exports.zeroAddress();\n    return zeroAddr === hexAddress;\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\nexports.toChecksumAddress = function (hexAddress, eip1191ChainId) {\n    helpers_1.assertIsHexString(hexAddress);\n    var address = ethjsUtil.stripHexPrefix(hexAddress).toLowerCase();\n    var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n    var hash = hash_1.keccakFromString(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexports.isValidChecksumAddress = function (hexAddress, eip1191ChainId) {\n    return exports.isValidAddress(hexAddress) && exports.toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexports.generateAddress = function (from, nonce) {\n    helpers_1.assertIsBuffer(from);\n    helpers_1.assertIsBuffer(nonce);\n    var nonceBN = new BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return hash_1.rlphash([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexports.generateAddress2 = function (from, salt, initCode) {\n    helpers_1.assertIsBuffer(from);\n    helpers_1.assertIsBuffer(salt);\n    helpers_1.assertIsBuffer(initCode);\n    assert(from.length === 20);\n    assert(salt.length === 32);\n    var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), from, salt, hash_1.keccak256(initCode)]));\n    return address.slice(-20);\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexports.isValidPrivate = function (privateKey) {\n    return privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    helpers_1.assertIsBuffer(publicKey);\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    helpers_1.assertIsBuffer(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1));\n    }\n    assert(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return hash_1.keccak(pubKey).slice(-20);\n};\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToAddress = function (privateKey) {\n    return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToPublic = function (privateKey) {\n    helpers_1.assertIsBuffer(privateKey);\n    // skip the type flag and use the X, Y points\n    return Buffer.from(publicKeyCreate(privateKey, false)).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\nexports.importPublic = function (publicKey) {\n    helpers_1.assertIsBuffer(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1));\n    }\n    return publicKey;\n};\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0;\nvar Buffer = require('buffer').Buffer;\nvar BN = require(\"bn.js\");\n/**\n * The max integer that this VM can handle\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexports.assertIsHexString = function (input) {\n    if (!ethjsUtil.isHexString(input)) {\n        var msg = \"This method only supports 0x-prefixed hex strings but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexports.assertIsBuffer = function (input) {\n    if (!Buffer.isBuffer(input)) {\n        var msg = \"This method only supports Buffer but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexports.assertIsArray = function (input) {\n    if (!Array.isArray(input)) {\n        var msg = \"This method only supports number arrays but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexports.assertIsString = function (input) {\n    if (typeof input !== 'string') {\n        var msg = \"This method only supports strings but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n//# sourceMappingURL=helpers.js.map"],"sourceRoot":""}