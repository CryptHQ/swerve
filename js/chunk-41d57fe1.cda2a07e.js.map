{"version":3,"sources":["webpack:///./src/components/common/Slippage.vue?13b2","webpack:///src/components/common/Slippage.vue","webpack:///./src/components/common/Slippage.vue?9a80","webpack:///./src/components/common/Slippage.vue","webpack:///./node_modules/set-interval-async/node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./src/components/common/GasPrice.vue?a0b7","webpack:///./src/components/withdraw/Withdraw.vue?dd11","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./src/components/withdraw/Withdraw.vue?c1c1","webpack:///src/components/withdraw/Withdraw.vue","webpack:///./src/components/withdraw/Withdraw.vue?6855","webpack:///./src/components/withdraw/Withdraw.vue","webpack:///./src/components/common/GasPrice.vue?f1bc","webpack:///src/components/common/GasPrice.vue","webpack:///./src/components/common/GasPrice.vue?86bc","webpack:///./src/components/common/GasPrice.vue","webpack:///./node_modules/set-interval-async/dynamic/index.mjs"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","showSlippage","slippage","expression","staticClass","attrs","_v","_s","toFixed","_m","$route","noBalanceText","currentPool","staticRenderFns","component","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","module","exports","DESCRIPTORS","global","isForced","redefine","has","classof","inheritIfRequired","toPrimitive","fails","create","getOwnPropertyNames","f","getOwnPropertyDescriptor","defineProperty","trim","NUMBER","NativeNumber","NumberPrototype","prototype","BROKEN_CLASSOF","toNumber","argument","first","third","radix","maxCode","digits","length","index","code","it","charCodeAt","NaN","slice","parseInt","NumberWrapper","dummy","valueOf","call","keys","split","j","constructor","style","domProps","on","$event","target","composing","share","handle_change_share","_l","Object","currencies","currency","i","_obj","class","withdrawc","getTokenIcon","includes","_f","inputs","ref","refInFor","inputStyles","$set","handle_change_amounts","to_currency","handleCheck","_q","maxSlippage","customippageDisabled","customSlippageDisabled","maxInputSlippage","Array","isArray","inf_approval","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","warninglow","show_nobalance","handle_remove_liquidity","loadingAction","staked_balance","pendingSNXRewards","claim_SNX","pendingRENRewards","pendingBALRewards","withdrawBALPool","withdrawSNXPool","withdrawRENPool","oldBalance","migrateUSDT","waitingMessage","estimateGas","gasPrice","ethPrice","_b","show_nobalance_i","showadvancedoptions","unstakepercentage","unstakePercentageInvalid","unstakeStaked","console","log","decoded","amounts","push","map","dismiss","token_amount","errorMessage","staticStyle","gasPriceMedium","customGasDisabled","Math","round","gasPriceFast","gasPriceFastest","gasPriceSlow","customGasPriceInput","setCustomGas","MAX_INTERVAL_MS","pow","clearIntervalAsync","_x","_clearIntervalAsync","timer","stopped","_Object$values","values","timeouts","timeout","clearTimeout","noop","promises","promise","catch","noopInterval","setInterval","all","clearInterval","SetIntervalAsyncError","Error","MIN_INTERVAL_MS","validateHandler","handler","validateInterval","interval","SetIntervalAsyncTimer","id","setIntervalAsync","setTimeout","timeoutHandler","startTime","Date","endTime","executionTime"],"mappings":"kHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,IAAI,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAIU,cAAgBV,EAAIW,UAAY,KAAOC,WAAW,sCAAsCC,YAAY,eAAeC,MAAM,CAAC,GAAK,yBAAyB,CAACV,EAAG,OAAO,CAACS,YAAY,QAAQ,CAACb,EAAIe,GAAG,2CAA2CX,EAAG,OAAO,CAACS,YAAY,WAAW,CAACb,EAAIe,GAAGf,EAAIgB,IAAkB,KAAbhB,EAAIW,UAAcM,QAAQ,OAAOjB,EAAIe,GAAG,MAAMf,EAAIkB,GAAG,OAAOd,EAAG,IAAI,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAIU,cAAgBV,EAAIW,UAAY,GAAKX,EAAIW,WAAa,KAAOC,WAAW,wDAAwDC,YAAY,eAAeC,MAAM,CAAC,GAAK,qBAAqB,CAACV,EAAG,OAAO,CAACS,YAAY,QAAQ,CAACb,EAAIe,GAAG,+BAA+BX,EAAG,OAAO,CAACS,YAAY,WAAW,CAACb,EAAIe,GAAGf,EAAIgB,IAAkB,KAAbhB,EAAIW,UAAcM,QAAQ,OAAOjB,EAAIe,GAAG,MAAMf,EAAIkB,GAAG,KAAKd,EAAG,IAAI,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAIU,cAAgBV,EAAIW,SAAW,EAAGC,WAAW,iCAAiCC,YAAY,UAAUC,MAAM,CAAC,GAAK,iBAAiB,CAACd,EAAIe,GAAG,0BAA0BX,EAAG,OAAO,CAACJ,EAAIe,GAAGf,EAAIgB,IAAiB,IAAbhB,EAAIW,UAAcM,QAAQ,OAAOjB,EAAIe,GAAG,MAAMX,EAAG,OAAO,CAACS,YAAY,WAAW,CAACb,EAAIe,GAAG,QAAQX,EAAG,OAAO,CAACS,YAAY,oBAAoB,CAACb,EAAIe,GAAG,mGAAmGf,EAAIgB,GAAsB,WAAnBhB,EAAImB,OAAOZ,KAAoB,MAAQ,QAAQ,sBAAsBH,EAAG,IAAI,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAkB,eAAEY,WAAW,mBAAmBC,YAAY,eAAeC,MAAM,CAAC,GAAK,sBAAsB,CAACd,EAAIe,GAAG,oCAAoCf,EAAIgB,GAAGhB,EAAIoB,eAAe,6BAA6BhB,EAAG,IAAI,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAA0B,UAAnBT,EAAIqB,aAA2BrB,EAAIU,cAAgBV,EAAIW,UAAY,IAAMC,WAAW,gEAAgEC,YAAY,8BAA8BC,MAAM,CAAC,GAAK,iBAAiB,CAACd,EAAIe,GAAG,oDAC7gEO,EAAkB,CAAC,WAAa,IAAItB,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,OAAO,CAACS,YAAY,WAAW,CAACb,EAAIe,GAAG,QAAQX,EAAG,OAAO,CAACS,YAAY,oBAAoB,CAACb,EAAIe,GAAG,+HAA+H,WAAa,IAAIf,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,OAAO,CAACS,YAAY,WAAW,CAACb,EAAIe,GAAG,QAAQX,EAAG,OAAO,CAACS,YAAY,oBAAoB,CAACb,EAAIe,GAAG,gI,oCC0CtgB,GACE,MAAF,sCACE,SAAF,iCACA,QADA,IAEI,cAFJ,WAGM,IAAN,6BACM,IAAN,yDACM,OAAN,+EAGA,KAFA,0BCnDiW,I,YCO7VQ,EAAY,eACd,EACAxB,EACAuB,GACA,EACA,KACA,WACA,MAIa,OAAAC,E,gCClBf,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBtB,EAAQuB,EAAKvB,MACjB,MAAOwB,GAEP,YADAN,EAAOM,GAILD,EAAKE,KACPR,EAAQjB,GAER0B,QAAQT,QAAQjB,GAAO2B,KAAKR,EAAOC,GAIvC,SAASQ,EAAkBC,GACzB,OAAO,WACL,IAAIC,EAAOtC,KACPuC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGI,MAAMH,EAAMC,GAEzB,SAASZ,EAAMnB,GACbe,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQpB,GAGlE,SAASoB,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,GAGnEf,OAAMgB,O,UAKZC,EAAOC,QAAUT,G,kCCpCjB,yBAAyf,EAAG,G,6DCA5f,yBAAie,EAAG,G,kCCCpe,IAAIU,EAAc,EAAQ,QACtBC,EAAS,EAAQ,QACjBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAM,EAAQ,QACdC,EAAU,EAAQ,QAClBC,EAAoB,EAAQ,QAC5BC,EAAc,EAAQ,QACtBC,EAAQ,EAAQ,QAChBC,EAAS,EAAQ,QACjBC,EAAsB,EAAQ,QAA8CC,EAC5EC,EAA2B,EAAQ,QAAmDD,EACtFE,EAAiB,EAAQ,QAAuCF,EAChEG,EAAO,EAAQ,QAA4BA,KAE3CC,EAAS,SACTC,EAAef,EAAOc,GACtBE,EAAkBD,EAAaE,UAG/BC,EAAiBd,EAAQI,EAAOQ,KAAqBF,EAIrDK,EAAW,SAAUC,GACvB,IACIC,EAAOC,EAAOC,EAAOC,EAASC,EAAQC,EAAQC,EAAOC,EADrDC,EAAKvB,EAAYc,GAAU,GAE/B,GAAiB,iBAANS,GAAkBA,EAAGH,OAAS,EAGvC,GAFAG,EAAKhB,EAAKgB,GACVR,EAAQQ,EAAGC,WAAW,GACR,KAAVT,GAA0B,KAAVA,GAElB,GADAC,EAAQO,EAAGC,WAAW,GACR,KAAVR,GAA0B,MAAVA,EAAe,OAAOS,SACrC,GAAc,KAAVV,EAAc,CACvB,OAAQQ,EAAGC,WAAW,IACpB,KAAK,GAAI,KAAK,GAAIP,EAAQ,EAAGC,EAAU,GAAI,MAC3C,KAAK,GAAI,KAAK,IAAKD,EAAQ,EAAGC,EAAU,GAAI,MAC5C,QAAS,OAAQK,EAInB,IAFAJ,EAASI,EAAGG,MAAM,GAClBN,EAASD,EAAOC,OACXC,EAAQ,EAAGA,EAAQD,EAAQC,IAI9B,GAHAC,EAAOH,EAAOK,WAAWH,GAGrBC,EAAO,IAAMA,EAAOJ,EAAS,OAAOO,IACxC,OAAOE,SAASR,EAAQF,GAE5B,OAAQM,GAKZ,GAAI5B,EAASa,GAASC,EAAa,UAAYA,EAAa,QAAUA,EAAa,SAAU,CAS3F,IARA,IAcqBjC,EAdjBoD,EAAgB,SAAgBzE,GAClC,IAAIoE,EAAKpC,UAAUiC,OAAS,EAAI,EAAIjE,EAChC0E,EAAQlF,KACZ,OAAOkF,aAAiBD,IAElBhB,EAAiBX,GAAM,WAAcS,EAAgBoB,QAAQC,KAAKF,MAAa/B,EAAQ+B,IAAUrB,GACjGT,EAAkB,IAAIU,EAAaI,EAASU,IAAMM,EAAOD,GAAiBf,EAASU,IAElFS,EAAOvC,EAAcU,EAAoBM,GAAgB,6KAMhEwB,MAAM,KAAMC,EAAI,EAAQF,EAAKZ,OAASc,EAAGA,IACrCrC,EAAIY,EAAcjC,EAAMwD,EAAKE,MAAQrC,EAAI+B,EAAepD,IAC1D8B,EAAesB,EAAepD,EAAK6B,EAAyBI,EAAcjC,IAG9EoD,EAAcjB,UAAYD,EAC1BA,EAAgByB,YAAcP,EAC9BhC,EAASF,EAAQc,EAAQoB,K,gEC5E3B,IAAInF,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACS,YAAY,iBAAiB,CAACT,EAAG,WAAW,CAACS,YAAY,cAAc,CAACT,EAAG,SAAS,CAACJ,EAAIe,GAAG,8BAA8BX,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,QAAQ,CAACE,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOT,EAAS,MAAEY,WAAW,UAAU8E,MAAO1F,EAAe,YAAEc,MAAM,CAAC,KAAO,OAAO,GAAK,kBAAkB,KAAO,mBAAmB6E,SAAS,CAAC,MAAS3F,EAAS,OAAG4F,GAAG,CAAC,MAAQ,CAAC,SAASC,GAAWA,EAAOC,OAAOC,YAAqB/F,EAAIgG,MAAMH,EAAOC,OAAOrF,QAAOT,EAAIiG,qBAAqB,MAAQjG,EAAIiG,6BAA6B7F,EAAG,WAAW,CAACS,YAAY,cAAc,CAACT,EAAG,SAAS,CAACJ,EAAIe,GAAG,iBAAiBX,EAAG,KAAKJ,EAAIkG,GAAIC,OAAOb,KAAKtF,EAAIoG,aAAa,SAASC,EAASC,GACrwB,IAAIC,EACJ,OAAOnG,EAAG,KAAK,CAACA,EAAG,QAAQ,CAACS,YAAY,iBAAiBC,MAAM,CAAC,IAAM,YAAYwF,IAAI,CAAClG,EAAG,MAAM,CAACoG,OAAQD,EAAO,CAAC,cAAc,GAAOA,EAAKF,EAAS,UAAW,EAAME,EAAK,KAAQvG,EAAIyG,UAAWF,EAAKvG,EAAIqB,cAAe,EAAMkF,GAAOzF,MAAM,CAAC,IAAMd,EAAI0G,aAAaL,MAAajG,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAa,UAAEY,WAAW,eAAe,CAACZ,EAAIe,GAAGf,EAAIgB,GAAGhB,EAAIoG,WAAWC,IAAW,KAAKjG,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,QAAqB,QAAZ4F,GAAyC,QAAnBrG,EAAIqB,eAA2B,CAAC,SAAU,MAAO,QAAQsF,SAAS3G,EAAIqB,aAAcT,WAAW,wGAAwG,CAACZ,EAAIe,GAAG,OAAOf,EAAIgB,GAAGhB,EAAI4G,GAAG,aAAP5G,CAAqBqG,IAAW,SAASjG,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAQT,EAAIyG,YAAc,CAAC,SAAU,OAAQ,MAAO,QAAQE,SAAS3G,EAAIqB,aAAcT,WAAW,4EAA4E,CAACZ,EAAIe,GAAGf,EAAIgB,GAAGhB,EAAI4G,GAAG,aAAP5G,CAAqBqG,OAAcjG,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAQT,EAAIyG,WAAa,CAAC,SAAU,OAAQ,MAAO,QAAQE,SAAS3G,EAAIqB,aAAcT,WAAW,2EAA2E,CAACZ,EAAIe,GAAGf,EAAIgB,GAAGhB,EAAIoG,WAAWC,SAAgBjG,EAAG,QAAQ,CAACE,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOT,EAAI6G,OAAOP,GAAI1F,WAAW,cAAckG,IAAK,SAAWR,EAAGS,UAAS,EAAKrB,MAAO1F,EAAIgH,YAAYV,GAAIxF,MAAM,CAAC,KAAO,OAAO,GAAK,YAAYwF,EAAE,KAAO,WAAW,SAA8B,QAAnBtG,EAAIqB,aAAuBsE,SAAS,CAAC,MAAS3F,EAAI6G,OAAOP,IAAKV,GAAG,CAAC,MAAQ,CAAC,SAASC,GAAWA,EAAOC,OAAOC,WAAqB/F,EAAIiH,KAAKjH,EAAI6G,OAAQP,EAAGT,EAAOC,OAAOrF,QAAQ,SAASoF,GAAQ,OAAO7F,EAAIkH,sBAAsBZ,KAAK,MAAQ,SAAST,GAAQ,OAAO7F,EAAIkH,sBAAsBZ,YAAW,KAAKlG,EAAG,WAAW,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAA0B,QAAnBT,EAAIqB,YAAuBT,WAAW,2BAA2B,CAACZ,EAAIkB,GAAG,GAAGd,EAAG,KAAK,CAACA,EAAG,KAAK,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAQ,CAAC,SAAS,OAAO,MAAO,QAAQkG,SAAS3G,EAAIqB,aAAcT,WAAW,4DAA4D,CAACR,EAAG,QAAQ,CAACU,MAAM,CAAC,KAAO,QAAQ,GAAK,cAAc,KAAO,UAAU6E,SAAS,CAAC,MAAQ,GAAG,QAA8B,KAApB3F,EAAImH,aAAoBvB,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO7F,EAAIoH,YAAY,QAAQhH,EAAG,QAAQ,CAACU,MAAM,CAAC,IAAM,gBAAgB,CAACd,EAAIe,GAAG,8BAA8Bf,EAAIkG,GAAIC,OAAOb,KAAKtF,EAAIoG,aAAa,SAASC,EAASC,GAC78E,IAAIC,EACJ,OAAOnG,EAAG,OAAO,CAACA,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO6F,EAAI,EAAG1F,WAAW,WAAW,CAACZ,EAAIe,GAAG,OAAOX,EAAG,MAAM,CAACoG,OAAQD,EAAO,CAAC,cAAc,GAAOA,EAAKF,EAAS,UAAW,EAAME,EAAK,KAAQvG,EAAIyG,UAAWF,EAAKvG,EAAIqB,cAAe,EAAMkF,GAAOzF,MAAM,CAAC,IAAMd,EAAI0G,aAAaL,YAAkB,KAAKrG,EAAIkG,GAAIC,OAAOb,KAAKtF,EAAIoG,aAAa,SAASC,EAASC,GACrX,IAAIC,EACJ,OAAOnG,EAAG,KAAK,CAACS,YAAY,cAAc,CAACT,EAAG,QAAQ,CAACU,MAAM,CAAC,KAAO,QAAQ,GAAK,UAAUwF,EAAE,KAAO,UAAUX,SAAS,CAAC,MAAQW,EAAE,QAAUtG,EAAImH,cAAgBb,GAAGV,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO7F,EAAIoH,YAAYd,OAAOlG,EAAG,QAAQ,CAACU,MAAM,CAAC,IAAM,UAAUwF,IAAI,CAAClG,EAAG,MAAM,CAACoG,OAAQD,EAAO,CAAC,cAAc,GAAOA,EAAKF,EAAS,UAAW,EAAME,EAAK,KAAQvG,EAAIyG,UAAWF,EAAKvG,EAAIqB,cAAe,EAAMkF,GAAOzF,MAAM,CAAC,IAAMd,EAAI0G,aAAaL,MAAajG,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAQT,EAAIyG,UAAW7F,WAAW,gBAAgB,CAACZ,EAAIe,GAAG,IAAIf,EAAIgB,GAAGhB,EAAI4G,GAAG,aAAP5G,CAAqBqG,IAAW,OAAOjG,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAa,UAAEY,WAAW,eAAe,CAACZ,EAAIe,GAAG,IAAIf,EAAIgB,GAAGhB,EAAIoG,WAAWC,IAAW,eAAc,KAAKjG,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAwB,qBAAEY,WAAW,yBAAyBE,MAAM,CAAC,GAAK,iBAAiB,CAACV,EAAG,OAAO,CAACJ,EAAIe,GAAG,mBAAmBX,EAAG,QAAQ,CAACE,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOT,EAAe,YAAEY,WAAW,gBAAgBE,MAAM,CAAC,GAAK,aAAa,KAAO,QAAQ,KAAO,WAAW,MAAQ,OAAO6E,SAAS,CAAC,QAAU3F,EAAIqH,GAAGrH,EAAIsH,YAAY,QAAQ1B,GAAG,CAAC,OAAS,SAASC,GAAQ7F,EAAIsH,YAAY,UAAUlH,EAAG,QAAQ,CAACU,MAAM,CAAC,IAAM,eAAe,CAACd,EAAIe,GAAG,UAAUX,EAAG,QAAQ,CAACE,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOT,EAAe,YAAEY,WAAW,gBAAgBE,MAAM,CAAC,GAAK,YAAY,KAAO,QAAQ,KAAO,WAAW,QAAU,GAAG,MAAQ,KAAK6E,SAAS,CAAC,QAAU3F,EAAIqH,GAAGrH,EAAIsH,YAAY,MAAM1B,GAAG,CAAC,OAAS,SAASC,GAAQ7F,EAAIsH,YAAY,QAAQlH,EAAG,QAAQ,CAACU,MAAM,CAAC,IAAM,cAAc,CAACd,EAAIe,GAAG,QAAQX,EAAG,QAAQ,CAACU,MAAM,CAAC,GAAK,kBAAkB,KAAO,QAAQ,KAAO,WAAW,MAAQ,KAAK8E,GAAG,CAAC,MAAQ,SAASC,GAAQ7F,EAAIuH,sBAAuB,MAAUnH,EAAG,QAAQ,CAACU,MAAM,CAAC,IAAM,mBAAmB8E,GAAG,CAAC,MAAQ,SAASC,GAAQ7F,EAAIwH,wBAAyB,KAAS,CAACpH,EAAG,QAAQ,CAACE,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOT,EAAoB,iBAAEY,WAAW,qBAAqBE,MAAM,CAAC,KAAO,OAAO,GAAK,wBAAwB,SAAWd,EAAIwH,uBAAuB,KAAO,yBAAyB7B,SAAS,CAAC,MAAS3F,EAAoB,kBAAG4F,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,YAAqB/F,EAAIyH,iBAAiB5B,EAAOC,OAAOrF,WAAUT,EAAIe,GAAG,WAAWX,EAAG,aAAaA,EAAG,IAAI,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAsB,mBAAEY,WAAW,uBAAuBC,YAAY,aAAa,CAACT,EAAG,QAAQ,CAACE,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOT,EAAgB,aAAEY,WAAW,iBAAiBE,MAAM,CAAC,GAAK,eAAe,KAAO,YAAY6E,SAAS,CAAC,QAAU+B,MAAMC,QAAQ3H,EAAI4H,cAAc5H,EAAI6H,GAAG7H,EAAI4H,aAAa,OAAO,EAAG5H,EAAgB,cAAG4F,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAIiC,EAAI9H,EAAI4H,aAAaG,EAAKlC,EAAOC,OAAOkC,IAAID,EAAKE,QAAuB,GAAGP,MAAMC,QAAQG,GAAK,CAAC,IAAII,EAAI,KAAKC,EAAInI,EAAI6H,GAAGC,EAAII,GAAQH,EAAKE,QAASE,EAAI,IAAInI,EAAI4H,aAAaE,EAAIM,OAAO,CAACF,KAAYC,GAAK,IAAInI,EAAI4H,aAAaE,EAAI9C,MAAM,EAAEmD,GAAKC,OAAON,EAAI9C,MAAMmD,EAAI,UAAWnI,EAAI4H,aAAaI,MAAS5H,EAAG,QAAQ,CAACU,MAAM,CAAC,IAAM,iBAAiB,CAACd,EAAIe,GAAG,sDAAsDX,EAAG,MAAM,CAACS,YAAY,UAAUC,MAAM,CAAC,GAAK,qBAAqB,CAACV,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAa,UAAEY,WAAW,cAAcC,YAAY,8BAA8BC,MAAM,CAAC,GAAK,mBAAmB,CAACd,EAAIe,GAAG,uDAAuDX,EAAG,SAAS,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAA0B,QAAnBT,EAAIqB,YAAuBT,WAAW,0BAA0BC,YAAY,eAAeC,MAAM,CAAC,GAAK,mBAAmB,SAAW,CAAC,SAAU,QAAQ6F,SAAS3G,EAAIqB,cAAgBrB,EAAIW,UAAY,MAASX,EAAIqI,YAAoC,GAAtBrI,EAAIsI,gBAAwB1C,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO7F,EAAIuI,6BAA6B,CAACvI,EAAIe,GAAG,cAAcX,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAA4B,GAArBT,EAAIwI,cAAoB5H,WAAW,uBAAuBC,YAAY,mBAAmBT,EAAG,SAAS,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO,CAAC,SAAU,OAAO,IAAI,SAASkG,SAAS3G,EAAIqB,cAAgBrB,EAAIyI,eAAiB,EAAI7H,WAAW,gFAAgFE,MAAM,CAAC,GAAK,2BAA2B,SAAWd,EAAIW,UAAY,KAAMiF,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO7F,EAAIuI,yBAAwB,GAAM,GAAO,MAAS,CAACvI,EAAIe,GAAG,sBAAsBX,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAA4B,GAArBT,EAAIwI,cAAoB5H,WAAW,uBAAuBC,YAAY,mBAAmBT,EAAG,SAAS,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO,CAAC,SAAU,OAAO,IAAI,SAASkG,SAAS3G,EAAIqB,cAAgBrB,EAAI0I,kBAAoB,EAAG9H,WAAW,kFAAkFE,MAAM,CAAC,GAAK,aAAa8E,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO7F,EAAI2I,WAAU,MAAU,CAAC3I,EAAIe,GAAG,UAAUf,EAAIgB,IAAIhB,EAAI0I,kBAAoB,MAAMzH,QAAQ,IAAI,IAAIjB,EAAIgB,GAAG,CAAC,IAAI,SAAS2F,SAAS3G,EAAIqB,aAAe,MAAQ,OAAO,KAAKjB,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAA0B,QAAnBT,EAAIqB,YAAuBT,WAAW,2BAA2B,CAACZ,EAAIe,GAAG,MAAMf,EAAIgB,IAAIhB,EAAI4I,kBAAoB,MAAM3H,QAAQ,IAAI,YAAYb,EAAG,SAAS,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO,CAAC,QAAQkG,SAAS3G,EAAIqB,cAAgBrB,EAAI6I,kBAAoB,EAAGjI,WAAW,4DAA4DE,MAAM,CAAC,GAAK,aAAa8E,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO7F,EAAI2I,WAAU,MAAS,CAAC3I,EAAIe,GAAG,UAAUf,EAAIgB,IAAIhB,EAAI6I,kBAAoB,MAAM5H,QAAQ,IAAI,WAAWb,EAAG,SAAS,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO,CAAC,QAAQkG,SAAS3G,EAAIqB,cAAgBrB,EAAI8I,gBAAkB,EAAGlI,WAAW,0DAA0DE,MAAM,CAAC,GAAK,gBAAgB8E,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO7F,EAAI2I,WAAU,GAAM,MAAU,CAAC3I,EAAIe,GAAG,aAAaf,EAAIgB,IAAIhB,EAAI+I,gBAAkB,MAAM9H,QAAQ,IAAI,UAAUjB,EAAIgB,IAAIhB,EAAIgJ,gBAAkB,MAAM/H,QAAQ,IAAI,WAAWb,EAAG,SAAS,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO,CAAC,SAAU,OAAO,IAAI,SAASkG,SAAS3G,EAAIqB,cAAgBrB,EAAIyI,eAAiB,EAAG7H,WAAW,+EAA+EE,MAAM,CAAC,GAAK,eAAe8E,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO7F,EAAIuI,yBAAwB,GAAM,MAAS,CAACvI,EAAIe,GAAG,eAAeX,EAAG,cAAc,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO,CAAC,UAAUkG,SAAS3G,EAAIqB,cAAgBrB,EAAIiJ,WAAa,EAAGrI,WAAW,uDAAuDC,YAAY,SAASC,MAAM,CAAC,GAAK,iBAAiB,GAAK,gBAAgB,CAACd,EAAIe,GAAG,kBAAkBX,EAAG,SAAS,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAA0B,QAAnBT,EAAIqB,YAAuBT,WAAW,0BAA0BgF,GAAG,CAAC,MAAQ5F,EAAIkJ,cAAc,CAAClJ,EAAIe,GAAG,oBAAoBX,EAAG,SAAS,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAA0B,QAAnBT,EAAIqB,YAAuBT,WAAW,0BAA0BC,YAAY,eAAeC,MAAM,CAAC,GAAK,oBAAoB8E,GAAG,CAAC,MAAQ5F,EAAIuI,0BAA0B,CAACvI,EAAIe,GAAG,kBAAkBX,EAAG,IAAI,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO,CAAC,MAAO,QAAQkG,SAAS3G,EAAIqB,aAAcT,WAAW,2CAA2C,CAACR,EAAG,IAAI,CAACU,MAAM,CAAC,KAAO,kCAAkC,CAACd,EAAIe,GAAG,4BAA4BX,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO,CAAC,SAAU,QAAQkG,SAAS3G,EAAIqB,aAAcT,WAAW,6CAA6CE,MAAM,CAAC,GAAK,UAAU,CAACV,EAAG,IAAI,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO,CAAC,SAAU,QAAQkG,SAAS3G,EAAIqB,aAAcT,WAAW,6CAA6CE,MAAM,CAAC,KAAO,8BAA8B,OAAS,SAAS,IAAM,wBAAwB,CAACd,EAAIe,GAAG,6BAA6BX,EAAG,IAAI,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO,CAAC,IAAK,SAASkG,SAAS3G,EAAIqB,aAAcT,WAAW,yCAAyCE,MAAM,CAAC,KAAO,wBAAwB,OAAS,SAAS,IAAM,wBAAwB,CAACd,EAAIe,GAAG,eAAeX,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAgB,aAAEY,WAAW,iBAAiBC,YAAY,+BAA+B,CAACT,EAAG,OAAO,CAACuF,SAAS,CAAC,UAAY3F,EAAIgB,GAAGhB,EAAImJ,mBAAmBnJ,EAAIe,GAAG,KAAKX,EAAG,OAAO,CAACS,YAAY,mBAAmBT,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAe,YAAEY,WAAW,gBAAgBC,YAAY,+BAA+B,CAACb,EAAIe,GAAG,uBAAuBf,EAAIgB,IAAIhB,EAAIoJ,YAAcpJ,EAAIqJ,SAAW,IAAMrJ,EAAIsJ,UAAUrI,QAAQ,IAAI,QAAQb,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAc,WAAEY,WAAW,eAAeC,YAAY,gBAAgB,CAACb,EAAIe,GAAG,wDAAwDX,EAAG,WAAWJ,EAAIuJ,GAAG,GAAG,WAAW,CAACjB,eAAgBtI,EAAIsI,eAAgBkB,iBAAkBxJ,EAAIwJ,mBAAkB,KAAS,GAAGpJ,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAIyI,eAAiB,GAAK,CAAC,SAAU,OAAQ,IAAK,SAAS9B,SAAS3G,EAAIqB,aAAcT,WAAW,kFAAkF,CAACR,EAAG,SAAS,CAACS,YAAY,+BAA+B+E,GAAG,CAAC,MAAQ,SAASC,GAAQ7F,EAAIyJ,qBAAuBzJ,EAAIyJ,uBAAuB,CAACzJ,EAAIe,GAAG,gCAAgCX,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAQT,EAAIyJ,oBAAqB7I,WAAW,0BAA0B,CAACZ,EAAIe,GAAG,OAAOX,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAuB,oBAAEY,WAAW,yBAAyB,CAACZ,EAAIe,GAAG,SAASX,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAuB,oBAAEY,WAAW,yBAAyB,CAACR,EAAG,WAAW,CAACA,EAAG,SAAS,CAACJ,EAAIe,GAAG,iCAAiCX,EAAG,MAAM,CAACA,EAAG,MAAM,CAACU,MAAM,CAAC,GAAK,kBAAkB,CAACd,EAAIe,GAAG,oBAAoBX,EAAG,OAAO,CAACwF,GAAG,CAAC,MAAQ,SAASC,GAAQ7F,EAAI0J,kBAAoB1J,EAAIyI,eAAiB,QAAQ,CAACzI,EAAIe,GAAGf,EAAIgB,IAAIhB,EAAIyI,eAAiB,MAAMxH,QAAQ,SAASb,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACU,MAAM,CAAC,IAAM,sBAAsB,CAACd,EAAIe,GAAG,cAAcX,EAAG,QAAQ,CAACE,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOT,EAAqB,kBAAEY,WAAW,sBAAsB4F,MAAM,CAAC,QAAWxG,EAAI2J,0BAA0B7I,MAAM,CAAC,GAAK,qBAAqB6E,SAAS,CAAC,MAAS3F,EAAqB,mBAAG4F,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,YAAqB/F,EAAI0J,kBAAkB7D,EAAOC,OAAOrF,WAAUL,EAAG,SAAS,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAIyI,eAAiB,GAAK,CAAC,SAAU,OAAQ,IAAK,SAAS9B,SAAS3G,EAAIqB,aAAcT,WAAW,iFAAiFE,MAAM,CAAC,GAAK,gBAAgB,SAAWd,EAAI2J,0BAA0B/D,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO7F,EAAI4J,mBAAmB,CAAC5J,EAAIe,GAAG,iCAAiC,IACrrVO,EAAkB,CAAC,WAAa,IAAItB,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,SAAS,CAACJ,EAAIe,GAAG,oBAAoBX,EAAG,OAAO,CAACS,YAAY,WAAW,CAACb,EAAIe,GAAG,SAASX,EAAG,OAAO,CAACS,YAAY,oBAAoB,CAACb,EAAIe,GAAG,6E,mXCiNxP,GAZA,gBAYA,CACE,WAAF,CACI,SAAJ,OAAI,SAAJ,QAEE,KAAF,WAAI,MAAJ,CACA,eACA,aACA,0BACA,iBAEA,UACA,eACA,mBACA,iBACA,YACA,oBACA,mBACA,eACA,kBACA,mBACA,WACA,WACA,eACA,UACA,aACA,eACA,cACM,kBAAN,EACM,kBAAN,EACM,kBAAN,EACM,aAAN,KACM,gBAAN,EACM,gBAAN,EACM,gBAAN,EACM,aAAN,EACM,cAAN,EACM,eAAN,GACM,sBAAN,EACM,YAAN,GACM,aAAN,EACM,iBAAN,GACM,wBAAN,EACM,YAAN,EACM,SAAN,EACM,kBAAN,EACM,0BACE,MAAR,kDAEM,wBAAN,GACQ,aAAR,8BAEM,eAAN,EACM,YAAN,EACM,WAAN,EACA,0CACM,cAAN,IAEE,QAzDF,WAyDI,IAAJ,OAAI,OAAJ,qDAAM,OAAN,qCAAQ,MAAR,+BAEA,oEACA,MACA,kCACA,kBAEA,uEACA,kBAEA,oEACgB,EAAhB,uBACA,4CAZA,8CAgBE,MAAF,CACI,YADJ,SACA,GACA,mDACA,sBACA,sCAEI,UANJ,SAMA,GACA,oBACA,kDACA,sDAEI,YAXJ,WAYM,KAAN,gBAEI,iBAdJ,SAcA,GACA,2BAGE,SAAF,iCACA,QADA,IAEI,eAFJ,WAGM,MAAN,2EAEI,UALJ,WAMM,OAAN,8EAEI,eARJ,WASM,IAAN,oBAEM,OADN,mDACA,YAEI,UAbJ,WAcM,MAAN,4DACA,KAEI,QAjBJ,WAkBM,IAAN,yCACM,OAAN,0BAEI,SArBJ,WAsBM,OAAN,iBAEI,YAxBJ,WAyBM,OAAN,oBAEI,yBA3BJ,WA4BM,OAAN,kFAEI,cA9BJ,WA+BM,OAAN,+EAEI,mBAjCJ,WAkCM,OAAN,6CAEA,8FAAM,MAKJ,QApIF,WAoII,IAAJ,OACA,2DACM,KAAN,eAEI,KAAJ,mBAAM,OAAN,yCACA,oDACI,KAAJ,mBACA,6CAEE,QAAF,CACI,QADJ,WACM,IAAN,OAAM,OAAN,qDAAQ,IAAR,UAAQ,OAAR,qCAAU,MAAV,EAAY,OAAZ,sCAEA,wDACA,eACA,oBAGA,eACA,uBACA,kBACgB,EAAhB,oBAVA,KAWA,IAXA,SAWA,6IAXA,sBAWgB,GAXhB,cAYA,0CACA,oBACA,mCAdA,kCAeA,2CAfA,QAegB,EAAhB,kBAfA,OAgBgB,QAAhB,+CAhBA,YAkBA,iCAlBA,wBAmBgB,EAAhB,yDACgB,OAAhB,4BACgB,EAAhB,CACA,6DACA,2EACA,sHACA,sHACA,gGA1BA,UA4BA,6BA5BA,QA4BgB,EA5BhB,OA6BgB,EAAhB,sBAAkB,OAAlB,oDAEgB,EAAhB,uBACgB,EAAhB,iCACgB,EAAhB,iCAEgB,EAAhB,qBACgB,EAAhB,+BACgB,EAAhB,+BArCA,cAwCA,sCAxCA,UA2CA,uBA3CA,yBA4CA,oBA5CA,QA6CgB,EAAhB,kBACA,wBA9CA,2DAgDgB,QAAhB,uCAhDA,kEAoDI,aArDJ,SAqDA,GACM,OAAN,2CAEI,QAxDJ,SAwDA,GAAM,IAAN,2DACM,GAAN,qCACA,oEACM,IAAN,eACM,OAAN,mBAEI,aA9DJ,SA8DA,GACM,OAAN,eACA,8BAEA,QAEI,eApEJ,WAoEM,IAAN,4IACA,MACQ,IAAR,kDACU,KAAV,oBAEA,wCACU,KAAV,yCAAY,OAAZ,6BAGA,IACQ,KAAR,oEAEA,kEACA,0BACA,mBAGI,aArFJ,WAqFM,IAAN,YAAU,EAAV,KAAM,OAAN,qDAAQ,OAAR,qCAAU,MAAV,EAAY,OAAZ,6BACA,2BACA,wEAFA,SAGA,kBAHA,8CAKI,YA1FJ,SA0FA,GACA,sBACA,uCACQ,KAAR,iBAEQ,EAAR,gBACQ,EAAR,uBAGQ,KAAR,aACQ,KAAR,gBAGI,gBAvGJ,WAwGM,IAAN,8BACQ,IAAR,kFACA,gEACQ,EAAR,mCAGI,gBA9GJ,WA8GM,IAAN,OAAM,OAAN,qDAAQ,IAAR,UAAQ,OAAR,qCAAU,MAAV,EAAY,OAAZ,sBAEA,GADA,KACA,wBACA,6BACA,6KAEA,gKAGA,uBAEA,6BACA,2EAZA,MAcA,8MACA,yFAfA,SAgBA,6BAhBA,OAgBA,EAhBA,OAiBA,mFACA,yBACA,6CACA,+EAEA,uCACA,6BAEA,8DACA,4BACA,sDAEgB8I,QAAQC,IAAIC,EAAQA,EAAQrF,OAA5C,IACA,kFACA,wBACgB,EAAhB,wDACA,8BAjCA,+CAmCA,sBAjJA,SAiJA,gLACgB,EAAhB,wBACgB,EAAhB,mBACA,EAHA,uBAIA,2BAJA,6BAOA,sBAPA,wDAQA,mBACA,4DACA,wEACA,oBACA,qBACA,4IACA,uFACA,2JAfA,oBAiBA,6BAjBA,QAiBgB,EAjBhB,OAkBgB,EAAhB,sBAAkB,OAAlB,oDACgB,EAAhB,+CACkB,IAAlB,uBACA,eACoB,EAApB,mBACoB,EAApB,oBAGA,wBAEA,qBACA,iEACA,qBACA,oCACA,+BAGA,gCAEA,4BAEA,cACA,eACA,0BACA,iBA1CA,sDA8CA,oBACgB,EAAhB,kBACgB,EAAhB,0DACkB,OAAlB,kBAEA,+BAnDA,8DAsDA,cAvMA,WAuMA,gLAEA,uBAFA,OAIA,IADA,KACA,yBACA,2DACA,cACA,UACA,yDACA,0BAEA,sCACA,yBACA,aAbA,yBAeA,GAfA,8CAiBI,UAxNJ,WAwNM,IAAN,YAAU,EAAV,KAAM,OAAN,qDAAQ,IAAR,cAAQ,OAAR,qCAAU,MAAV,EAAY,OAAZ,oGACgB,EAAhB,gBACgB,EAAhB,wHACA,mDACA,wBACA,gFALA,EAOA,mCAPA,EAOA,QAPA,SAQA,wBARA,cAQgB,EARhB,OASgB,EAAhB,cACgB,EAAhB,gBAVA,UAYA,kEAZA,WAYgB,EAZhB,SAcA,QAdA,kCAeA,2BACkB,EAAlB,sCACA,MACoB,KAApB,uBACoB,SAApB,cACoB,IAApB,MAEA,oCACoB,IACA,OAApB,OAAoB,CAApB,MAEA,yBACoB,EAApB,oBACoB,OAZpB,UAcA,YACoB,EAApB,QACoB,IACA,EAApB,SAjCA,WAsCA,4BAtCA,wBAuCgB,EAAhB,gBAvCA,eA0CA,IA1CA,UA0CA,gEA1CA,2BA0CgB,GA1ChB,wBA2CA,0DACA,MACkB,KAAlB,uBACkB,SAAlB,cACkB,IAAlB,MAEA,oCACkB,IACA,OAAlB,OAAkB,CAAlB,MAnDA,8DAuDgB,QAAhB,UACgB,IACA,EAAhB,WAzDA,QA6DgB,EAAhB,gBA7DA,8DAmGI,cA3TJ,WA2TM,IAAN,OAAM,OAAN,qDAAQ,IAAR,EAAQ,OAAR,qCAAU,MAAV,EAAY,OAAZ,sBACgB,EAAhB,qCACgB,EAAhB,iBAFA,8CAIA,QA/TA,SA+TA,gQAEA,iBADA,EACA,6DACA,4BADA,iCAIA,0CACA,4BADA,yPANA,EAcA,mCAdA,EAcA,QAdA,KAgBA,IAhBA,SAgBA,qEAhBA,0BAgBgB,GAhBhB,cAkBA,UACA,KAnBA,oBAsBA,2BACA,qDACA,MACA,4BACA,uBACoB,IAApB,QAEA,oCACoB,EAApB,4DACoB,IACA,OAApB,OAAoB,CAApB,GACoB,OAEpB,0BACoB,EAApB,yCACoB,EAApB,2BACoB,EAApB,wBAfA,UAiBA,YACoB,IACA,EAApB,SA1CA,QA6CA,GACA,cA9CA,4DAoDgB,QAAhB,UACgB,EAAhB,WACgB,EAAhB,kBACgB,EAAhB,gBAvDA,aA0DgB,EAAhB,kBACgB,EAAhB,gBA3DA,8DA6DI,iBA5XJ,SA4XA,GAAM,IAAN,OACM,KAAN,gBACM,YAAN,WAAQ,OAAR,2BAEA,wBAhYA,WAgYA,gWACA,uBADA,uBAEA,oBAFA,UAIgB,EAAhB,SACA,mBALA,0DAMgB,EAAhB,oBANA,UAOA,wBAPA,QAOgB,EAPhB,OAQgB,EAAhB,cACgB,EAAhB,cACA,uDACA,GACoB,EAApB,kBACA,8CAGoB,EAApB,+BACA,eACsB,EAAtB,0DAEA,uCACsB,EAAtB,wDAGsB,EAAtB,+DAIgB,EAAhB,gBACgB,EAAhB,mBACA,wEAEA,GACA,IAjCA,aAiCA,kBAjCA,oBAkCA,YAlCA,wBAmCgB,EAAhB,wBAnCA,gCAsCgB,EAAhB,gDACgB,EAAhB,mDACA,EACA,oFAGA,+FA5CA,QAiCA,IAjCA,2BAgDgB,EAAhB,kDACA,eAjDA,6CAoDA,2DApDA,QAoDA,EApDA,6DAuDA,oBACA,oBACA,iCAzDA,WA2DgB,EAAhB,qCACA,+DACA,uFA7DA,wBA8DgB,EAAhB,mCACA,cA/DA,UAgEA,qBAhEA,YAkEA,EAlEA,sDAmEA,kCACA,wDApEA,wBAqEA,gDArEA,UAuEgB,EAAhB,uDAvEA,EAwEA,mCAxEA,EAwEA,QAxEA,oBA2EA,4DACA,aACkB,KAAlB,uBACkB,SAAlB,cACkB,IAAlB,IA/EA,QA2EgB,EAAhB,YA3EA,6DAmFgB,EAAhB,gBAnFA,yBAqFA,YArFA,yBAsFA,kEACA,4BACkB,SAAlB,cACkB,IAAlB,IACA,oCACkB,IACA,OAAlB,OAAkB,CAAlB,GACkB,EAAlB,gFA7FA,oEAiGgB,QAAhB,YACgB,IACA,EAAhB,WACgB,EAAhB,kBACgB,EAAhB,gBArGA,yCA0GA,WACgB,EAAhB,mBAAkB,OAAlB,QACA,8BACA,SACkB,IAAlB,wCACkB,OAAlB,4KAEgB,EAAhB,mBAAkB,OAAlB,QACgB,EAAhB,wDACgB,EAAhB,6FAnHA,EAoHA,mCApHA,EAoHA,QApHA,UAsHgB,EAAhB,6EACA,uDAvHA,kCAuHA,oEAvHA,eAwHgB,IACA,EAAhB,uDAzHA,EA0HA,mCA1HA,EA0HA,QA1HA,WA2HA,YA3HA,2BA4HA,gDACA,4BACkB,SAAlB,cACkB,IAAlB,IACA,oCACkB,IACA,OAAlB,OAAkB,CAAlB,GACkB,EAAlB,gFAnIA,wEAuIgB,QAAhB,YACgB,IACA,EAAhB,WACgB,EAAhB,kBACgB,EAAhB,gBA3IA,2CAiJgB,EAAhB,qBACA,aAlJA,8BAkJA,IAlJA,WAkJA,mEAlJA,qBAkJgB,GAlJhB,0BAmJA,2CACgB,EAAhB,qCAEA,kFAtJA,yBAuJgB,EAAhB,mCACA,cAxJA,WAyJA,qBAzJA,aA2JA,EA3JA,wDA4JgB,EAAhB,iBACA,wCA7JA,qBA8JgB,EAAhB,6FA9JA,EA+JA,mCA/JA,EA+JA,QACgB,EAAhB,wDACA,uDAjKA,oCAiKA,8DAjKA,gBAkKgB,IAlKhB,sBAqKA,yDArKA,SAqKgB,EArKhB,OAsKgB,EAAhB,sCAtKA,0DAyKgB,QAAhB,YACgB,EAAhB,kBACgB,EAAhB,+BA3KA,gBA6KgB,EAAhB,uDA7KA,EA8KA,mCA9KA,EA8KA,QACgB,EAAhB,oGA/KA,WAgLA,YAhLA,uCAkLA,aACA,0BADA,QACA,GACA,MACA,4BACA,uBACkB,IAAlB,8CACA,oCACkB,IACA,OAAlB,OAAkB,CAAlB,GACkB,EAAlB,kHACA,EADA,8FA3LA,mEAiMgB,QAAhB,YACgB,IACA,EAAhB,WAnMA,sCAsMA,0CAtMA,qBAuMgB,EAAhB,6FAvMA,EAwMA,mCAxMA,EAwMA,QAxMA,WA0MgB,EAAhB,6DACA,uDA3MA,oCA2MA,8DA3MA,gBA4MgB,IACA,EAAhB,uDA7MA,EA8MA,mCA9MA,EA8MA,QA9MA,WA+MA,kBA/MA,gBA+MgB,EA/MhB,kBAgNA,YAhNA,2BAiNA,gCACA,MACkB,KAAlB,uBACkB,SAAlB,cACkB,IAAlB,iDAEA,oCACkB,IACA,OAAlB,OAAkB,CAAlB,GACkB,EAAlB,kHACA,EADA,8FA1NA,yEAgOgB,QAAhB,YACgB,IACA,EAAhB,WACgB,EAAhB,kBACgB,EAAhB,gBApOA,qEA0OA,kBA1OA,gBA0OA,EA1OA,OA2OgB,EAAhB,uDA3OA,EA4OA,mCA5OA,EA4OA,QA5OA,sBA8OA,0CACA,aACkB,KAAlB,uBACkB,SAAlB,cACkB,IAAlB,MAlPA,SA8OgB,EAAhB,YA9OA,iEAsPgB,EAAhB,gBAtPA,2BAwPA,YAxPA,2BAyPA,gDACkB,KAAlB,uBACkB,SAAlB,cACkB,IAAlB,MAEA,oCACkB,IACA,OAAlB,OAAkB,CAAlB,GACkB,EAAlB,kHACA,EADA,8FAjQA,0EAuQgB,QAAhB,aACgB,IACA,EAAhB,YACgB,EAAhB,kBACgB,EAAhB,gBA3QA,eAgRA,kBACA,6BACA,2BAlRA,OAqRgB,EAAhB,gBACgB,EAAhB,kBACgB,EAAhB,cAvRA,WAyRA,oBAzRA,2BA0RA,uBA1RA,0IA4RA,oBA5pBA,WA4pBA,0LAGgB,EAAhB,mBACA,wEAEgB,EAAhB,cACgB,EAAhB,wBACgB,EAAhB,kBACA,wEACA,oFACgB,EAAhB,oEACgB,EAAhB,qBACgB,EAAhB,kBACA,wCAdA,oBAegB,EAAhB,iDACA,aAhBA,4CAkBA,iHAlBA,QAkBgB,EAlBhB,mEAoBgB,QAAhB,kCApBA,aAuBA,kEAvBA,eAyBgB,EAAhB,8DACgB,EAAhB,8BA1BA,UA4BgB,EAAhB,cACgB,QAAhB,oCA7BA,UA8BA,yDA9BA,QA8BgB,EA9BhB,OA+BgB,EAAhB,sBACA,+CAhCA,sDAmCgB,QAAhB,0CACA,cACkB,EAAlB,kBACkB,EAAlB,gCAtCA,eAyCgB,EAAhB,8BACgB,EAAhB,uCACgB,EAAhB,iCAAkB,OAAlB,KACgB,EAAhB,2DA5CA,UA6CA,sCA7CA,WAgDgB,EAAhB,mCACgB,EAAhB,yBACA,eACkB,EAAlB,QAEA,wBACA,uCACA,wCAvDA,mDAwDgB,IAAhB,yBACA,yBACoB,EAApB,kEACoB,EAApB,uCAGoB,EAApB,uBAEkB,EAAlB,0BACoB,gBAApB,UACoB,MAApB,YAlEA,2DAuEgB,QAAhB,wCAvEA,kFA4EA,sBAxuBA,SAwuBA,GACA,iCACA,2FAGA,mBA7uBA,WA6uBA,2JACA,0BADA,yCAEA,gCAFA,cAGA,YAHA,SAIA,4BAJA,8CAMI,YAnvBJ,WAmvBM,IAAN,OAAM,OAAN,qDAAQ,IAAR,gBAAQ,OAAR,qCAAU,MAAV,EAAY,OAAZ,6BACgB,EAAhB,aACgB,EAAhB,SACgBsF,EAAQC,KAAK,GACb,EAAhB,0BAJA,SAKA,qCALA,cAOgBD,EAAUA,EAAQE,KAAI,SAAtC,sEACgB,EAAhB,oDARA,EASA,mCATA,EASA,QATA,UAUA,oCAVA,eAWgBC,IACA,EAAhB,gFAZA,UAaA,iEAbA,eAagB,EAbhB,OAcgBC,EAAe,IAA/B,2CACgB,EAAhB,gEAfA,EAgBA,mCAhBA,EAgBA,QACgB,EAAhB,wBACgB,EAAhB,mCAlBA,UAmBA,YAnBA,QAoBgB,IAChB,mCACoB,KAApB,uBACoB,IAApB,IAEA,oCACoB,IACA,OAApB,OAAoB,CAApB,GACoB,EAApB,iGAGA,SACkB,QAAlB,SACkB,EAAlB,QAjCA,kDCxlCiW,I,wBCQ7V7I,EAAY,eACd,EACAxB,EACAuB,GACA,EACA,KACA,KACA,MAIa,aAAAC,E,2CCnBf,IAAIxB,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,IAAI,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAgB,aAAEY,WAAW,iBAAiBC,YAAY,sBAAsB,CAACb,EAAIe,GAAG,IAAIf,EAAIgB,GAAGhB,EAAIqK,cAAc,OAAOjK,EAAG,MAAM,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAkB,eAAEY,WAAW,mBAAmBC,YAAY,YAAYC,MAAM,CAAC,GAAK,cAAc,CAACV,EAAG,OAAO,CAACkK,YAAY,CAAC,MAAQ,YAAY,CAACtK,EAAIe,GAAG,gBAAgBX,EAAG,QAAQ,CAACU,MAAM,CAAC,GAAK,cAAc,KAAO,QAAQ,KAAO,OAAO6E,SAAS,CAAC,MAAQ3F,EAAIuK,gBAAgB3E,GAAG,CAAC,MAAQ,SAASC,GAAQ7F,EAAIwK,mBAAoB,EAAMxK,EAAIqJ,SAAWrJ,EAAIuK,mBAAmBnK,EAAG,QAAQ,CAACU,MAAM,CAAC,IAAM,gBAAgB,CAACd,EAAIe,GAAGf,EAAIgB,GAAGyJ,KAAKC,MAAM1K,EAAIuK,iBAAiB,eAAenK,EAAG,QAAQ,CAACU,MAAM,CAAC,GAAK,UAAU,KAAO,QAAQ,KAAO,MAAM,QAAU,IAAI6E,SAAS,CAAC,MAAQ3F,EAAI2K,cAAc/E,GAAG,CAAC,MAAQ,SAASC,GAAQ7F,EAAIwK,mBAAoB,EAAMxK,EAAIqJ,SAAWrJ,EAAI2K,iBAAiBvK,EAAG,QAAQ,CAACU,MAAM,CAAC,IAAM,YAAY,CAACd,EAAIe,GAAGf,EAAIgB,GAAGyJ,KAAKC,MAAM1K,EAAI2K,eAAe,WAAWvK,EAAG,QAAQ,CAACU,MAAM,CAAC,GAAK,aAAa,KAAO,QAAQ,KAAO,OAAO6E,SAAS,CAAC,MAAQ3F,EAAI4K,iBAAiBhF,GAAG,CAAC,MAAQ,SAASC,GAAQ7F,EAAIwK,mBAAoB,EAAMxK,EAAIqJ,SAAWrJ,EAAI4K,oBAAoBxK,EAAG,QAAQ,CAACU,MAAM,CAAC,IAAM,eAAe,CAACd,EAAIe,GAAGf,EAAIgB,GAAGyJ,KAAKC,MAAM1K,EAAI4K,kBAAkB,cAAcxK,EAAG,QAAQ,CAACU,MAAM,CAAC,GAAK,aAAa,KAAO,QAAQ,KAAO,MAAM,MAAQ,KAAK8E,GAAG,CAAC,MAAQ,SAASC,GAAQ7F,EAAIwK,mBAAoB,EAAOxK,EAAIqJ,SAAWrJ,EAAI6K,iBAAiBzK,EAAG,QAAQ,CAACU,MAAM,CAAC,IAAM,cAAc8E,GAAG,CAAC,MAAQ,SAASC,GAAQ7F,EAAIwK,mBAAoB,EAAOxK,EAAIqJ,SAAWrJ,EAAI6K,gBAAgB,CAACzK,EAAG,QAAQ,CAACU,MAAM,CAAC,KAAO,OAAO,GAAK,mBAAmB,SAAWd,EAAIwK,kBAAkB,KAAO,oBAAoB7E,SAAS,CAAC,MAAQ3F,EAAI8K,qBAAqBlF,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO7F,EAAI+K,aAAalF,OAAYzF,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAI8K,qBAAuB9K,EAAI6K,aAAcjK,WAAW,0CAA0CR,EAAG,OAAO,CAACE,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOT,EAAI8K,qBAAuB9K,EAAI8K,oBAAsB9K,EAAI6K,aAAcjK,WAAW,8DAA8DC,YAAY,aAAa,CAACb,EAAIkB,GAAG,YAC9yEI,EAAkB,CAAC,WAAa,IAAItB,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,OAAO,CAACS,YAAY,WAAW,CAACb,EAAIe,GAAG,SAASX,EAAG,OAAO,CAACS,YAAY,eAAe,CAACb,EAAIe,GAAG,+D,2HC4C3M,GACA,uBACM,mBAAN,IAGA,UACI,aADJ,WAEM,OAAN,kDAEA,eAJA,WAKM,OAAN,uDAEI,aAPJ,WAQM,OAAN,mDAEI,gBAVJ,WAWM,OAAN,sDAEI,SAAJ,CACM,IADN,WAEQ,OAAR,iBAEM,IAJN,SAIA,GACQ,EAAR,kBAGI,oBArBJ,WAsBM,OAAN,yCACA,eAEI,aAzBJ,WA2BM,OADA,YAAN,WAAQ,OAAR,4BACA,iBAIA,QApCA,WAoCA,yJACA,gCACA,kFACA,4DACgB,EAAhB,+FAEA,2DACA,oDACA,CACA,eATA,8CAaE,QAAF,CACI,YADJ,WACM,OAAN,qDAAQ,IAAR,IAAQ,OAAR,qCAAU,MAAV,EAAY,OAAZ,+CAEA,uDAFA,cAEgB,EAFhB,gBAGA,SAHA,UAGgB,EAHhB,OAIgB,EAAhB,oBACgB,EAAhB,iDACA,8BANA,uBAMA,uBANA,oEASgB,QAAhB,YATA,UAUA,uBAVA,oBAUgB,EAVhB,KAUA,IACgB,EAAhB,mBACkB,IAAlB,IACkB,SAAlB,EACkB,KAAlB,IACkB,QAAlB,KAfA,QAmBA,iBACkB,EAAlB,uCACkB,EAAlB,iBArBA,6DAyBI,aA1BJ,SA0BA,GAAM,IAAN,OAAM,OAAN,qDAAQ,IAAR,EAAQ,OAAR,qCAAU,MAAV,EAAY,OAAZ,sBACgB,EAAhB,eACA,qCACA,uBACgB,EAAhB,WAJA,gDCxHiW,I,wBCQ7VQ,EAAY,eACd,EACAxB,EACAuB,GACA,EACA,KACA,WACA,MAIa,OAAAC,E,2CCnBf,iLAOA,MAAMyJ,EAAkBP,KAAKQ,IAAI,EAAG,IAAM,EAW1C,SAASC,EAAmBC,GAC1B,OAAOC,EAAoB1I,MAAMzC,KAAMwC,WAGzC,SAAS2I,IAkBP,OAjBAA,EAAsB,GAAkB,UAAWC,GACjDA,EAAMC,SAAU,EAEhB,IAAK,IAAIzD,EAAK,EAAG0D,EAAiBpF,OAAOqF,OAAOH,EAAMI,UAAW5D,EAAK0D,EAAe7G,OAAQmD,IAAM,CACjG,MAAM6D,EAAUH,EAAe1D,GAC/B8D,aAAaD,GAGf,MAAME,EAAO,OAEPC,EAAW1F,OAAOqF,OAAOH,EAAMQ,UAAU3B,IAAI4B,IACjDA,EAAQC,MAAMH,KAEVI,EAAeC,YAAYL,EAAMZ,SACjC7I,QAAQ+J,IAAIL,GAClBM,cAAcH,MAETZ,EAAoB1I,MAAMzC,KAAMwC,WAYzC,MAAM2J,UAA8BC,OAEpClG,OAAOvC,eAAewI,EAAsBnI,UAAW,OAAQ,CAC7DxD,MAAO,0BAQT,MAAM6L,EAAkB,GAQxB,SAASC,EAAgBC,GACvB,GAAyB,oBAAZA,EACX,MAAM,IAAIJ,EAAsB,qDASpC,SAASK,EAAiBC,GACxB,KAA0B,kBAAbA,GAAyBJ,GAAmBI,GACvD,MAAM,IAAIN,EAAsB,4EAA4EE,MAchH,MAAMK,EACJ,cACE1M,KAAKqL,SAAU,EACfrL,KAAK2M,GAAK,EACV3M,KAAKwL,SAAW,GAChBxL,KAAK4L,SAAW,IAsBpB,SAASgB,EAAiBL,EAASE,KAAalK,GAC9C+J,EAAgBC,GAChBC,EAAiBC,GACjB,MAAMrB,EAAQ,IAAIsB,EACZC,EAAKvB,EAAMuB,GAEjB,OADAvB,EAAMI,SAASmB,GAAME,WAAWC,EAAgBL,EAAUrB,EAAOmB,EAASE,KAAalK,GAChF6I,EAGT,SAAS0B,EAAe1B,EAAOmB,EAASE,KAAalK,GACnD,MAAMoK,EAAKvB,EAAMuB,GACjBvB,EAAMQ,SAASe,GAAM,GAAkB,YACrC,MAAMI,EAAY,IAAIC,KAEtB,UACQT,KAAWhK,GACjB,MAAOG,GACPkH,QAAQ5H,MAAMU,GAGhB,MAAMuK,EAAU,IAAID,KAEpB,IAAK5B,EAAMC,QAAS,CAClB,MAAM6B,EAAgBD,EAAUF,EAC1BtB,EAAUgB,EAAWS,EAAgBT,EAAWS,EAAgB,EACtE9B,EAAMI,SAASmB,EAAK,GAAKE,WAAWC,EAAgBrB,EAASL,EAAOmB,EAASE,KAAalK,UAGrF6I,EAAMI,SAASmB,UACfvB,EAAMQ,SAASe,KAlBH,GAoBrBvB,EAAMuB,GAAKA,EAAK","file":"js/chunk-41d57fe1.cda2a07e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showSlippage && _vm.slippage < -0.005),expression:\"showSlippage && slippage < -0.005\"}],staticClass:\"simple-error\",attrs:{\"id\":\"highslippage-warning\"}},[_c('span',{staticClass:\"text\"},[_vm._v(\" Warning! High slippage(plus pricing): \"),_c('span',{staticClass:\"percent\"},[_vm._v(_vm._s((-_vm.slippage*100).toFixed(3)))]),_vm._v(\"% \"),_vm._m(0)])]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showSlippage && _vm.slippage <= 0 && _vm.slippage >= -0.005),expression:\"showSlippage && slippage <= 0 && slippage >= -0.005\"}],staticClass:\"info-message\",attrs:{\"id\":\"slippage-warning\"}},[_c('span',{staticClass:\"text\"},[_vm._v(\" Slippage(plus pricing): \")]),_c('span',{staticClass:\"percent\"},[_vm._v(_vm._s((-_vm.slippage*100).toFixed(3)))]),_vm._v(\"% \"),_vm._m(1)]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showSlippage && _vm.slippage > 0),expression:\"showSlippage && slippage > 0\"}],staticClass:\"success\",attrs:{\"id\":\"bonus-window\"}},[_vm._v(\" Bonus(plus pricing): \"),_c('span',[_vm._v(_vm._s((_vm.slippage*100).toFixed(3)))]),_vm._v(\"% \"),_c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?] \"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\" Bonus comes as an advantage from current coin prices which usually appears for coins which are \"+_vm._s(_vm.$route.name == 'Deposit' ? 'low' : 'high')+\" in balance \")])])]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_nobalance),expression:\"show_nobalance\"}],staticClass:\"simple-error\",attrs:{\"id\":\"nobalance-warning\"}},[_vm._v(\" Warning! Not enough balance for \"+_vm._s(_vm.noBalanceText)+\" token in the contract \")]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool == 'susdv2' && _vm.showSlippage && _vm.slippage < -0.01),expression:\"currentPool == 'susdv2' && showSlippage && slippage < -0.01\"}],staticClass:\"info-message gentle-message\",attrs:{\"id\":\"susd-warning\"}},[_vm._v(\" Please add coins in a balanced proportion \")])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?] \"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\" Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?] \"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\" Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for \")])])}]\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t    <p class='simple-error' id='highslippage-warning' v-show='showSlippage && slippage < -0.005'>\n\t    \t<span class='text'>\n          Warning! High slippage(plus pricing):\n        <span class='percent'>{{(-slippage*100).toFixed(3)}}</span>%\n          <span class='tooltip'>[?]\n            <span class='tooltiptext long'>\n              Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for\n            </span>\n          </span>\n        </span>\n\t    </p>\n\t    <p class='info-message' id='slippage-warning' v-show='showSlippage && slippage <= 0 && slippage >= -0.005'>\n\t    \t<span class='text'>\n          Slippage(plus pricing):\n        </span>\n        <span class='percent'>{{(-slippage*100).toFixed(3)}}</span>%\n          <span class='tooltip'>[?]\n            <span class='tooltiptext long'>\n              Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for\n            </span>\n          </span>\n\t    </p>\n\t    <p class='success' id='bonus-window' v-show='showSlippage && slippage > 0'>\n\t    \tBonus(plus pricing): <span>{{(slippage*100).toFixed(3)}}</span>%\n        <span class='tooltip'>[?]\n          <span class='tooltiptext long'>\n            Bonus comes as an advantage from current coin prices which usually appears for coins which are {{ $route.name == 'Deposit' ? 'low' : 'high'}} in balance\n          </span>\n        </span>\n\t    </p>\n      <p class='simple-error' id='nobalance-warning' v-show='show_nobalance'>\n      \tWarning! Not enough balance for {{noBalanceText}} token in the contract\n      </p>\n      <p class='info-message gentle-message' id='susd-warning' v-show=\"currentPool == 'susdv2' && showSlippage && slippage < -0.01\">\n        Please add coins in a balanced proportion\n      </p>\n\t</div>\n</template>\n\n<script>\n    import { getters} from '../../contract'\n    export default {\n    \tprops: ['show_nobalance','show_nobalance_i'],\n        computed: {\n          ...getters,\n          noBalanceText() {\n          \tif(!this.show_nobalance) return '';\n          \tlet kv = Object.entries(this.currencies)[this.show_nobalance_i]\n            if(!(this.show_nobalance_i == 2 && this.currentPool == 'usdt') && this.currentPool != 'susdv2') {\n              return kv[1] + \" (in \" + kv[0] + \")\";\n            }\n            return kv[1];\n          }\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Slippage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Slippage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Slippage.vue?vue&type=template&id=556a4168&scoped=true&\"\nimport script from \"./Slippage.vue?vue&type=script&lang=js&\"\nexport * from \"./Slippage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"556a4168\",\n  null\n  \n)\n\nexport default component.exports","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GasPrice.vue?vue&type=style&index=0&id=11f75e20&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GasPrice.vue?vue&type=style&index=0&id=11f75e20&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=style&index=0&lang=css&\"","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.github.io/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.github.io/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"add-liquidity\"},[_c('fieldset',{staticClass:\"percentage\"},[_c('legend',[_vm._v(\" Share of liquidity (%) \")]),_c('ul',[_c('li',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.share),expression:\"share\"}],style:(_vm.shareStyles),attrs:{\"type\":\"text\",\"id\":\"liquidity-share\",\"name\":\"liquidity-share\"},domProps:{\"value\":(_vm.share)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.share=$event.target.value},_vm.handle_change_share],\"focus\":_vm.handle_change_share}})])])]),_c('fieldset',{staticClass:\"currencies\"},[_c('legend',[_vm._v(\"Currencies:\")]),_c('ul',_vm._l((Object.keys(_vm.currencies)),function(currency,i){\nvar _obj;\nreturn _c('li',[_c('label',{staticClass:\"currency_label\",attrs:{\"for\":'currency_'+i}},[_c('img',{class:( _obj = {'token-icon': true}, _obj[currency+'-icon'] = true, _obj['y'] =  _vm.withdrawc, _obj[_vm.currentPool] = true, _obj ),attrs:{\"src\":_vm.getTokenIcon(currency)}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.withdrawc),expression:\"withdrawc\"}]},[_vm._v(_vm._s(_vm.currencies[currency])+\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!(currency == 'usdt' && _vm.currentPool == 'usdt') && !['susdv2', 'ren', 'sbtc'].includes(_vm.currentPool)),expression:\"!(currency == 'usdt' && currentPool == 'usdt') && !['susdv2', 'ren', 'sbtc'].includes(currentPool)\"}]},[_vm._v(\"(in \"+_vm._s(_vm._f(\"capitalize\")(currency))+\")\")])]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.withdrawc && !['susdv2', 'tbtc', 'ren', 'sbtc'].includes(_vm.currentPool)),expression:\"!withdrawc && !['susdv2', 'tbtc', 'ren', 'sbtc'].includes(currentPool)\"}]},[_vm._v(_vm._s(_vm._f(\"capitalize\")(currency)))]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.withdrawc && ['susdv2', 'tbtc', 'ren', 'sbtc'].includes(_vm.currentPool)),expression:\"!withdrawc && ['susdv2', 'tbtc', 'ren', 'sbtc'].includes(currentPool)\"}]},[_vm._v(_vm._s(_vm.currencies[currency]))])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs[i]),expression:\"inputs[i]\"}],ref:(\"inputs\" + i),refInFor:true,style:(_vm.inputStyles[i]),attrs:{\"type\":\"text\",\"id\":'currency_'+i,\"name\":\"from_cur\",\"disabled\":_vm.currentPool == 'susd'},domProps:{\"value\":(_vm.inputs[i])},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(_vm.inputs, i, $event.target.value)},function($event){return _vm.handle_change_amounts(i)}],\"focus\":function($event){return _vm.handle_change_amounts(i)}}})])}),0)]),_c('fieldset',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool != 'susd'),expression:\"currentPool != 'susd'\"}]},[_vm._m(0),_c('ul',[_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(!['susdv2','tbtc','ren', 'sbtc'].includes(_vm.currentPool)),expression:\"!['susdv2','tbtc','ren', 'sbtc'].includes(currentPool)\"}]},[_c('input',{attrs:{\"type\":\"radio\",\"id\":\"to_cur_comb\",\"name\":\"to_cur\"},domProps:{\"value\":10,\"checked\":_vm.to_currency === 10},on:{\"click\":function($event){return _vm.handleCheck(10)}}}),_c('label',{attrs:{\"for\":\"to_cur_comb\"}},[_vm._v(\" Combination of all coins \"),_vm._l((Object.keys(_vm.currencies)),function(currency,i){\nvar _obj;\nreturn _c('span',[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(i > 0),expression:\"i > 0\"}]},[_vm._v(\"+\")]),_c('img',{class:( _obj = {'token-icon': true}, _obj[currency+'-icon'] = true, _obj['y'] =  _vm.withdrawc, _obj[_vm.currentPool] = true, _obj ),attrs:{\"src\":_vm.getTokenIcon(currency)}})])})],2)]),_vm._l((Object.keys(_vm.currencies)),function(currency,i){\nvar _obj;\nreturn _c('li',{staticClass:\"withdrawin\"},[_c('input',{attrs:{\"type\":\"radio\",\"id\":'to_cur_'+i,\"name\":\"to_cur\"},domProps:{\"value\":i,\"checked\":_vm.to_currency === i},on:{\"click\":function($event){return _vm.handleCheck(i)}}}),_c('label',{attrs:{\"for\":'to_cur_'+i}},[_c('img',{class:( _obj = {'token-icon': true}, _obj[currency+'-icon'] = true, _obj['y'] =  _vm.withdrawc, _obj[_vm.currentPool] = true, _obj ),attrs:{\"src\":_vm.getTokenIcon(currency)}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.withdrawc),expression:\"!withdrawc\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"capitalize\")(currency))+\" \")]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.withdrawc),expression:\"withdrawc\"}]},[_vm._v(\" \"+_vm._s(_vm.currencies[currency])+\" \")])])])})],2)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showWithdrawSlippage),expression:\"showWithdrawSlippage\"}],attrs:{\"id\":\"max_slippage\"}},[_c('span',[_vm._v(\"Max slippage:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.maxSlippage),expression:\"maxSlippage\"}],attrs:{\"id\":\"slippage02\",\"type\":\"radio\",\"name\":\"slippage\",\"value\":\"0.2\"},domProps:{\"checked\":_vm._q(_vm.maxSlippage,\"0.2\")},on:{\"change\":function($event){_vm.maxSlippage=\"0.2\"}}}),_c('label',{attrs:{\"for\":\"slippage02\"}},[_vm._v(\"0.2%\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.maxSlippage),expression:\"maxSlippage\"}],attrs:{\"id\":\"slippage1\",\"type\":\"radio\",\"name\":\"slippage\",\"checked\":\"\",\"value\":\"3\"},domProps:{\"checked\":_vm._q(_vm.maxSlippage,\"3\")},on:{\"change\":function($event){_vm.maxSlippage=\"3\"}}}),_c('label',{attrs:{\"for\":\"slippage1\"}},[_vm._v(\"3%\")]),_c('input',{attrs:{\"id\":\"custom_slippage\",\"type\":\"radio\",\"name\":\"slippage\",\"value\":\"-\"},on:{\"click\":function($event){_vm.customippageDisabled = false}}}),_c('label',{attrs:{\"for\":\"custom_slippage\"},on:{\"click\":function($event){_vm.customSlippageDisabled = false}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.maxInputSlippage),expression:\"maxInputSlippage\"}],attrs:{\"type\":\"text\",\"id\":\"custom_slippage_input\",\"disabled\":_vm.customSlippageDisabled,\"name\":\"custom_slippage_input\"},domProps:{\"value\":(_vm.maxInputSlippage)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.maxInputSlippage=$event.target.value}}}),_vm._v(\" % \")])]),_c('gas-price'),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showInfApprovalZap),expression:\"showInfApprovalZap\"}],staticClass:\"do-center\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inf_approval),expression:\"inf_approval\"}],attrs:{\"id\":\"inf_approval\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.inf_approval)?_vm._i(_vm.inf_approval,null)>-1:(_vm.inf_approval)},on:{\"change\":function($event){var $$a=_vm.inf_approval,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.inf_approval=$$a.concat([$$v]))}else{$$i>-1&&(_vm.inf_approval=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.inf_approval=$$c}}}}),_c('label',{attrs:{\"for\":\"inf_approval\"}},[_vm._v(\"Infinite approval - trust zap contract forever\")])]),_c('div',{staticClass:\"buttons\",attrs:{\"id\":\"withdraw_buttons\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.nobalance),expression:\"nobalance\"}],staticClass:\"info-message gentle-message\",attrs:{\"id\":\"amount-warning\"}},[_vm._v(\" You don't have any available amount to withdraw \")]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool != 'susd'),expression:\"currentPool != 'susd'\"}],staticClass:\"simplebutton\",attrs:{\"id\":\"remove-liquidity\",\"disabled\":['susdv2', 'sbtc'].includes(_vm.currentPool) && _vm.slippage < -0.03 && !_vm.warninglow || _vm.show_nobalance == true},on:{\"click\":function($event){return _vm.handle_remove_liquidity()}}},[_vm._v(\" Withdraw \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.loadingAction == 1),expression:\"loadingAction == 1\"}],staticClass:\"loading line\"})]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2', 'sbtc','y','swusd'].includes(_vm.currentPool) && _vm.staked_balance > 0 ),expression:\"['susdv2', 'sbtc','y','swusd'].includes(currentPool) && staked_balance > 0 \"}],attrs:{\"id\":\"remove-liquidity-unstake\",\"disabled\":_vm.slippage < -0.03},on:{\"click\":function($event){return _vm.handle_remove_liquidity(true, false, true)}}},[_vm._v(\" Withdraw & claim \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.loadingAction == 2),expression:\"loadingAction == 2\"}],staticClass:\"loading line\"})]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2', 'sbtc','y','swusd'].includes(_vm.currentPool) && _vm.pendingSNXRewards > 0),expression:\"['susdv2', 'sbtc','y','swusd'].includes(currentPool) && pendingSNXRewards > 0\"}],attrs:{\"id\":\"claim-snx\"},on:{\"click\":function($event){return _vm.claim_SNX(false)}}},[_vm._v(\" Claim \"+_vm._s((_vm.pendingSNXRewards / 1e18).toFixed(2))+\" \"+_vm._s(['y','swusd'].includes(_vm.currentPool) ? 'YFI' : 'SNX')+\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool == 'sbtc'),expression:\"currentPool == 'sbtc'\"}]},[_vm._v(\" + \"+_vm._s((_vm.pendingRENRewards / 1e18).toFixed(2))+\" REN\")])]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(['sbtc'].includes(_vm.currentPool) && _vm.pendingBALRewards > 0),expression:\"['sbtc'].includes(currentPool) && pendingBALRewards > 0\"}],attrs:{\"id\":\"claim-bpt\"},on:{\"click\":function($event){return _vm.claim_SNX(true)}}},[_vm._v(\" Claim \"+_vm._s((_vm.pendingBALRewards / 1e18).toFixed(6))+\" BPT \")]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(['sbtc'].includes(_vm.currentPool) && _vm.withdrawBALPool > 0),expression:\"['sbtc'].includes(currentPool) && withdrawBALPool > 0\"}],attrs:{\"id\":\"claim-snxbpt\"},on:{\"click\":function($event){return _vm.claim_SNX(true, false)}}},[_vm._v(\" Withdraw \"+_vm._s((_vm.withdrawSNXPool / 1e18).toFixed(0))+\" SNX + \"+_vm._s((_vm.withdrawRENPool / 1e18).toFixed(0))+\" REN \")]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2', 'sbtc','y','swusd'].includes(_vm.currentPool) && _vm.staked_balance > 0),expression:\"['susdv2', 'sbtc','y','swusd'].includes(currentPool) && staked_balance > 0\"}],attrs:{\"id\":\"unstake-snx\"},on:{\"click\":function($event){return _vm.handle_remove_liquidity(true, true)}}},[_vm._v(\" Unstake \")]),_c('router-link',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2'].includes(_vm.currentPool) && _vm.oldBalance > 0),expression:\"['susdv2'].includes(currentPool) && oldBalance > 0\"}],staticClass:\"button\",attrs:{\"to\":\"/susd/withdraw\",\"id\":\"withdrawold\"}},[_vm._v(\"Withdraw old\")]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool == 'usdt'),expression:\"currentPool == 'usdt'\"}],on:{\"click\":_vm.migrateUSDT}},[_vm._v(\"Migrate to PAX\")]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool == 'susd'),expression:\"currentPool == 'susd'\"}],staticClass:\"simplebutton\",attrs:{\"id\":\"remove-liquidity\"},on:{\"click\":_vm.handle_remove_liquidity}},[_vm._v(\"Withdraw old\")]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(['ren', 'sbtc'].includes(_vm.currentPool)),expression:\"['ren', 'sbtc'].includes(currentPool)\"}]},[_c('a',{attrs:{\"href\":\"https://bridge.renproject.io/\"}},[_vm._v(\" Mint/redeem renBTC \")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2', 'sbtc'].includes(_vm.currentPool)),expression:\"['susdv2', 'sbtc'].includes(currentPool)\"}],attrs:{\"id\":\"mintr\"}},[_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2', 'sbtc'].includes(_vm.currentPool)),expression:\"['susdv2', 'sbtc'].includes(currentPool)\"}],attrs:{\"href\":\"https://mintr.synthetix.io/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Manage staking in Mintr\")]),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(['y', 'swusd'].includes(_vm.currentPool)),expression:\"['y', 'swusd'].includes(currentPool)\"}],attrs:{\"href\":\"https://ygov.finance/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\" yGov. \")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_loading),expression:\"show_loading\"}],staticClass:\"info-message gentle-message\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.waitingMessage)}}),_vm._v(\" \"),_c('span',{staticClass:\"loading line\"})]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.estimateGas),expression:\"estimateGas\"}],staticClass:\"info-message gentle-message\"},[_vm._v(\" Estimated tx cost: \"+_vm._s((_vm.estimateGas * _vm.gasPrice / 1e9 * _vm.ethPrice).toFixed(2))+\"$ \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.warninglow),expression:\"warninglow\"}],staticClass:\"simple-error\"},[_vm._v(\" You're withdrawing too little amount in one coin \")]),_c('Slippage',_vm._b({},'Slippage',{show_nobalance: _vm.show_nobalance, show_nobalance_i: _vm.show_nobalance_i},false))],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'swusd'].includes(_vm.currentPool)),expression:\"staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'swusd'].includes(currentPool)\"}]},[_c('button',{staticClass:\"simplebutton advancedoptions\",on:{\"click\":function($event){_vm.showadvancedoptions = !_vm.showadvancedoptions}}},[_vm._v(\" Advanced unstaking options \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.showadvancedoptions),expression:\"!showadvancedoptions\"}]},[_vm._v(\"▼\")]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showadvancedoptions),expression:\"showadvancedoptions\"}]},[_vm._v(\"▲\")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showadvancedoptions),expression:\"showadvancedoptions\"}]},[_c('fieldset',[_c('legend',[_vm._v(\"Advanced unstaking options:\")]),_c('div',[_c('div',{attrs:{\"id\":\"stakedbalance\"}},[_vm._v(\" Staked tokens: \"),_c('span',{on:{\"click\":function($event){_vm.unstakepercentage = _vm.staked_balance / 1e18}}},[_vm._v(_vm._s((_vm.staked_balance / 1e18).toFixed(2)))])]),_c('div',[_c('label',{attrs:{\"for\":\"unstakepercentage\"}},[_vm._v(\"Unstake:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.unstakepercentage),expression:\"unstakepercentage\"}],class:{'invalid': _vm.unstakePercentageInvalid},attrs:{\"id\":\"unstakepercentage\"},domProps:{\"value\":(_vm.unstakepercentage)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.unstakepercentage=$event.target.value}}}),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'swusd'].includes(_vm.currentPool)),expression:\"staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'swusd'].includes(currentPool)\"}],attrs:{\"id\":\"unstakestaked\",\"disabled\":_vm.unstakePercentageInvalid},on:{\"click\":function($event){return _vm.unstakeStaked()}}},[_vm._v(\" Unstake staked \")])])])])])])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('legend',[_vm._v(\" Withdraw % in: \"),_c('span',{staticClass:\"tooltip\"},[_vm._v(\" [?] \"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\" You can also withdraw in one coin by typing in a currency field \")])])])}]\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"add-liquidity\">\n        <fieldset class=\"percentage\">\n            <legend>\n            \tShare of liquidity (%)\n        \t\t<!-- <input id='showstaked' type='checkbox' name='showstaked' v-model = 'showstaked'> -->\n        \t\t<!-- <label for='showstaked' v-show=\"['susdv2', 'sbtc', 'y', 'swusd'].includes(currentPool)\"> Show staked </label> -->\n            </legend>\n            <ul>\n                <li>\n                    <input type=\"text\"\n                    id=\"liquidity-share\"\n                    name=\"liquidity-share\"\n                    v-model='share'\n                    @input='handle_change_share'\n                    @focus='handle_change_share'\n                    :style='shareStyles'>\n                </li>\n            </ul>\n        </fieldset>\n        <fieldset class=\"currencies\">\n            <legend>Currencies:</legend>\n            <ul>\n                <li v-for='(currency, i) in Object.keys(currencies)'>\n                    <label :for=\"'currency_'+i\" class='currency_label'>\n                        <img\n                            :class=\"{'token-icon': true, [currency+'-icon']: true, 'y': withdrawc, [currentPool]: true}\"\n                            :src='getTokenIcon(currency)'>\n                        <span v-show='withdrawc'>{{currencies[currency]}}\n\t                    \t<span v-show=\"!(currency == 'usdt' && currentPool == 'usdt') && !['susdv2', 'ren', 'sbtc'].includes(currentPool)\">(in {{currency | capitalize}})</span>\n                    \t</span>\n                    \t<span v-show=\"!withdrawc && !['susdv2', 'tbtc', 'ren', 'sbtc'].includes(currentPool)\">{{currency | capitalize}}</span>\n                        <span v-show=\"!withdrawc && ['susdv2', 'tbtc', 'ren', 'sbtc'].includes(currentPool)\">{{currencies[currency]}}</span>\n                    </label>\n                    <input type=\"text\"\n                    :id=\"'currency_'+i\"\n                    name=\"from_cur\"\n                    v-model = 'inputs[i]'\n                    :style = \"inputStyles[i]\"\n                    :disabled = \"currentPool == 'susd'\"\n                    :ref=\"`inputs${i}`\"\n                    @input='handle_change_amounts(i)'\n                    @focus='handle_change_amounts(i)'>\n                </li>\n            </ul>\n        </fieldset>\n        <fieldset v-show = \"currentPool != 'susd'\">\n        \t<legend>\n                Withdraw % in:\n                <span class='tooltip'> [?]\n                    <span class='tooltiptext long'>\n                        You can also withdraw in one coin by typing in a currency field\n                    </span>\n                </span>\n            </legend>\n        \t<ul>\n        \t\t<li v-show = \"!['susdv2','tbtc','ren', 'sbtc'].includes(currentPool)\">\n        \t\t\t<input type='radio' id='to_cur_comb' name=\"to_cur\" :value='10' :checked='to_currency === 10' @click='handleCheck(10)'>\n        \t\t\t<label for='to_cur_comb'>\n                        Combination of all coins\n                        <span v-for='(currency, i) in Object.keys(currencies)'>\n                            <span v-show='i > 0'>+</span>\n                            <img\n                            :class=\"{'token-icon': true, [currency+'-icon']: true, 'y': withdrawc, [currentPool]: true}\"\n                            :src='getTokenIcon(currency)'>\n                        </span>\n                    </label>\n        \t\t</li>\n\t\t\t\t<li v-for='(currency, i) in Object.keys(currencies)' class='withdrawin'>\n\t                <input type=\"radio\" :id=\"'to_cur_'+i\" name=\"to_cur\" :value='i' :checked='to_currency === i' @click='handleCheck(i)'>\n\t                <label :for=\"'to_cur_'+i\">\n                        <img\n                            :class=\"{'token-icon': true, [currency+'-icon']: true, 'y': withdrawc, [currentPool]: true}\"\n                            :src='getTokenIcon(currency)'>\n                            <span v-show='!withdrawc'> {{ currency | capitalize }} </span>\n                            <span v-show='withdrawc'> {{ currencies[currency] }} </span>\n                    </label>\n\t            </li>\n        \t</ul>\n        </fieldset>\n        <div id='max_slippage' v-show='showWithdrawSlippage'><span>Max slippage:</span>\n            <input id=\"slippage02\" type=\"radio\" name=\"slippage\" value='0.2' v-model='maxSlippage'>\n            <label for=\"slippage02\">0.2%</label>\n\n            <input id=\"slippage1\" type=\"radio\" name=\"slippage\" checked value='3' v-model='maxSlippage'>\n            <label for=\"slippage1\">3%</label>\n\n            <input id=\"custom_slippage\" type=\"radio\" name=\"slippage\" value='-' @click='customippageDisabled = false'>\n            <label for=\"custom_slippage\" @click='customSlippageDisabled = false'>\n                <input type=\"text\" id=\"custom_slippage_input\" :disabled='customSlippageDisabled' name=\"custom_slippage_input\" v-model='maxInputSlippage'> %\n            </label>\n        </div>\n\n        <gas-price></gas-price>\n\n        <p v-show='showInfApprovalZap' class=\"do-center\">\n            <input id='inf_approval' type='checkbox' v-model='inf_approval'>\n            <label for='inf_approval'>Infinite approval - trust zap contract forever</label>\n        </p>\n\n        <div id='withdraw_buttons' class='buttons'>\n            <div class='info-message gentle-message' id='amount-warning' v-show = 'nobalance'>\n\t        \tYou don't have any available amount to withdraw\n\t        \t<!-- <div v-show=\"currentPool == 'susdv2'\">\n\t        \t\t(You have {{(staked_balance / 1e18) | toFixed2}} staked)\n\t        \t</div> -->\n\t      \t</div>\n            <button class=\"simplebutton\" id=\"remove-liquidity\"\n                :disabled=\"['susdv2', 'sbtc'].includes(currentPool) && slippage < -0.03 && !warninglow || show_nobalance == true\"\n                @click='handle_remove_liquidity()' v-show=\"currentPool != 'susd'\">\n                Withdraw <span class='loading line' v-show='loadingAction == 1'></span>\n            </button>\n            <button\n                id='remove-liquidity-unstake'\n                v-show = \"['susdv2', 'sbtc','y','swusd'].includes(currentPool) && staked_balance > 0 \"\n                :disabled = 'slippage < -0.03'\n                @click='handle_remove_liquidity(true, false, true)'>\n                Withdraw & claim <span class='loading line' v-show='loadingAction == 2'></span>\n            </button>\n            <button id='claim-snx'\n                @click='claim_SNX(false)'\n                v-show=\"['susdv2', 'sbtc','y','swusd'].includes(currentPool) && pendingSNXRewards > 0\"\n            >\n                Claim {{(pendingSNXRewards / 1e18).toFixed(2)}} {{ ['y','swusd'].includes(currentPool) ? 'YFI' : 'SNX' }}\n                <span v-show=\"currentPool == 'sbtc'\"> + {{(pendingRENRewards / 1e18).toFixed(2)}} REN</span>\n            </button>\n            <button id='claim-bpt'\n                @click='claim_SNX(true)'\n                v-show=\"['sbtc'].includes(currentPool) && pendingBALRewards > 0\"\n            >\n                Claim {{(pendingBALRewards / 1e18).toFixed(6)}} BPT\n            </button>\n            <button id='claim-snxbpt'\n                @click='claim_SNX(true, false)'\n                v-show=\"['sbtc'].includes(currentPool) && withdrawBALPool > 0\"\n            >\n                Withdraw {{(withdrawSNXPool / 1e18).toFixed(0)}} SNX + {{(withdrawRENPool / 1e18).toFixed(0)}} REN\n            </button>\n            <button id='unstake-snx'\n                @click='handle_remove_liquidity(true, true)'\n                v-show=\"['susdv2', 'sbtc','y','swusd'].includes(currentPool) && staked_balance > 0\"\n            >\n                Unstake\n            </button>\n            <router-link v-show=\"['susdv2'].includes(currentPool) && oldBalance > 0\" class='button' to='/susd/withdraw' id='withdrawold'>Withdraw old</router-link>\n            <button @click='migrateUSDT' v-show=\"currentPool == 'usdt'\">Migrate to PAX</button>\n            <button class=\"simplebutton\" id=\"remove-liquidity\" @click='handle_remove_liquidity' v-show=\"currentPool == 'susd'\">Withdraw old</button>\n            <p v-show=\"['ren', 'sbtc'].includes(currentPool)\">\n                <a href='https://bridge.renproject.io/'> Mint/redeem renBTC </a>\n            </p>\n            <div id='mintr' v-show=\"['susdv2', 'sbtc'].includes(currentPool)\">\n                <a href = 'https://mintr.synthetix.io/' v-show=\"['susdv2', 'sbtc'].includes(currentPool)\" target='_blank' rel=\"noopener noreferrer\">Manage staking in Mintr</a>\n                <a href = 'https://ygov.finance/' v-show=\"['y', 'swusd'].includes(currentPool)\" target='_blank' rel=\"noopener noreferrer\"> yGov. </a>\n            </div>\n            <div class='info-message gentle-message' v-show='show_loading'>\n                <span v-html='waitingMessage'></span> <span class='loading line'></span>\n            </div>\n            <div class='info-message gentle-message' v-show='estimateGas'>\n                Estimated tx cost: {{ (estimateGas * gasPrice / 1e9 * ethPrice).toFixed(2) }}$\n            </div>\n            <div class='simple-error' v-show='warninglow'>\n                You're withdrawing too little amount in one coin\n            </div>\n            <Slippage v-bind=\"{show_nobalance, show_nobalance_i}\"/>\n        </div>\n\n        <div v-show=\"staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'swusd'].includes(currentPool)\">\n            <button class='simplebutton advancedoptions' @click='showadvancedoptions = !showadvancedoptions'>\n                Advanced unstaking options\n                <span v-show='!showadvancedoptions'>▼</span>\n                <span v-show='showadvancedoptions'>▲</span>\n            </button>\n            <div v-show='showadvancedoptions'>\n                <fieldset>\n                    <legend>Advanced unstaking options:</legend>\n                    <div>\n                        <div id='stakedbalance'>\n                            Staked tokens: <span @click='unstakepercentage = staked_balance / 1e18'>{{ (staked_balance / 1e18).toFixed(2) }}</span>\n                        </div>\n                        <div>\n                            <label for='unstakepercentage'>Unstake:</label>\n                            <input id='unstakepercentage' v-model='unstakepercentage' :class=\"{'invalid': unstakePercentageInvalid}\">\n                            <button id='unstakestaked'\n                                v-show=\"staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'swusd'].includes(currentPool)\"\n                                :disabled='unstakePercentageInvalid'\n                                @click='unstakeStaked()'\n                            >\n                                Unstake staked\n                            </button>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\n\timport Vue from 'vue'\n    import { notifyHandler, notifyNotification } from '../../init'\n    import * as common from '../../utils/common.js'\n    import { getters, contract as currentContract, gas as contractGas, init } from '../../contract'\n    import allabis, { balancer_ABI, balancer_address} from '../../allabis'\n    const compound = allabis.compound\n    import * as helpers from '../../utils/helpers'\n\n    import * as gasPriceStore from '../common/gasPriceStore'\n    import GasPrice from '../common/GasPrice.vue'\n\n    import * as errorStore from '../common/errorStore'\n\n    import BN from 'bignumber.js'\n\n    import Slippage from '../common/Slippage.vue'\n\n    export default {\n    \tcomponents: {\n    \t\tSlippage, GasPrice,\n    \t},\n    \tdata: () => ({\n    \t\tshare: '100.00',\n    \t\tshareStyles: {\n    \t\t\tbackgroundColor: '#707070',\n    \t\t\tcolor: '#d0d0d0',\n    \t\t},\n    \t\tinputs: [],\n    \t\tinputStyles: [],\n    \t\twallet_balances: [],\n    \t\tcalc_balances: [],\n    \t\tbalances: [],\n    \t\tstaked_balance: null,\n    \t\ttoken_balance: null,\n    \t\ttoken_supply: 0,\n    \t\tshow_nobalance: false,\n    \t\tshow_nobalance_i: 0,\n    \t\tbgColor: [],\n    \t\tamounts: [],\n    \t\tto_currency: 10,\n    \t\ttest: null,\n    \t\twithdrawc: false,\n    \t\tdonate_dust: false,\n    \t\tshowstaked: false,\n            pendingSNXRewards: 0,\n            pendingRENRewards: 0,\n            pendingBALRewards: 0,\n            balancerPool: null,\n            withdrawBALPool: 0,\n            withdrawSNXPool: 0,\n            withdrawRENPool: 0,\n            withdrawADAI: 0,\n            show_loading: false,\n            waitingMessage: '',\n            showWithdrawSlippage: false,\n            maxSlippage: 0.2,\n            setSlippage: false,\n            maxInputSlippage: '',\n            customSlippageDisabled: true,\n            estimateGas: 0,\n            ethPrice: 0,\n            unstakepercentage: 0,\n            get showadvancedoptions() {\n                return localStorage.getItem('advancedoptions') === 'true'\n            },\n            set showadvancedoptions(val) {\n                localStorage.setItem('advancedoptions', val)\n            },\n            loadingAction: false,\n            warninglow: false,\n            showModal: false,\n    \t\tslippagePromise: helpers.makeCancelable(Promise.resolve()),\n            inf_approval: true,\n    \t}),\n        async created() {\n\n            this.$watch(()=>currentContract.default_account, (val, oldval) => {\n                if(!val || !oldval) return;\n                if(val.toLowerCase() == oldval.toLowerCase()) return;\n                if(val) this.mounted();\n            })\n            this.$watch(()=>currentContract.initializedContracts, val => {\n                if(val) this.mounted();\n            })\n            this.$watch(()=>currentContract.currentContract, (val, oldval) => {\n                this.setInputStyles(false, val, oldval)\n                if(currentContract.initializedContracts) this.mounted();\n            })\n\n        },\n        watch: {\n        \tto_currency(val) {\n        \t\tif(this.share == 0 || this.share == '---') this.share = 100\n\t        \tthis.setInputStyles()\n\t        \tif(val !== null) this.handle_change_share();\n        \t},\n        \twithdrawc(val) {\n        \t\tif(this.share == '---' ) return;\n        \t\tif(!val && this.to_currency === null) this.to_currency = 10\n        \t\tif(val && this.to_currency !== null) this.to_currency = null\n        \t},\n            maxSlippage() {\n                this.setSlippage = true\n            },\n            maxInputSlippage(val) {\n                if(val) this.setSlippage = true\n            },\n        },\n        computed: {\n\t\t\t...getters,\n        \tshowMigrateNew() {\n        \t\treturn (this.currentPool == 'compound' && this.oldBalance > 0) || this.currentPool == 'susd'\n         \t},\n         \tnobalance() {\n         \t\treturn this.staked_balance && this.token_balance.plus(this.staked_balance).eq(BN(0))\n         \t},\n            getMaxSlippage() {\n                let maxSlippage = +this.maxSlippage;\n                if(this.maxInputSlippage) maxSlippage = +this.maxInputSlippage;\n                return (100 + maxSlippage)/100\n            },\n            minAmount() {\n            if(['tbtc', 'ren', 'sbtc'].includes(currentContract.currentContract)) return 1e-8\n                return 0.01\n            },\n            calcFee() {\n                let N_COINS = allabis[currentContract.currentContract].N_COINS\n                return this.fee / 100 * N_COINS / (4 * (N_COINS -1))\n            },\n            gasPrice() {\n                return gasPriceStore.state.gasPrice\n            },\n            gasPriceWei() {\n                return gasPriceStore.state.gasPriceWei\n            },\n            unstakePercentageInvalid() {\n                return BN(this.unstakepercentage).times(1e18).gt(BN(this.staked_balance).times(1.01))\n            },\n            unstakeAmount() {\n                return this.toFixed(BN(this.unstakepercentage / 100).times(this.staked_balance / 1e18))\n            },\n            showInfApprovalZap() {\n                if(!this.withdrawc && this.currentPool != 'susdv2')\n                    return true\n                if(this.share != '---' && ((this.to_currency !== null && this.to_currency < 10) || this.to_currency == 10)) {\n                    return true\n                }\n            },\n        },\n        mounted() {\n        \tif(['susdv2', 'sbtc', 'y', 'swusd'].includes(this.currentPool)) {\n        \t\tthis.showstaked = false\n        \t}\n        \tthis.$watch(() => this.showstaked, this.handle_change_share)\n        \tif(currentContract.currentContract == 'susd') this.withdrawc = true;\n        \tthis.setInputStyles(true)\n            if(currentContract.initializedContracts) this.mounted();\n        },\n        methods: {\n            async mounted() {\n                try {\n                    if(['susdv2', 'tbtc', 'ren', 'sbtc'].includes(this.currentPool)) {\n            \t\tthis.withdrawc = true;\n            \t\tthis.to_currency = null\n            \t}\n                else\n                    this.withdrawc = false\n            \tcurrentContract.showSlippage = false;\n        \t\tcurrentContract.slippage = 0;\n                let curveRewards = currentContract.curveRewards\n                let allowance = BN(await currentContract.swap_token.methods.allowance(currentContract.default_account || '0x0000000000000000000000000000000000000000', currentContract.deposit_zap._address).call())\n                if(allowance.lte(currentContract.max_allowance.div(BN(2))))\n                    this.inf_approval = false\n                if(['susdv2'].includes(this.currentPool)) {\n                    this.pendingSNXRewards = await curveRewards.methods.earned(this.default_account).call()\n                    console.log(this.pendingSNXRewards, \"PENDING SNX REWARDS\")\n                }\n                if(['sbtc'].includes(this.currentPool)) {\n                    this.balancerPool = new currentContract.web3.eth.Contract(balancer_ABI, balancer_address)\n                    window.balancerPool = this.balancerPool\n                    let calls = [\n                        [curveRewards._address, curveRewards.methods.earned(this.default_account).encodeABI()],\n                        [this.balancerPool._address, this.balancerPool.methods.totalSupply().encodeABI()],\n                        [this.balancerPool._address, this.balancerPool.methods.getBalance('0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f').encodeABI()],\n                        [this.balancerPool._address, this.balancerPool.methods.getBalance('0x408e41876cccdc0f92210600ef50372656052a38').encodeABI()],\n                        [this.balancerPool._address, this.balancerPool.methods.balanceOf(currentContract.default_account).encodeABI()],\n                    ]\n                    let aggcalls = await common.clean_and_multi_call(calls);\n                    let decoded = aggcalls[1].map(hex => currentContract.web3.eth.abi.decodeParameter('uint256', hex))\n\n                    this.pendingBALRewards = decoded[0]\n                    this.pendingSNXRewards = decoded[0] * decoded[2] / decoded[1]\n                    this.pendingRENRewards = decoded[0] * decoded[3] / decoded[1]\n\n                    this.withdrawBALPool = decoded[4]\n                    this.withdrawSNXPool = decoded[4] * decoded[2] / decoded[1]\n                    this.withdrawRENPool = decoded[4] * decoded[3] / decoded[1]\n\n                }\n                if(['y','swusd'].includes(this.currentPool)) {\n                    // this.withdrawADAI = await currentContract.aRewards.methods.claimable(currentContract.default_account).call()\n                }\n                await common.update_fee_info();\n                await this.update_balances();\n                this.setCalcBalances()\n            \tthis.handle_change_share();\n                } catch (e) {\n                    console.log('withdraw vue mounted error', e);\n                    throw e;\n                }\n            },\n            getTokenIcon(token) {\n                return helpers.getTokenIcon(token, this.withdrawc, this.currentPool)\n            },\n            toFixed(num, precisions = 2, round = 4) {\n                if(num == '' || num == undefined || +num == 0) return '0.00'\n                if(precisions == 2 && ['tbtc', 'ren', 'sbtc'].includes(currentContract.currentContract)) precisions = 8\n                let rounded = num.toFixed(precisions)\n                return isNaN(rounded) ? '0.00' : rounded\n            },\n            inputsFormat(i) {\n        \t\tif(this.inputs[i]) {\n        \t\t\treturn this.toFixed(+this.inputs[i])\n        \t\t}\n        \t\treturn '0.00'\n        \t},\n            setInputStyles(newInputs = false, newContract, oldContract) {\n\t        \tif(oldContract) {\n                    for(let i = 0; i < allabis[newContract].N_COINS - allabis[oldContract].N_COINS; i++) {\n                        this.inputs.push('0.00')\n                    }\n                    if(allabis[oldContract].N_COINS - allabis[newContract].N_COINS > 0) {\n                        this.inputs = this.inputs.filter((_, i) => i < allabis[newContract].N_COINS)\n                    }\n                }\n                else if(newInputs) {\n                    this.inputs = new Array(Object.keys(this.currencies).length).fill('0.00')\n                }\n\t        \tthis.inputStyles = Array(Object.keys(this.currencies).length).fill({\n\t        \t\tbackgroundColor: '#707070',\n\t        \t\tcolor: '#d0d0d0',\n\t        \t})\n            },\n            async calcSlippage(...args) {\n            \tthis.slippagePromise.cancel();\n        \t\tthis.slippagePromise = helpers.makeCancelable(common.calc_slippage(...args))\n        \t\tawait this.slippagePromise;\n            },\n            handleCheck(val) {\n            \tif(val === this.to_currency) {\n            \t\tif(this.withdrawc == false) this.withdrawc = true\n            \t\tthis.to_currency = null\n\n            \t\tcurrentContract.slippage = 0\n            \t\tcurrentContract.showSlippage = false\n            \t}\n            \telse {\n            \t\tthis.withdrawc = false\n            \t\tthis.to_currency = val\n            \t}\n            },\n            setCalcBalances() {\n                for (let i = 0; i < currentContract.N_COINS; i++) {\n                    let token_balance = this.showstaked ? this.token_balance.plus(this.staked_balance) : this.token_balance\n                    let value = BN(100 / 100 * this.balances[i] * currentContract.c_rates[i] * token_balance / this.token_supply)\n                    Vue.set(this.calc_balances, i, value)\n                }\n            },\n            async update_balances() {\n            \tlet calls = []\n\t\t\t    if (currentContract.default_account) {\n\t\t\t        for (let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t        \tcalls.push([currentContract.underlying_coins[i]._address ,currentContract.underlying_coins[i].methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t\t        }\n\t\t\t        calls.push([currentContract.swap_token._address ,currentContract.swap_token.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        this.token_balance = BN(0);\n\t\t\t    }\n\t\t\t    for (let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t    \tcalls.push([currentContract.swap._address ,currentContract.swap.methods.balances(i).encodeABI()])\n\t\t\t    }\n\t\t    \tif(['susdv2', 'sbtc','y'].includes(this.currentPool)) calls.push([currentContract.curveRewards._address, currentContract.curveRewards.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t\t\tcalls.push([currentContract.swap_token._address ,currentContract.swap_token.methods.totalSupply().encodeABI()])\n\t\t\t\tlet aggcalls = await common.clean_and_multi_call(calls);\n\t\t\t\tlet decoded = aggcalls[1].map(hex => currentContract.web3.eth.abi.decodeParameter('uint256', hex))\n\t\t\t\tif(currentContract.default_account) {\n\t\t\t\t\tdecoded.slice(0, currentContract.N_COINS).map((v, i) => {\n\t\t\t\t\t\tVue.set(this.wallet_balances, i, +v / allabis[this.currentPool].coin_precisions[i])\n\t\t\t\t\t})\n\t\t\t\t\tthis.token_balance = BN(decoded[currentContract.N_COINS])\n\t\t\t\t\tdecoded = decoded.slice(currentContract.N_COINS+1)\n\t\t\t\t}\n\t\t\t\tdecoded.slice(0, currentContract.N_COINS+1 + currentContract.N_COINS).map((v, i) => {\n\t\t\t\t\tVue.set(this.balances, i, +v)\n\t\t\t        if(!currentContract.default_account) Vue.set(this.balances, i, 0)\n\t\t\t\t})\n                console.log(decoded[decoded.length-2])\n                if(['susdv2', 'sbtc','y'].includes(this.currentPool)) this.staked_balance = BN(decoded[decoded.length-2])\n                else this.staked_balance = BN(0)\n                this.unstakepercentage = this.toFixed(this.staked_balance.div(1e18))\n\t\t\t\tthis.token_supply = +decoded[decoded.length-1]\n\t\t\t},\n\t\t\tasync handle_change_amounts(i, event) {\n                this.showWithdrawSlippage = true;\n                this.show_nobalance = false\n\t\t\t\tif(event) {\n\t\t\t\t\tthis.inputs[i] = event.target.value\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(this.currentPool == 'susd') return;\n\t\t\t\tthis.to_currency = null\n\t\t        var values = this.inputs.map((x,i) => x / currentContract.c_rates[i])\n\t\t        values = values.map(v=>BN(Math.floor(v).toString()).toFixed(0))\n\t\t        this.show_nobalance = false;\n\t\t        this.show_nobalance_i = 0;\n\t\t        let calls = [...Array(currentContract.N_COINS).keys()].map(i=>[currentContract.swap._address, currentContract.swap.methods.balances(i).encodeABI()])\n\t\t        calls.push([currentContract.swap._address ,currentContract.swap.methods.calc_token_amount(values, false).encodeABI()])\n\t\t        calls.push([currentContract.swap_token._address, currentContract.swap_token.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t        try {\n                    let aggcalls = await common.clean_and_multi_call(calls);\n                    let decoded = aggcalls[1].map(hex => currentContract.web3.eth.abi.decodeParameter('uint256', hex))\n                    decoded.slice(0, currentContract.N_COINS).forEach((v, i) => {\n                        let coin_balance = +v * currentContract.c_rates[i]\n                        if(coin_balance < this.inputs[i]) {\n                            this.show_nobalance |= true;\n                            this.show_nobalance_i = i;\n                        }\n                        else\n                            this.show_nobalance |= false;\n                    })\n\t\t            var availableAmount = BN(decoded[decoded.length-2])\n\t\t            availableAmount = availableAmount.div(BN(1 - currentContract.fee * currentContract.N_COINS / (4 * (currentContract.N_COINS - 1))))\n\t\t            var maxAvailableAmount = BN(decoded[decoded.length-1]);\n\t\t            if(availableAmount.gt(maxAvailableAmount.plus(BN(this.staked_balance)))) {\n\t\t                this.setAllInputBackground('red')\n\t\t            }\n\t\t            else {\n\t\t                this.setAllInputBackground('blue')\n\t\t            }\n\t\t            this.calcSlippage(this.inputs, false);\n\n\t\t            this.share = '---';\n\t\t            this.shareStyles = {\n\t\t            \tbackgroundColor: '#707070',\n\t\t            \tcolor: '#d0d0d0'\n\t\t            }\n\t\t        }\n\t\t        catch(err) {\n\t\t            console.error(err)\n                    this.show_nobalance = true;\n                    this.show_nobalance_i = currentContract.bal_info.findIndex((balance, i) => {\n                        return +this.inputs[i] > +balance\n                    });\n\t\t            this.setAllInputBackground('red')\n\t\t        }\n\t\t\t},\n\t\t\tasync getMinAmounts() {\n\t\t\t\t//use update rates instead\n\t\t\t\tawait common.update_fee_info();\n\t\t\t\tlet min_amounts = []\n\t\t\t\tfor(let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t    \tmin_amounts[i] = BN(0.98).times(this.share/100).times(BN(this.balances[i]))\n\t\t\t\t\tif(!this.withdrawc) {\n\t\t\t\t\t\tmin_amounts[i] = min_amounts[i]\n\t\t\t\t\t\t\t\t\t\t.times(allabis[currentContract.currentContract].coin_precisions[i])\n\t\t\t\t\t\t\t\t\t\t.times(currentContract.c_rates[i])\n\t\t\t\t\t}\n\t\t\t\t\tmin_amounts[i] = min_amounts[i].times(BN(this.token_balance))\n\t\t\t\t\t\t            .div(BN(this.token_supply))\n\t\t\t\t\t\t            .toFixed(0,1)\n\t\t\t\t}\n\t\t\t\treturn min_amounts;\n\t\t\t},\n            async claim_SNX(claim_bpt_only = false, unstake = true) {\n                this.show_loading = true\n                this.waitingMessage = `Please confirm claiming ${(this.pendingSNXRewards / 1e18).toFixed(2)}\n                    ${['y', 'swusd'].includes(this.currentPool) ? 'YFI' : 'SNX'}`\n                if(this.currentPool == 'sbtc')\n                    this.waitingMessage += ` and ${(this.pendingRENRewards / 1e18).toFixed(2)} REN`\n\n                var { dismiss } = notifyNotification(this.waitingMessage)\n                let promises = await Promise.all([helpers.getETHPrice()])\n                this.ethPrice = promises[0]\n                this.estimateGas = 200000\n\n                let earned = await currentContract.curveRewards.methods.earned(currentContract.default_account).call()\n\n                if(earned > 0 && unstake) {\n                    await new Promise((resolve, reject) => {\n                        currentContract.curveRewards.methods.getReward()\n                            .send({\n                                from: currentContract.default_account,\n                                gasPrice: this.gasPriceWei,\n                                gas: 400000,\n                            })\n                            .once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                            })\n                            .on('receipt', () => {\n                                this.pendingSNXRewards = 0\n                                resolve()\n                            })\n                            .catch(err => {\n                                errorStore.handleError(err)\n                                dismiss()\n                                reject(err)\n                            })\n                    })\n                }\n\n                if(this.currentPool == 'sbtc' && (!claim_bpt_only || !unstake)) {\n                    this.estimateGas = 300000\n\n                    try {\n                        let balancerBalance = BN(await this.balancerPool.methods.balanceOf(currentContract.default_account).call())\n                        await this.balancerPool.methods.exitPool(balancerBalance.toFixed(0,1), ['0', '0'])\n                        .send({\n                            from: currentContract.default_account,\n                            gasPrice: this.gasPriceWei,\n                            gas: 600000,\n                        })\n                        .once('transactionHash', hash => {\n                            dismiss()\n                            notifyHandler(hash)\n                        })\n                    }\n                    catch(err) {\n                        console.log(err)\n                        dismiss()\n                        errorStore.handleError(err)\n                    }\n                }\n\n                this.show_loading = false\n\n            },\n            // async claimYFIaDAI() {\n            //     this.estimateGas = 50000\n\n            //     var { dismiss } = notifyNotification('Please confirm approval to burn YFI for aDAI')\n\n            //     try {\n\n            //         let balance = BN(await currentContract.aRewards.methods.claimable(currentContract.default_account).call())\n            //         let yFI = new currentContract.web3.eth.Contract(ERC20_abi, '0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e')\n            //         await common.approveAmount(yFI, balance, currentContract.default_account, currentContract.aRewards._address)\n            //         dismiss()\n\n            //         var { dismiss1 } = notifyNotification('Please confirm burning YFI to aDAI transaction')\n\n            //         await currentContract.aRewards.methods.claim(balance.toFixed(0,1))\n            //         .send({\n            //             from: currentContract.default_account,\n            //             gasPrice: this.gasPriceWei,\n            //             gas: 125000,\n            //         })\n            //         .once('transactionHash', hash => {\n            //             dismiss1()\n            //             notifyHandler(hash)\n            //         })\n            //         .on('error', err => {\n            //             dismiss1()\n            //             throw err\n            //         })\n            //     }\n            //     catch(err) {\n            //         console.log(err)\n            //         dismiss()\n            //         errorStore.handleError(err)\n            //     }\n            // },\n            async unstakeStaked() {\n                let amount = BN(this.unstakepercentage).times(1e18)\n                this.unstake(amount, false, true)\n            },\n\t\t\tasync unstake(amount, exit = false, unstake_only = false) {\n                if(unstake_only)\n                    this.waitingMessage = `\n                        Please confirm unstaking ${this.toFixed(amount.div(BN(1e18)))} tokens\n                    `\n                else\n                    this.waitingMessage = `\n                    Unstaking ${this.toFixed(amount.div(BN(1e18)))} tokens for withdrawal.\n                    <br>\n                    A bit more tokens are needed to unstake to ensure that withdrawal is successful.\n                    You'll see them in your unstaked balance afterwards.\n\n                `;\n\n                var { dismiss } = notifyNotification(this.waitingMessage)\n\n                let stakedAmount = BN(await currentContract.curveRewards.methods.balanceOf(currentContract.default_account).call())\n\n                if(stakedAmount.lt(amount))\n                    amount = stakedAmount\n\n                try {\n    \t\t\t\tawait new Promise((resolve, reject) => {\n    \t\t\t\t\tcurrentContract.curveRewards.methods.withdraw(amount.toFixed(0,1))\n    \t\t\t\t\t\t.send({\n    \t\t\t\t\t\t\tfrom: currentContract.default_account,\n    \t\t\t\t\t\t\tgasPrice: this.gasPriceWei,\n                                gas: 125000,\n    \t\t\t\t\t\t})\n    \t\t\t\t\t\t.once('transactionHash', hash => {\n                                this.waitingMessage = 'Waiting for unstake transaction to confirm'\n                                dismiss()\n                                notifyHandler(hash)\n                                resolve()\n                            })\n                            .on('receipt', receipt => {\n                                this.staked_balance = this.staked_balance.minus(amount)\n                                currentContract.curveStakedBalance -= amount\n                                common.update_fee_info()\n                            })\n                            .catch(err => {\n                                dismiss()\n                                reject(err)\n                            })\n    \t\t\t\t})\n                    if(exit) {\n        \t\t\t\tthis.claim_SNX()\n                        //if(['y', 'swusd'].includes(this.currentPool))\n                            //this.showModal = true\n                    }\n                }\n                catch(err) {\n                    console.log(err)\n                    errorStore.handleError(err)\n                    this.waitingMessage = ''\n                    this.show_loading = false;\n                    throw err\n                }\n                this.waitingMessage = ''\n                this.show_loading = false\n\t\t\t},\n            setLoadingAction(val) {\n                this.loadingAction = val;\n                setTimeout(() => this.loadingAction = false, 500)\n            },\n\t\t\tasync handle_remove_liquidity(unstake = false, unstake_only = false, exit = false) {\n                await common.update_fee_info();\n                await this.update_balances();\n\n                let actionType = unstake == false ? 1 : 2\n                if(this.loadingAction == actionType) return;\n                this.setLoadingAction(actionType)\n                let promises = await Promise.all([helpers.getETHPrice()])\n                this.ethPrice = promises[0]\n                this.estimateGas = 0;\n                if(['susdv2', 'sbtc','y','earn'].includes(this.currentPool)) {\n                    if(unstake_only) {\n                        this.estimateGas = 125000\n                        if(this.currentPool == 'sbtc') this.estimateGas += 300000\n                    }\n                    else {\n                        let nonZeroInputs = this.inputs.filter(Number).length\n                        if(this.share == '---') {\n                            this.estimateGas = contractGas.withdraw[this.currentPool].imbalance(nonZeroInputs) | 0\n                        }\n                        else if(this.to_currency !== null && this.to_currency < 10) {\n                            this.estimateGas = contractGas.depositzap[this.currentPool].withdraw / 2\n                        }\n                        else {\n                            this.estimateGas = contractGas.depositzap[this.currentPool].withdrawShare / 2\n                        }\n                    }\n                }\n                this.show_loading = true;\n                let inOneCoin = currentContract.deposit_zap\n                if(['tbtc','ren', 'sbtc'].includes(currentContract.currentContract)) inOneCoin = currentContract.swap\n\n\t\t\t\tlet min_amounts = []\n\t\t\t    for (let i = 0; i < currentContract.N_COINS; i++) {\n                    if(!this.inputs[i]) {\n                        Vue.set(this.amounts, i, 0)\n                        continue\n                    }\n                    let maxDiff = BN(this.calc_balances[i]).minus(BN(this.inputs[i]))\n                    let useMax = this.calc_balances[i] > 0 && maxDiff.lte(BN(this.minAmount)) && maxDiff > 0\n                    if(useMax) {\n\t\t\t    \t\tVue.set(this.amounts, i, BN(this.calc_balances[i]).div(currentContract.c_rates[i]).toFixed(0,1))\n\t\t\t    \t}\n\t\t\t    \telse {\n\t\t\t        \tVue.set(this.amounts, i, BN(Math.floor(this.inputs[i] / currentContract.c_rates[i]).toString()).toFixed(0,1)); // -> c-tokens\n\t\t\t    \t}\n\t\t\t    }\n\t\t\t    var txhash;\n                this.amounts = this.amounts.map(amount => amount || 0)\n\t\t\t    if (this.share == '---') {\n\t\t\t    \tvar token_amount;\n\t\t\t        try {\n\t\t\t        \ttoken_amount = await currentContract.swap.methods.calc_token_amount(this.amounts, false).call();\n\t\t\t        }\n\t\t\t        catch(err) {\n\t\t\t        \tconsole.error(err)\n\t\t\t\t\t\tthis.show_nobalance = true;\n\t\t\t\t\t\tthis.show_nobalance_i = this.to_currency;\n\t\t\t        }\n                    token_amount = BN(token_amount).times(BN(1).plus(this.calcFee))\n\t\t\t        token_amount = BN(Math.floor(token_amount * this.getMaxSlippage).toString()).toFixed(0,1)\n                    if((this.token_balance.lt(BN(token_amount)) || unstake) && ['susdv2', 'sbtc','y','swusd'].includes(this.currentPool)) {\n                        let unstakeAmount = BN(token_amount).minus(BN(this.token_balance))\n                        if(unstake) unstakeAmount = BN(token_amount)\n                        await this.unstake(unstakeAmount, unstake && !unstake_only, unstake_only)\n                    }\n                    if(unstake_only) return;\n\t\t\t        let nonZeroInputs = this.inputs.filter(Number).length\n\t\t\t        if(this.withdrawc || ['susdv2', 'sbtc'].includes(this.currentPool)) {\n\t\t\t        \tlet gas = contractGas.withdraw[this.currentPool].imbalance(nonZeroInputs) | 0\n                        try {\n                            this.waitingMessage = 'Please confirm withdrawal transaction'\n                            var { dismiss } = notifyNotification(this.waitingMessage)\n\n                            try {\n                                this.estimateGas = await currentContract.swap.methods.remove_liquidity_imbalance(this.amounts, token_amount)\n                                                    .estimateGas({\n                                                        from: currentContract.default_account,\n                                                        gasPrice: this.gasPriceWei,\n                                                        gas: gas,\n                                                    })\n                            }\n                            catch(err) {\n                                this.estimateGas = gas / 2;\n                            }\n                            await helpers.setTimeoutPromise(100)\n    \t\t\t        \tawait currentContract.swap.methods.remove_liquidity_imbalance(this.amounts, token_amount).send({\n    \t\t\t\t        \tfrom: currentContract.default_account,\n                                gasPrice: this.gasPriceWei,\n                                gas: gas,\n    \t\t\t\t        }).once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                                this.waitingMessage = 'Waiting for withdrawal to confirm: no further action needed'\n                            })\n                        }\n                        catch(err) {\n                            console.error(err)\n                            dismiss()\n                            errorStore.handleError(err)\n                            this.waitingMessage = ''\n                            this.show_loading = false\n                            throw err;\n                        }\n\t\t\t    \t}\n\t\t\t        else {\n\t\t\t        \tlet inputs = this.inputs;\n                        inputs = inputs.map(v => v || 0)\n\t\t\t        \tlet amounts = this.inputs.map((v, i) => {\n                            if(!v) v = 0\n                            let maxDiff = BN(this.calc_balances[i]).minus(BN(v))\n                            return this.calc_balances[i] > 0 && maxDiff.lte(BN(this.minAmount)) && maxDiff > 0 ? this.calc_balances[i].times(currentContract.coin_precisions[i]).toFixed(0, 1) : BN(v).times(currentContract.coin_precisions[i]).toFixed(0, 1)\n                        })\n                        amounts = amounts.map(amount => amount || 0)\n                        let gas = contractGas.depositzap[this.currentPool].withdrawImbalance(nonZeroInputs) | 0\n                        this.waitingMessage = `Please approve ${this.toFixed(token_amount / 1e18)} Curve LP tokens for withdrawal`\n                        var { dismiss } = notifyNotification(this.waitingMessage)\n                        try {\n                            this.estimateGas = gas / (['compound', 'usdt'].includes(currentContract.currentContract) ? 1.5 : 2.5)\n                            if(!['tbtc','ren','sbtc'].includes(currentContract.currentContract)) await common.ensure_allowance_zap_out(token_amount, undefined, undefined, this.inf_approvalamount)\n                            dismiss()\n                            this.waitingMessage = 'Please confirm withdrawal transaction'\n                            var { dismiss } = notifyNotification(this.waitingMessage)\n                            await helpers.setTimeoutPromise(100)\n    \t\t\t        \tawait inOneCoin.methods.remove_liquidity_imbalance(amounts, token_amount).send({\n    \t\t\t\t        \tfrom: currentContract.default_account,\n                                gasPrice: this.gasPriceWei,\n                                gas: gas,\n    \t\t\t\t        }).once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                                this.waitingMessage = 'Waiting for withdrawal to confirm: no further action needed'\n                            })\n                        }\n                        catch(err) {\n                            console.error(err)\n                            dismiss()\n                            errorStore.handleError(err)\n                            this.waitingMessage = ''\n                            this.show_loading = false;\n                            throw err;\n                        }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    else {\n                    let balance = BN(this.token_balance)\n                    if(this.share == 100) balance = BN(await currentContract.swap_token.methods.balanceOf(currentContract.default_account).call());\n                    if(this.showstaked) balance = balance.plus(this.staked_balance)\n                    var amount = BN(this.share).div(BN(100)).times(balance)\n\n                    if((this.token_balance.lt(amount) || unstake) && ['susdv2', 'sbtc', 'y', 'swusd'].includes(this.currentPool)) {\n                        let unstakeAmount = BN(amount).minus(BN(this.token_balance))\n                        if(unstake) unstakeAmount = BN(amount)\n                        await this.unstake(unstakeAmount, unstake && !unstake_only, unstake_only)\n                    }\n                    if(unstake_only) return;\n                    amount = amount.toFixed(0,1)\n                    if(this.to_currency !== null && this.to_currency < 10) {\n                        this.waitingMessage = `Please approve ${this.toFixed((amount / 1e18))} Curve LP tokens for withdrawal`\n                        var { dismiss } = notifyNotification(this.waitingMessage)\n                        this.estimateGas = contractGas.depositzap[this.currentPool].withdraw / 2\n                        if(!['tbtc','ren','sbtc'].includes(currentContract.currentContract)) await common.ensure_allowance_zap_out(amount, undefined, undefined, this.inf_approval)\n                        dismiss()\n                        let min_amount;\n                        try {\n                            min_amount = await inOneCoin.methods.calc_withdraw_one_coin(amount, this.to_currency).call();\n                            min_amount = BN(min_amount).times(BN(1).minus(this.calcFee))\n                        }\n                        catch(err) {\n                            console.error(err)\n                            this.show_nobalance = true;\n                            this.show_nobalance_i = this.to_currency;\n                        }\n                        this.waitingMessage = 'Please confirm withdrawal transaction'\n                        var { dismiss } = notifyNotification(this.waitingMessage)\n                        let args = [BN(amount).toFixed(0,1), this.to_currency, BN(min_amount).times(BN(1).div(BN(this.getMaxSlippage))).toFixed(0, 1), false]\n                        await helpers.setTimeoutPromise(100)\n\t\t\t        \ttry {\n                            await inOneCoin.methods\n\t\t\t        \t\t.remove_liquidity_one_coin(...args)\n\t\t\t        \t\t.send({\n\t\t\t        \t\t\tfrom: currentContract.default_account,\n\t\t\t        \t\t\tgasPrice: this.gasPriceWei,\n                                gas: contractGas.depositzap[this.currentPool].withdraw | 0,\n\t\t\t        \t\t}).once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                                this.waitingMessage = `Waiting for withdrawal\n                                <a href='https://etherscan.io/tx/${hash}'>transaction</a>\n                                to confirm: no further action needed`\n                            })\n                        }\n                        catch(err) {\n                            console.error(err)\n                            dismiss()\n                            errorStore.handleError(err)\n                        }\n\t\t\t        }\n\t\t\t        else if(this.to_currency == 10 && this.currentPool != 'swusd') {\n                        this.waitingMessage = `Please approve ${this.toFixed(amount / 1e18)} Curve LP tokens for withdrawal`\n                        var { dismiss } = notifyNotification(this.waitingMessage)\n                        try {\n                            this.estimateGas = contractGas.depositzap[this.currentPool].withdrawShare / 2\n                            if(!['tbtc','ren','sbtc'].includes(currentContract.currentContract)) await common.ensure_allowance_zap_out(amount, undefined, undefined, this.inf_approval)\n                            dismiss()\n                            this.waitingMessage = 'Please confirm withdrawal transaction'\n                            var { dismiss } = notifyNotification(this.waitingMessage)\n                            let min_amounts = await this.getMinAmounts();\n                            await helpers.setTimeoutPromise(100)\n    \t\t\t        \tawait inOneCoin.methods.remove_liquidity(amount, min_amounts)\n    \t\t\t        \t.send({\n                                from: currentContract.default_account,\n                                gasPrice: this.gasPriceWei,\n                                gas: contractGas.depositzap[this.currentPool].withdrawShare,\n                            })\n                            .once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                                this.waitingMessage = `Waiting for withdrawal\n                                <a href='https://etherscan.io/tx/${hash}'>transaction</a>\n                                to confirm: no further action needed`\n                            });\n                        }\n                        catch(err) {\n                            console.error(err)\n                            dismiss()\n                            errorStore.handleError(err)\n                            this.waitingMessage = ''\n                            this.show_loading = false\n                            throw err;\n                        }\n\t\t\t        }\n\t\t\t        else {\n                        try {\n    \t\t\t        \tlet min_amounts = await this.getMinAmounts();\n                            this.waitingMessage = 'Please confirm withdrawal transaction'\n                            var { dismiss } = notifyNotification(this.waitingMessage)\n                            try {\n                                this.estimateGas = await currentContract.swap.methods.remove_liquidity(amount, min_amounts)\n                                                    .estimateGas({\n                                                        from: currentContract.default_account,\n                                                        gasPrice: this.gasPriceWei,\n                                                        gas: 600000,\n                                                    })\n                            }\n                            catch(err) {\n                                this.estimateGas = 600000\n                            }\n                            await helpers.setTimeoutPromise(100)\n    \t\t\t        \tawait currentContract.swap.methods.remove_liquidity(amount, min_amounts).send({\n                                from: currentContract.default_account,\n                                gasPrice: this.gasPriceWei,\n                                gas: 600000,\n                            })\n                            .once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                                this.waitingMessage = `Waiting for withdrawal\n                                <a href='https://etherscan.io/tx/${hash}'>transaction</a>\n                                to confirm: no further action needed`\n                            });\n                        }\n                        catch(err) {\n                            console.error(err)\n                            dismiss()\n                            errorStore.handleError(err)\n                            this.waitingMessage = ''\n                            this.show_loading = false\n                            throw err;\n                        }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    if(this.share == '---') {\n\t\t\t        for (let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t            this.handle_change_amounts(i);\n\t\t\t        }\n\t\t\t    }\n                this.show_loading = false;\n                this.waitingMessage = ''\n                this.estimateGas = 0\n\n\t\t\t    await this.update_balances();\n\t\t\t    await common.update_fee_info();\n\t\t\t},\n\t\t\tasync handle_change_share() {\n                try {\n\n                    let inOneCoin = currentContract.deposit_zap\n                    if(['tbtc','ren','sbtc'].includes(currentContract.currentContract)) inOneCoin = currentContract.swap\n\n                    this.warninglow = false;\n                    this.showWithdrawSlippage = false\n                    this.show_nobalance = false\n                    if(this.to_currency == null && this.withdrawc == false && this.share == '---') this.to_currency = 10\n                    if(this.share != '---' && this.to_currency != null && this.to_currency != 10) this.showWithdrawSlippage = true\n                    let token_balance = this.showstaked ? this.token_balance.plus(this.staked_balance) : this.token_balance\n                    currentContract.showSlippage = false;\n                    currentContract.slippage = 0;\n                    if(this.to_currency !== null && this.to_currency < 10) {\n                        var amount = BN(this.share).div(BN(100)).times(token_balance).toFixed(0,1);\n                        if (this.share == 100) {\n                            try {\n                                amount = await currentContract.swap_token.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').call();\n                            }catch(e) {\n                                console.log('get balanceOf token failed');\n                                throw e;\n                            }\n                            if(this.showstaked) amount = BN(amount).plus(BN(this.staked_balance)).toFixed(0,1)\n                        }\n                        let precision = allabis[currentContract.currentContract].coin_precisions[this.to_currency]\n                        let zap_values = Array(currentContract.N_COINS).fill(0)\n                        try {\n                            this.warninglow = false\n                            console.log('inOneCoin address', inOneCoin._address);\n                            const withdrawOneCoin = await inOneCoin.methods.calc_withdraw_one_coin(amount, this.to_currency).call();\n                            zap_values[this.to_currency] = BN(withdrawOneCoin)\n                            if(zap_values[this.to_currency].eq(BN(0))) this.warninglow = true\n                        }\n                        catch(err) {\n                            console.log('handle_change_share error 333', err);\n                            if(this.share != '') {\n                                this.show_nobalance = true;\n                                this.show_nobalance_i = this.to_currency;\n                            }\n                        }\n                        let real_values = Array(currentContract.N_COINS).fill(0)\n                        real_values[this.to_currency] = zap_values[this.to_currency].div(precision)\n                        this.inputs = this.inputs.map(v=>0)\n                        this.inputs[this.to_currency] = this.toFixed(BN(real_values[this.to_currency]), 2,1)\n                        await this.calcSlippage([], false, zap_values, this.to_currency)\n                    }\n\n                    this.shareStyles.backgroundColor = 'blue'\n                    this.shareStyles.color = 'aqua'\n                    if (this.share == '---') {\n                        this.share = 0;\n                    }\n                    else if ((this.share > 100) | (this.share < 0))\n                        this.shareStyles.backgroundColor = 'red'\n                    if(this.to_currency !== null && this.to_currency < 10) return;\n                    for (let i = 0; i < currentContract.N_COINS; i++) {\n                        if ((this.share >=0) & (this.share <= 100)) {\n                            let value = BN(this.share / 100 * this.balances[i] * currentContract.c_rates[i] * token_balance / this.token_supply)\n                            Vue.set(this.inputs, i, this.toFixed(value, 2, 1))\n                        }\n                        else {\n                            Vue.set(this.inputs, i, 0)\n                        }\n                        Vue.set(this.inputStyles, i, {\n                            backgroundColor: '#707070',\n                            color: '#d0d0d0'\n                        })\n                    }\n\n                } catch(e){\n                    console.log('handle change share withdraw 222');\n                    throw e;\n                }\n\n\t\t\t},\n\t\t\tsetAllInputBackground(bgcolor) {\n\t\t\t\tfor(let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t\t\tVue.set(this.inputStyles, i, Object.assign(this.inputStyles[i] || {}, {backgroundColor: bgcolor}))\n\t\t\t\t}\n\t\t\t},\n\t        async handle_migrate_new() {\n\t        \tif(this.currentPool == 'compound')\n\t        \t\treturn common.handle_migrate_new('new')\n\t        \tthis.share = 100\n\t        \tawait this.handle_remove_liquidity();\n\t        },\n            async migrateUSDT() {\n                this.withdrawc = false;\n                let amounts = this.inputs;\n                amounts.push(0);\n                this.handle_remove_liquidity()\n                await init(currentContract.contracts.pax)\n\n                amounts = amounts.map((v, i)=>BN(v).times(allabis.pax.coin_precisions[i]).toFixed(0))\n                this.waitingMessage = 'Please approve spending your coins'\n                var { dismiss } = notifyNotification(this.waitingMessage)\n                await common.ensure_allowance(amounts, true, 'pax', 3)\n                dismiss()\n                let pax_deposit_zap = new currentContract.web3.eth.Contract(allabis.pax.deposit_abi, allabis.pax.deposit_address)\n                let token_amount = await currentContract.contracts.pax.swap.methods.calc_token_amount(amounts, true).call();\n                token_amount = BN(Math.floor(token_amount * 0.99).toString()).toFixed(0,1);\n                this.waitingMessage = 'Please confirm deposit to PAX pool transaction'\n                var { dismiss } = notifyNotification(this.waitingMessage)\n                let nonZeroInputs = amounts.filter(Number).length\n                let gas = contractGas.depositzap.pax.deposit(nonZeroInputs) | 0\n                await helpers.setTimeoutPromise(100)\n                try {\n                    let add_liquidity = pax_deposit_zap.methods.add_liquidity(amounts, token_amount).send({\n                        from: currentContract.default_account,\n                        gas: gas,\n                    })\n                    .once('transactionHash', hash => {\n                        dismiss()\n                        notifyHandler(hash)\n                        this.waitingMessage = `Waiting for deposit to PAX transaction to confirm no further action required`\n                    })\n                }\n                catch(err) {\n                    console.error(err)\n                    errorStore.handleError(err)\n                }\n            }\n        },\n\n    }\n</script>\n\n<style>\n\t#claim-snx, #claim-bpt, #claim-snxbpt, #claim-adai {\n\t\tmargin-right: 1em;\n\t}\n\t#withdrawold {\n\t\tmargin-left: 3px;\n\t\tcolor: white;\n\t}\n\t#amount-warning {\n\t\tmargin-bottom: 1em;\n\t}\n\t#mintr {\n        margin-top: 1em;\n\t\tmargin-left: 1em;\n\t}\n\t#withdraw_buttons {\n\t\ttext-align: center;\n\t\tmargin-top: 3px;\n\t}\n    .currency_label {\n        display: block;\n        margin-bottom: 0.3em;\n    }\n    .currency_label .token-icon {\n        margin-right: 0.6em;\n    }\n    .withdrawin {\n        margin-bottom: 0.3em;\n    }\n    #withdraw_buttons button:nth-child(n+3) {\n        margin-top: 0.6em;\n    }\n    .hoverpointer {\n        cursor: pointer;\n    }\n    .modal-content {\n        text-align: center;\n        padding: 0;\n        border: none;\n        width: 280px;\n    }\n    .modal-content fieldset {\n        color: white;\n        font-weight: bolder;\n        border: 6px double white;\n        padding-block-start: 1em;\n        padding-block-end: 1em;\n    }\n    .modal-content button {\n        margin-top: 0.6em;\n        padding: 0 2em;\n    }\n    .legend2 {\n      position: absolute;\n      top: 0;\n      left: 2em;\n      background: #c0c0c0;\n      line-height:1.2em;\n    }\n    .greentext {\n        color: green;\n    }\n    .legend2 .greentext {\n        display: inline-block;\n        transform: translate3d(0,-0.1em,10em);\n    }\n    .legend2 .greentext:hover {\n        transform: none;\n    }\n    .warningtext {\n        color: darkred;\n    }\n    .buttoncancel {\n        margin-left: 1em;\n        background: gray;\n        box-shadow: none;\n        border: none;\n    }\n    .modaltext {\n        color: black;\n    }\n    .advancedoptions {\n        margin-top: 1em;\n    }\n    .advancedoptions + div fieldset {\n        margin-top: 1em;\n    }\n    .advancedoptions + div legend {\n        text-align: center;\n    }\n    #unstakestaked {\n        margin-left: 1em;\n    }\n    #unstakepercentage {\n        width: 5.1em;\n    }\n    #stakedbalance span {\n        cursor: pointer;\n        border-bottom: 1px solid black;\n        border-bottom-style: dashed;\n    }\n    label[for='unstakepercentage'] {\n        margin-right: 1em;\n    }\n    #unstakepercentage.invalid {\n        background-color: red;\n    }\n    #stakedbalance + div {\n        margin-top: 1em;\n    }\n    .do-center {\n        text-align: center;\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Withdraw.vue?vue&type=template&id=5d2e7eca&\"\nimport script from \"./Withdraw.vue?vue&type=script&lang=js&\"\nexport * from \"./Withdraw.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Withdraw.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.errorMessage),expression:\"errorMessage\"}],staticClass:\"simple-error pulse\"},[_vm._v(\" \"+_vm._s(_vm.errorMessage)+\" \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.gasPriceMedium),expression:\"gasPriceMedium\"}],staticClass:\"do-center\",attrs:{\"id\":\"gas_price\"}},[_c('span',{staticStyle:{\"color\":\"#86fce7\"}},[_vm._v(\"Gas price:\")]),_c('input',{attrs:{\"id\":\"gasstandard\",\"type\":\"radio\",\"name\":\"gas\"},domProps:{\"value\":_vm.gasPriceMedium},on:{\"click\":function($event){_vm.customGasDisabled = true; _vm.gasPrice = _vm.gasPriceMedium}}}),_c('label',{attrs:{\"for\":\"gasstandard\"}},[_vm._v(_vm._s(Math.round(_vm.gasPriceMedium))+\" Standard\")]),_c('input',{attrs:{\"id\":\"gasfast\",\"type\":\"radio\",\"name\":\"gas\",\"checked\":\"\"},domProps:{\"value\":_vm.gasPriceFast},on:{\"click\":function($event){_vm.customGasDisabled = true; _vm.gasPrice = _vm.gasPriceFast}}}),_c('label',{attrs:{\"for\":\"gasfast\"}},[_vm._v(_vm._s(Math.round(_vm.gasPriceFast))+\" Fast\")]),_c('input',{attrs:{\"id\":\"gasinstant\",\"type\":\"radio\",\"name\":\"gas\"},domProps:{\"value\":_vm.gasPriceFastest},on:{\"click\":function($event){_vm.customGasDisabled = true; _vm.gasPrice = _vm.gasPriceFastest}}}),_c('label',{attrs:{\"for\":\"gasinstant\"}},[_vm._v(_vm._s(Math.round(_vm.gasPriceFastest))+\" Instant\")]),_c('input',{attrs:{\"id\":\"custom_gas\",\"type\":\"radio\",\"name\":\"gas\",\"value\":\"-\"},on:{\"click\":function($event){_vm.customGasDisabled = false; _vm.gasPrice = _vm.gasPriceSlow}}}),_c('label',{attrs:{\"for\":\"custom_gas\"},on:{\"click\":function($event){_vm.customGasDisabled = false; _vm.gasPrice = _vm.gasPriceSlow}}},[_c('input',{attrs:{\"type\":\"text\",\"id\":\"custom_gas_input\",\"disabled\":_vm.customGasDisabled,\"name\":\"custom_gas_input\"},domProps:{\"value\":_vm.customGasPriceInput},on:{\"input\":function($event){return _vm.setCustomGas($event)}}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.customGasPriceInput == _vm.gasPriceSlow),expression:\"customGasPriceInput == gasPriceSlow\"}]}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.customGasPriceInput && _vm.customGasPriceInput < _vm.gasPriceSlow),expression:\"customGasPriceInput && customGasPriceInput < gasPriceSlow\"}],staticClass:\"gastoolow\"},[_vm._m(0)])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"tooltip\"},[_vm._v(\" Low \"),_c('span',{staticClass:\"tooltiptext\"},[_vm._v(\" Too low gas price. Your transaction may be dropped. \")])])}]\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <p class='simple-error pulse' v-show='errorMessage'>\n            {{errorMessage}}\n        </p>\n    \t<div class=\"do-center\" id='gas_price' v-show='gasPriceMedium'><span style=\"color:#86fce7\">Gas price:</span>\n            <input id=\"gasstandard\" type=\"radio\" name=\"gas\" :value='gasPriceMedium' @click='customGasDisabled = true; gasPrice = gasPriceMedium'>\n            <label for=\"gasstandard\">{{Math.round(gasPriceMedium)}} Standard</label>\n\n            <input id=\"gasfast\" type=\"radio\" name=\"gas\" checked :value='gasPriceFast' @click='customGasDisabled = true; gasPrice = gasPriceFast'>\n            <label for=\"gasfast\">{{Math.round(gasPriceFast)}} Fast</label>\n\n            <input id=\"gasinstant\" type=\"radio\" name=\"gas\" :value='gasPriceFastest' @click='customGasDisabled = true; gasPrice = gasPriceFastest'>\n            <label for=\"gasinstant\">{{Math.round(gasPriceFastest)}} Instant</label>\n            <input id=\"custom_gas\" type=\"radio\" name=\"gas\" value='-' @click=\"customGasDisabled = false; gasPrice = gasPriceSlow\">\n            <label for=\"custom_gas\" @click=\"customGasDisabled = false; gasPrice = gasPriceSlow\">\n                <input type=\"text\" id=\"custom_gas_input\" \n                    :disabled='customGasDisabled'\n                    name=\"custom_gas_input\"\n                    :value = 'customGasPriceInput'\n                   \t@input='setCustomGas($event)'>\n                <span v-show='customGasPriceInput == gasPriceSlow'></span>\n                <span v-show='customGasPriceInput && customGasPriceInput < gasPriceSlow' class='gastoolow'> \n                    <span class='tooltip'>\n                        Low\n                        <span class='tooltiptext'>\n                            Too low gas price. Your transaction may be dropped.\n                        </span>\n                    </span>\n                </span>\n            </label>\n        </div>\n    </div>\n</template>\n\n<script>\n\timport { state } from './gasPriceStore'\n    import { state as errorState } from './errorStore'\n    import { retry } from '../../utils/helpers'\n\n    import { setIntervalAsync, clearIntervalAsync } from 'set-interval-async/dynamic'\n\n    import BN from 'bignumber.js'\n\n\n\texport default {\n\t\tdata: () => ({\n            customGasDisabled: true,\n\t\t}),\n\n\t\tcomputed: {\n            gasPriceSlow() {\n                return state.gasPriceInfo && state.gasPriceInfo.low || 15\n            },\n\t\t\tgasPriceMedium() {\n                return state.gasPriceInfo && state.gasPriceInfo.standard || 20\n            },\n            gasPriceFast() {\n                return state.gasPriceInfo && state.gasPriceInfo.fast || 25\n            },\n            gasPriceFastest() {\n                return state.gasPriceInfo && state.gasPriceInfo.instant || 30\n            },\n            gasPrice: {\n            \tget() {\n            \t\treturn state.gasPrice\n            \t},\n            \tset(val) {\n            \t\tstate.gasPrice = val\n            \t},\n            },\n            customGasPriceInput() {\n            \tif(this.customGasDisabled) return this.gasPriceSlow\n            \treturn this.gasPrice\n            },\n            errorMessage() {\n                setTimeout(() => errorState.txError = null, 2200)\n                return errorState.txError\n            },\n\t\t},\n\n\t\tasync created() {\n            !state.fetched && this.getGasPrice()\n            state.gasPriceInterval && clearIntervalAsync(state.gasPriceInterval)\n            if(!state.gasPriceInterval || state.gasPriceInterval.stopped) {\n                state.gasPriceInterval = setIntervalAsync(() => this.getGasPrice(), 3000)\n            }\n\t\t\tthis.$watch(() => state.gasPrice, val => {\n\t\t\t\tstate.gasPriceWei = BN(val).times(1e9).toFixed(0,1)\n\t\t\t}, {\n\t\t\t\timmediate: true,\n\t\t\t})\n\t\t},\n\n        methods: {\n            async getGasPrice() {\n                try {\n                    let gasPriceInfo = await retry(fetch('https://gasprice.poa.network/'))\n                    gasPriceInfo = await gasPriceInfo.json()\n                    state.gasPriceInfo = gasPriceInfo\n                    state.gasPriceInfo.low = state.gasPriceInfo.slow\n                    if(state.gasPriceInfo.fast > 1000) throw new Error('too high!')\n                }\n                catch(err) {\n                    console.error(err)\n                    let gasPrice = (await web3.eth.getGasPrice()) / 1e9;\n                    state.gasPriceInfo = {\n                        low: gasPrice -2,\n                        standard: gasPrice,\n                        fast: gasPrice + 2,\n                        instant: gasPrice + 4,\n                    }\n                }\n            \n                if(!state.fetched) {\n                    state.gasPrice = state.gasPriceInfo.fast\n                    state.fetched = true\n                }\n            },\n\n            async setCustomGas(event) {\n                let value = event.target.value\n                if(event.target.value > this.gasPriceFastest * 2)\n                    value = this.gasPriceFastest * 2\n                this.gasPrice = value\n            },\n        },\n\n\t}\n</script>\n\n<style scoped>\n    .pulse {\n        animation: pulse 1s 3;\n        margin-bottom: 8px;\n    }\n    #custom_gas_wrapper {\n        margin-top: 0.4em;\n        margin-left: 6em;\n        display: block;\n    }\n    .gastoolow {\n        color: darkred;\n    }\n    @media only screen and (max-device-width: 730px) {\n        #custom_gas_wrapper, #gas_price label {\n            margin-top: 0;\n            margin-left: 0;\n        }\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GasPrice.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GasPrice.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GasPrice.vue?vue&type=template&id=11f75e20&scoped=true&\"\nimport script from \"./GasPrice.vue?vue&type=script&lang=js&\"\nexport * from \"./GasPrice.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GasPrice.vue?vue&type=style&index=0&id=11f75e20&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"11f75e20\",\n  null\n  \n)\n\nexport default component.exports","import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\n\n/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\nconst MAX_INTERVAL_MS = Math.pow(2, 31) - 1;\n/**\n * Stops an execution cycle started by setIntervalAsync.<br>\n * Any ongoing function executions will run until completion,\n * but all future ones will be cancelled.\n *\n * @param {SetIntervalAsyncTimer} timer\n * @returns {Promise}\n *          A promise which resolves when all pending executions have finished.\n */\n\nfunction clearIntervalAsync(_x) {\n  return _clearIntervalAsync.apply(this, arguments);\n}\n\nfunction _clearIntervalAsync() {\n  _clearIntervalAsync = _asyncToGenerator(function* (timer) {\n    timer.stopped = true;\n\n    for (var _i = 0, _Object$values = Object.values(timer.timeouts); _i < _Object$values.length; _i++) {\n      const timeout = _Object$values[_i];\n      clearTimeout(timeout);\n    }\n\n    const noop = () => {};\n\n    const promises = Object.values(timer.promises).map(promise => {\n      promise.catch(noop);\n    });\n    const noopInterval = setInterval(noop, MAX_INTERVAL_MS);\n    yield Promise.all(promises);\n    clearInterval(noopInterval);\n  });\n  return _clearIntervalAsync.apply(this, arguments);\n}\n\n/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\n\n/**\n * Error thrown by setIntervalAsync when invalid arguments are provided.\n */\nclass SetIntervalAsyncError extends Error {}\n\nObject.defineProperty(SetIntervalAsyncError.prototype, 'name', {\n  value: 'SetIntervalAsyncError'\n});\n\n/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\nconst MIN_INTERVAL_MS = 10;\n/**\n * @private\n *\n * @param {function} handler - Handler function to be executed in intervals.<br>\n *                             May be asynchronous.\n */\n\nfunction validateHandler(handler) {\n  if (!(typeof handler === 'function')) {\n    throw new SetIntervalAsyncError('Invalid argument: \"handler\". Expected a function.');\n  }\n}\n/**\n * @private\n *\n * @param {number} interval - Interval in milliseconds. Must be at least 10 ms.\n */\n\nfunction validateInterval(interval) {\n  if (!(typeof interval === 'number' && MIN_INTERVAL_MS <= interval)) {\n    throw new SetIntervalAsyncError(`Invalid argument: \"interval\". Expected a number greater than or equal to ${MIN_INTERVAL_MS}.`);\n  }\n}\n\n/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\n\n/**\n * Timer object returned by setIntervalAsync.<br>\n * Can be used together with {@link clearIntervalAsync} to stop execution.\n */\nclass SetIntervalAsyncTimer {\n  constructor() {\n    this.stopped = false;\n    this.id = 0;\n    this.timeouts = {};\n    this.promises = {};\n  }\n\n}\n\n/**\n * Attempts to execute the given handler at regular intervals, while preventing<br>\n * multiple concurrent executions. The handler will never be executed concurrently<br>\n * more than once in any given moment. If the running time of any execution exceeds<br>\n * the desired interval, the following execution will be scheduled as soon as<br>\n * possible; ie. immediately after the previous execution concludes.\n *\n * @param {function} handler - Handler function to be executed in intervals.<br>\n *                             May be asynchronous.\n * @param {number} interval - Interval in milliseconds. Must be at least 10 ms.\n * @param {...*} args - Any number of arguments to pass on to the handler.\n * @returns {SetIntervalAsyncTimer}\n *          A timer object which can be used to stop execution with {@link clearIntervalAsync}.\n *\n * @alias [Dynamic] setIntervalAsync\n */\n\nfunction setIntervalAsync(handler, interval, ...args) {\n  validateHandler(handler);\n  validateInterval(interval);\n  const timer = new SetIntervalAsyncTimer();\n  const id = timer.id;\n  timer.timeouts[id] = setTimeout(timeoutHandler, interval, timer, handler, interval, ...args);\n  return timer;\n}\n\nfunction timeoutHandler(timer, handler, interval, ...args) {\n  const id = timer.id;\n  timer.promises[id] = _asyncToGenerator(function* () {\n    const startTime = new Date();\n\n    try {\n      yield handler(...args);\n    } catch (err) {\n      console.error(err);\n    }\n\n    const endTime = new Date();\n\n    if (!timer.stopped) {\n      const executionTime = endTime - startTime;\n      const timeout = interval > executionTime ? interval - executionTime : 0;\n      timer.timeouts[id + 1] = setTimeout(timeoutHandler, timeout, timer, handler, interval, ...args);\n    }\n\n    delete timer.timeouts[id];\n    delete timer.promises[id];\n  })();\n  timer.id = id + 1;\n}\n\nexport { SetIntervalAsyncError, clearIntervalAsync, setIntervalAsync };\n//# sourceMappingURL=index.mjs.map\n"],"sourceRoot":""}