{"version":3,"sources":["webpack:///./node_modules/comlink/dist/esm/comlink.mjs","webpack:///./src/components/Stats.vue?6826","webpack:///./src/components/common/priceStore.js","webpack:///./src/components/root/CombinedStats.vue?32ca","webpack:///./src/components/Stats.vue?1229","webpack:///src/components/Stats.vue","webpack:///./src/components/Stats.vue?d48e","webpack:///./src/components/Stats.vue","webpack:///src/components/root/CombinedStats.vue","webpack:///./src/components/root/CombinedStats.vue?22cf","webpack:///./src/components/root/CombinedStats.vue","webpack:///./src/components/root/TotalBalances.vue?b3d4","webpack:///src/components/root/TotalBalances.vue","webpack:///./src/components/root/TotalBalances.vue?930d","webpack:///./src/components/root/TotalBalances.vue","webpack:///./src/components/graphs/worker.js","webpack:///./src/components/BalancesInfo.vue?6299","webpack:///./src/components/common/DailyAPYChart.vue?08d9","webpack:///src/components/common/DailyAPYChart.vue","webpack:///./src/components/common/DailyAPYChart.vue?b7c8","webpack:///./src/components/common/DailyAPYChart.vue","webpack:///./src/components/BalancesInfo.vue?b060","webpack:///src/components/BalancesInfo.vue","webpack:///./src/components/BalancesInfo.vue?cfb0","webpack:///./src/components/BalancesInfo.vue","webpack:///./src/components/root/TotalBalances.vue?eabb"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","isObject","val","proxyTransferHandler","canHandle","obj","port1","port2","MessageChannel","expose","port","start","wrap","throwTransferHandler","value","serialized","Error","isError","message","name","stack","Object","assign","transferHandlers","Map","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","isMessagePort","endpoint","constructor","close","target","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","_target","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","myFlat","arr","Array","prototype","concat","processed","v","transferCache","WeakMap","transfers","set","handler","serializedValue","serialize","get","deserialize","msg","generateUUID","l","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","state","btcPrice","getBTCPrice","helpers","fetch","req","json","res","bitcoin","usd","render","_vm","this","_h","$createElement","_c","_self","directives","rawName","expression","staticClass","attrs","_v","_s","error","_l","keys","filteredCurrencies","currency","i","includes","bal_infos","totals","l_infos","totalShares","fees","admin_fees","allCurrencies","totalTokenSupplies","totalTokenBalances","usdShares","staked_infos","totalStakes","usdStakes","virtual_prices","As","future_As","admin_actions_deadlines","staticRenderFns","class","pool","loading","_f","apr","_m","ref","chartdata","daily_apr","volumeData","getPool","weekly_apr","monthly_apr","total_apr","_e","currentPool","volume","component","staticStyle","yPoolTvlUsd","formatNumber","module","exports","Worker","currencies","bal_info","toFixed","totalBalances","totalCurrencies","dailyVolumeInUsd","fee","admin_fee","virtualPrice1","usdShare1","usdStake1","A1","initial_A","future_A","rampEnd","admin_actions_deadline1","future_A1","admin_actions_readable","totalShare","initializedContracts","totalBalance","totalSupply","l_info","totalUserBalances","volumes","realShare","realStake","lastPoint","lastPool","liqUtil","dailyUsdVolume","avgPrice"],"mappings":"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,SAGA,YACA,QACA,oBACA,sBAEA,uBACA,aACA,iBACA,aACA,wBACA,eACA,YACA,UACA,aACA,WACA,eACA,eACA,aACA,aAEA,gBACA,cACA,YAEA,kBACA,MACA,aACA,2BAEA,QACA,cACA,sBACA,wBAEA,QAxCA,WAwCA,WACI,KAAJ,mBAAM,OAAN,2CACA,kBAEI,KAAJ,mBAAM,OAAN,sCACA,6CAGE,SAAF,CACI,cADJ,WAEM,OAAN,sBACQ,KAAR,CACU,KAAV,OACU,QAAV,cAII,aATJ,WAUM,IAAN,4BAEM,cADN,OACA,GAEI,MAdJ,WAeM,OAAN,cAEI,mBAjBJ,WAkBM,OAAN,8DACA,oFAIE,QAvEF,WAwEA,6CAEA,SACA,QADA,WACA,+JACA,6BACA,mCACA,mCACA,mCAJA,SAKA,mBALA,uBAMA,oBANA,8CAQA,SATA,SASA,GACA,6CACA,GAEA,eAbA,WAaA,8KACA,wDASA,IATA,uCACA,sBACA,gFACA,mFAEA,kBACA,wBACA,6BACA,8CACA,oBACA,qBAEA,8DACA,kBACA,wBACA,6BAEA,0DACA,gCACA,qFApBA,8CAyBA,aAtCA,WAsCA,0KACA,KADA,MAEA,+BAFA,qEAEA,EAFA,KAEA,EAFA,KAGA,iBACA,oBACA,4BACA,WANA,sDAOA,wBAOA,2BACA,kCACA,wEACA,mDAGA,kDACA,QACA,iCACA,qEAGA,gBACA,QACA,iCACA,kEAIA,WACA,OACA,CACA,iCACA,kEAEA,CACA,iCACA,kEAEA,CACA,iCACA,mEAMA,QACA,iCACA,0DAGA,OACA,CACA,iCACA,iEAEA,CACA,iCACA,iDAEA,CACA,iCACA,wDAEA,CACA,iCACA,sEAEA,CACA,iCACA,mDAEA,CACA,iCACA,yDAEA,CACA,uCACA,mIAEA,CACA,uCACA,kEAvFA,4DA2FA,GA3FA,+CA8FA,gBApIA,WAoIA,yPACA,iBADA,cACA,EADA,OAEA,oKACA,kKACA,mKAJA,SAKA,qCALA,OAgBA,IAXA,EALA,OAMA,OACA,mFACA,gBACA,gBACA,gBACA,yCACA,wBACA,IACA,uBACA,qBAfA,0CAgBA,EAhB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A,OACA,WACA,aACA,cACA,YAEQ,cAAR,CACA,YAEA,WACA,SACA,eACA,wBACA,YACA,cACA,eACA,cACA,cACA,YACA,cACA,cAEA,kBAIA,OACA,CACA,aACA,YACA,mBACA,OACA,OACA,qBACA,OACA,eAEA,WAEA,QACA,cACA,MACA,UAHA,WAIA,mDAEA,OACA,gBAGA,qBACA,cAEA,CACA,gBAEA,YACA,OACA,sBACA,OACA,eAEA,WAEA,QACA,OACA,eAEA,cACA,OAEA,UACA,aACA,WAGA,OACA,QACA,OACA,iBAIA,UAMA,SACA,SACA,gBACA,2BACA,kBACA,qCACA,qJACA,mJACc,GAAd,oJACc,GAAd,gJACc,GAAd,kJACA,uJACA,wCACA,wBAEA,MADA,8DACA,iHAZA,CAeA,OAEA,QACA,aAGA,aAGA,UACA,WADA,WAEA,sEACA,wBAGA,OACA,cADA,SACA,GACA,iBAGA,QA5IA,WA6IA,uCACA,0BAEA,SACA,OADA,WAEA,iBAEA,iBAJA,SAIA,KACA,kFACA,mCACA,MAEA,QATA,WASA,ySACA,4BACA,2BAGA,IADA,KACA,wBACA,YACA,oCACA,8EACA,QACA,gBACA,QAXA,GAgBA,mBACA,iBACA,YACA,OACA,kBACA,MACA,iBAtBA,wBAuBA,sBACA,oCAxBA,SAyBA,2HAzBA,cAyBA,EAzBA,iBA0BA,SA1BA,eA0BA,EA1BA,OA0BA,OAEA,0FACA,oCAEA,GACA,8CACA,gDACA,mDAlCA,UAqCA,8BArCA,QAyCA,IAJA,EArCA,OAsCA,yEAEA,KACA,wBACA,sBACA,mBACA,0BACA,4CACA,OACA,qCACA,kCACA,SACA,QACA,+BACA,kBAGA,mBACA,eACA,YACA,OACA,kBAGA,sFAEA,mBACA,iBACA,YACA,OACA,kBApEA,WAwEA,eAEA,eA1EA,wBA2EA,sBACA,oCA5EA,UA6EA,aACA,2HACA,sIACA,uFAhFA,eA6EA,EA7EA,iBAkFA,mDAlFA,eAkFA,EAlFA,OAmFA,wBACA,cACA,cACA,mBAEA,sFAxFA,UAyFA,gCAzFA,QA4FA,IAHA,EAzFA,OA2FA,KACA,wBAC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","file":"js/chunk-4c230514.78ca1603.js","sourcesContent":["/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case 0 /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case 1 /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case 2 /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case 3 /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case 4 /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case 5 /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === 5 /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: 5 /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: 0 /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: 1 /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: 4 /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 2 /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: 3 /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: 3 /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: 0 /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case 3 /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case 0 /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stats.vue?vue&type=style&index=0&id=f4920aa6&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stats.vue?vue&type=style&index=0&id=f4920aa6&scoped=true&lang=css&\"","import * as helpers from '../../utils/helpers'\n\nexport let state = {\n\tbtcPrice: null,\n}\n\nexport async function getBTCPrice() {\n\tlet req = await helpers.retry(fetch(`https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd`), 300);\n    let res = await req.json();\n    state.btcPrice = res.bitcoin.usd;\n    return res.bitcoin.usd\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.error),expression:\"error\"}],staticClass:\"error window half-width info\",attrs:{\"id\":\"error-window\"}},[_vm._v(\" \"+_vm._s(_vm.error)+\" \")]),_c('total-balances'),_vm._l((Object.keys(_vm.filteredCurrencies)),function(currency,i){return _c('div',{staticClass:\"window white\"},[_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(currency == 'susd'),expression:\"currency == 'susd'\"}],staticClass:\"simple-error\"},[_vm._v(\" Old susd pool. Please \"),_c('router-link',{attrs:{\"to\":\"/susd/withdraw\"}},[_vm._v(\"withdraw and move\")]),_vm._v(\" funds to \"),_c('router-link',{attrs:{\"to\":\"/susdv2\"}},[_vm._v(\"susdv2\")]),_vm._v(\" pool \")],1),_c('p',{staticClass:\"text-center\"},[_c('router-link',{directives:[{name:\"show\",rawName:\"v-show\",value:(currency != 'susd' && !['tbtc', 'ren', 'sbtc'].includes(currency)),expression:\"currency != 'susd' && !['tbtc', 'ren', 'sbtc'].includes(currency)\"}],attrs:{\"to\":currency}},[_vm._v(_vm._s(currency == 'swusd' ? 'y' : currency)+\".Swerve.fi\")]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(['tbtc', 'ren', 'sbtc'].includes(currency)),expression:\"['tbtc', 'ren', 'sbtc'].includes(currency)\"}]},[_vm._v(_vm._s(currency))]),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(currency == 'susd'),expression:\"currency == 'susd'\"}],attrs:{\"href\":\"https://swusd.finance/pool\"}},[_vm._v(\"susd\")])],1),_c('balances-info',{attrs:{\"bal_info\":_vm.bal_infos[currency],\"total\":_vm.totals[i],\"l_info\":_vm.l_infos[currency],\"totalShare\":_vm.totalShares[i],\"fee\":_vm.fees[i],\"admin_fee\":_vm.admin_fees[i],\"pool\":currency,\"currencies\":_vm.allCurrencies[currency],\"tokenSupply\":_vm.totalTokenSupplies[i],\"tokenBalance\":_vm.totalTokenBalances[i],\"usdShare\":_vm.usdShares[i],\"staked_info\":['susdv2', 'sbtc', 'y', 'swusd'].includes(currency) && _vm.staked_infos[currency],\"totalStake\":_vm.totalStakes[currency],\"usdStake\":_vm.usdStakes[currency],\"virtual_price\":_vm.virtual_prices[i],\"A\":_vm.As[i],\"future_A\":_vm.future_As[i],\"admin_actions_deadline\":_vm.admin_actions_deadlines[i],\"combinedstats\":true}})],1)})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{class:{'window white': !_vm.pool}},[_c('fieldset',[_c('legend',[_vm._v(\"Average liquidity provider profit [ \"),_c('span',{class:{'loading line': _vm.loading},attrs:{\"id\":\"apr-profit\"}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.loading),expression:\"!loading\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"toFixed2\")(_vm.apr*100))+\"%\")])]),_vm._v(\" APY \"),_vm._m(0),_vm._v(\" ] \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"loading matrix\"}),_c('highcharts',{ref:\"highcharts\",attrs:{\"constructor-type\":'stockChart',\"options\":_vm.chartdata}})],1),_c('div',{staticClass:\"allapys\"},[_c('p',[_vm._v(\"Recent daily APY: \"),_c('span',{class:{'loading line': _vm.loading},attrs:{\"id\":\"daily-apr\"}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.loading),expression:\"!loading\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"toFixed2\")(_vm.daily_apr*100))+\"% \")])])]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.pool != 'susd'),expression:\"pool != 'susd'\"}]},[_vm._v(\"Daily trading volume: \"),_c('span',{class:{'loading line': _vm.volumeData[0] < 0}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.volumeData[0] != -1),expression:\"volumeData[0] != -1\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"formatNumber\")(_vm.volumeData[0],0))+\"$\")])])]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(['tbtc', 'ren', 'sbtc'].includes(_vm.getPool)),expression:\"['tbtc', 'ren', 'sbtc'].includes(getPool)\"}]},[_vm._v(\"Daily ₿ trading volume: \"),_c('span',{class:{'loading line': _vm.volumeData[0] < 0}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.volumeData[1] != -1),expression:\"volumeData[1] != -1\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"formatNumber\")(_vm.volumeData[1],8))+\" ₿\")])])]),_c('p',[_vm._v(\"Recent weekly APY: \"),_c('span',{class:{'loading line': _vm.loading},attrs:{\"id\":\"weekly-apr\"}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.loading),expression:\"!loading\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"toFixed2\")(_vm.weekly_apr*100))+\"% \")])])]),_c('p',[_vm._v(\"Recent monthly APY: \"),_c('span',{class:{'loading line': _vm.loading},attrs:{\"id\":\"monthly-apr\"}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.loading),expression:\"!loading\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"toFixed2\")(_vm.monthly_apr*100))+\"% \")])])]),_c('p',[_vm._v(\"Total APY: \"),_c('span',{class:{'loading line': _vm.loading},attrs:{\"id\":\"total-apr\"}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.loading),expression:\"!loading\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"toFixed2\")(_vm.total_apr*100))+\"% \")])]),_vm._m(1)])]),(!_vm.pool)?_c('daily-chart',{attrs:{\"data\":_vm.data,\"pool\":_vm.pool || _vm.currentPool,\"volume\":_vm.volume}}):_vm._e()],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?]\"),_c('span',{staticClass:\"tooltiptext\"},[_vm._v(\"(on annual basis)\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?] \"),_c('span',{staticClass:\"tooltiptext\"},[_vm._v(\"Total APY since the pool was launched\")])])}]\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<div :class=\"{'window white': !pool}\">\n\t        <fieldset>\n\t            <legend>Average liquidity provider profit [\n\t\t            \t<span id=\"apr-profit\" :class=\"{'loading line': loading}\">\n\t\t            \t\t<span v-show='!loading'> {{apr*100 | toFixed2}}%</span>\n\t            \t</span> APY <span class='tooltip'>[?]<span class='tooltiptext'>(on annual basis)</span></span> ]\n\t        \t</legend>\n\t            <div class='loading matrix' v-show='loading'></div>\n\t\t\t\t<highcharts :constructor-type=\"'stockChart'\" :options=\"chartdata\" ref='highcharts'></highcharts>\n\t        </fieldset>\n\t        <div class='allapys'>\n\t\t        <p>Recent daily APY:\n\t\t        \t<span id=\"daily-apr\" :class=\"{'loading line': loading}\">\n\t\t\t        \t<span v-show='!loading'> {{daily_apr*100 | toFixed2}}% </span>\n\t\t\t    \t</span>\n\t\t    \t</p>\n\t\t    \t<p v-show = \"pool != 'susd'\">Daily trading volume:\n\t\t    \t\t<span :class=\"{'loading line': volumeData[0] < 0}\">\n\t\t    \t\t\t<span v-show='volumeData[0] != -1'> {{ volumeData[0] | formatNumber(0) }}$</span>\n\t\t    \t\t</span>\n\t\t    \t</p>\n\t\t    \t<p v-show = \"['tbtc', 'ren', 'sbtc'].includes(getPool)\">Daily ₿ trading volume:\n\t\t    \t\t<span :class=\"{'loading line': volumeData[0] < 0}\">\n\t\t    \t\t\t<span v-show='volumeData[1] != -1'> {{ volumeData[1] | formatNumber(8) }} ₿</span>\n\t\t    \t\t</span>\n\t\t    \t</p>\n\t\t        <p>Recent weekly APY:\n\t\t        \t<span id=\"weekly-apr\" :class=\"{'loading line': loading}\">\n\t\t\t        \t<span v-show='!loading'> {{weekly_apr*100 | toFixed2}}% </span>\n\t\t\t    \t</span>\n\t\t    \t</p>\n\t\t    \t<p>Recent monthly APY:\n\t\t        \t<span id=\"monthly-apr\" :class=\"{'loading line': loading}\">\n\t\t\t        \t<span v-show='!loading'> {{monthly_apr*100 | toFixed2}}% </span>\n\t\t\t    \t</span>\n\t\t    \t</p>\n\t\t    \t<p>Total APY:\n\t\t    \t\t<span id=\"total-apr\" :class=\"{'loading line': loading}\">\n\t\t    \t\t\t<span v-show='!loading'> {{total_apr*100 | toFixed2}}% </span>\n\t\t    \t\t</span>\n\t\t    \t\t<span class='tooltip'>[?]\n\t\t    \t\t\t<span class='tooltiptext'>Total APY since the pool was launched</span>\n\t\t    \t\t</span>\n\t\t    \t</p>\n\t    \t</div>\n\t    \t<daily-chart :data='data' :pool='pool || currentPool' v-if='!pool' :volume='volume'/>\n\t    </div>\n\t</div>\n</template>\n\n<script>\n\timport abis from '../allabis'\n  import { getters, contract as currentContract } from '../contract'\n    import Highcharts from 'highcharts'\n\timport HC_exporting from 'highcharts/modules/exporting';\n\timport HC_exporting_data from 'highcharts/modules/export-data';\n\tHC_exporting(Highcharts);\n\tHC_exporting_data(Highcharts)\n\n\timport {Chart} from 'highcharts-vue'\n\timport stockInit from 'highcharts/modules/stock'\n\timport DailyChart from './common/DailyAPYChart.vue'\n\n\timport * as volumeStore from '@/components/common/volumeStore'\n\n\tstockInit(Highcharts)\n\n\n\texport default {\n\t\tcomponents: {\n\t\t\thighcharts: Chart,\n\t\t\tDailyChart,\n\t\t},\n\t\twatch: {\n\t\t\tcurrentPool(val) {\n\t\t\t\tthis.mounted();\n\t\t\t}\n\t\t},\n\t\tprops: ['pool'],\n\t\tdata: () => ({\n\t\t\tdata: [],\n\t\t\tapr: '',\n\t\t\tdaily_apr: '',\n\t\t\tweekly_apr: '',\n\t\t\tmonthly_apr: '',\n\t\t\ttotal_apr: '',\n\t\t\tchartdata: {\n\t\t\t\tchart: {\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t        panKey: 'ctrl'\n\t\t\t\t},\n                rangeSelector: {\n\t\t            selected: 1\n\t\t        },\n\t\t        exporting: {\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tcontextButton: {\n\t\t\t\t\t\t\tmenuItems: [\"printChart\",\n\t\t\t\t\t                    \"separator\",\n\t\t\t\t\t                    \"downloadPNG\",\n\t\t\t\t\t                    \"downloadJPEG\",\n\t\t\t\t\t                    \"downloadPDF\",\n\t\t\t\t\t                    \"downloadSVG\",\n\t\t\t\t\t                    \"separator\",\n\t\t\t\t\t                    \"downloadCSV\",\n\t\t\t\t\t                    \"downloadXLS\",\n\t\t\t\t\t                    //\"viewData\",\n\t\t\t\t\t                    \"openInCloud\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t            yAxis: {\n\t            \topposite: false,\n\t            \ttitle: {\n\t            \t\ttext: 'Profit [%]',\n\t            \t\tstyle: {\n\t            \t\t\tcolor: 'black'\n\t            \t\t}\n\t            \t},\n\t            \tlabels: {\n\t            \t\tformatter() {\n\t            \t\t\treturn (Math.floor(this.value * 100) / 100).toFixed(2);\n\t            \t\t},\n\t\t            \tstyle: {\n\t\t            \t\tcolor: 'black'\n\t\t            \t}\n\t            \t},\n\t            \ttickPixelInterval: 10,\n\t            },\n\t            xAxis: {\n\t            \tlabels: {\n\t\t            \tstyle: {\n\t\t            \t\tcolor: 'black'\n\t\t            \t}\n\t            \t}\n\t            },\n\t\t        series: [],\n\t\t        tooltip: {\n\t                valueDecimals: 5,\n\t                pointFormatter() {\n                \t\tlet value = Math.floor(this.y * 100000) / 100000 + '%';\n\t                \treturn `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n\t                }\n\t            },\n\t            legend: {\n\t            \tenabled: true,\n\t            },\n\t\t\t},\n\t\t\tvirtual_price_0: 0,\n\t\t\tchartdataDaily: null,\n\t\t\tloading: true,\n\t\t\tchart: null,\n\t\t\tstart: 0,\n\t\t\tend: 0,\n\t\t}),\n        computed: {\n          ...getters,\n          volume() {\n\n          \treturn volumeStore.state.volumes[this.getPool]\n          },\n          volumeData() {\n          \treturn volumeStore.state.volumes[this.getPool]\n          },\n          getPool() {\n          \tlet pool = this.pool || this.currentPool;\n          \tpool = pool == 'swusd' ? 'y' : pool == 'susdv2' ? 'susd' : pool\n          \treturn pool\n          },\n        },\n        created() {\n        \tvar start = new Date();\n\t\t\tstart.setHours(0,0,0,0);\n\t\t\tthis.start = start.getTime() / 1000\n\n\t\t\tvar end = new Date();\n\t\t\tend.setHours(23,59,59,999);\n\t\t\tthis.end = end.getTime() / 1000\n/*            this.$watch(()=>currentContract.initializedContracts, val => {\n                if(val) this.mounted();\n            })*/\n            this.$watch(()=>currentContract.currentContract, val => {\n            \tif(currentContract.initializedContracts) this.mounted();\n            })\n\n        },\n        mounted() {\n        \tthis.chart = this.$refs.highcharts.chart;\n\t        this.chart.showLoading();\n            this.mounted();\n            volumeStore.getVolumes(this.pool || this.currentPool)\n        },\n\t\tmethods: {\n\t\t\tasync mounted() {\n\t\t\t\tthis.loading = true;\n\t\t\t\twhile(this.chart.series.length) {\n\t\t\t\t\tthis.chart.series[0].remove()\n\t\t\t\t}\n\t\t\t\tlet subdomain = this.pool || this.currentPool\n\t\t\t\tif(subdomain == 'swusd') subdomain = 'y'\n\t\t\t\tif(subdomain == 'susd') subdomain = 'synthetix'\n\t\t\t\tif(subdomain == 'susdv2') subdomain = 'susd'\n\t\t\t\tif(subdomain == 'ren') subdomain = 'ren2'\n\t\t\t\tif(subdomain == 'sbtc') subdomain = 'rens'\n\n\t\t\t\tif(subdomain == 'synthetix') {\n\t\t\t\t\tlet res = await fetch(`https://${subdomain}.swerve.fi/stats.json`);\n\t\t\t\t\tlet json = await res.json()\n\t\t\t\t\tthis.apr = json.apr;\n\t\t\t\t\tthis.daily_apr = json.daily_apr;\n\t\t\t\t\tthis.weekly_apr = json.weekly_apr;\n\t\t\t        var data = json.data\n\t\t\t        this.data = data;\n\t\t\t        var step_size = Math.max(Math.round(data.length / 500), 1);\n\t\t\t        var start_profit = data[0][1]\n\t\t\t        var chartData = [];\n\t\t\t        for (let i = 0; i < data.length; i++) {\n\t\t\t            if ((i % step_size == 0) | (i == data.length - 1)) {\n\t\t\t                var el = data[i];\n\t\t\t                chartData.push([\n\t\t\t                    el[0] * 1000,\n\t\t\t                    (el[1] / start_profit - 1) * 100\n\t\t\t                ]);\n\t\t\t            }\n\t\t\t        }\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet apydata = await fetch(`${window.domain}/raw-stats/apys.json`)\n\t\t\t\t\tapydata = await apydata.json();\n\t\t\t\t\tthis.apr = apydata.apy.total[subdomain];\n\t\t\t\t\tthis.daily_apr = apydata.apy.day[subdomain];\n\t\t\t\t\tthis.weekly_apr = apydata.apy.week[subdomain];\n\t\t\t\t\tthis.monthly_apr = apydata.apy.month[subdomain];\n\t\t\t\t\tthis.total_apr = apydata.apy.total[subdomain];\n\t\t\t\t\tlet period = 1440\n\t\t\t\t\t//if(subdomain == 'susd') period = 30\n\t\t\t        let newdata = await fetch(`${window.domain}/raw-stats/${subdomain}-${period}m.json`)\n\t\t\t        this.data = await newdata.json()\n\t\t\t        var step_size = Math.max(Math.round(this.data.length / 500), 1);\n\t\t\t        let start_index = this.data.findIndex(el => el.virtual_price > 0)\n\t\t\t        if(subdomain == 'rens') start_index = 3\n\t\t\t        this.virtual_price_0 = this.data[start_index].virtual_price;\n\t\t\t        var start_profit = this.data[start_index].virtual_price / 1e18\n\n\t\t            let real_profit_0 = this.calcRealProfit(this.data[start_index], subdomain)\n\n\t\t\t        var chartData = [];\n\t\t\t        var realValueData = [];\n\t\t\t        for (let i = start_index; i < this.data.length; i++) {\n\t\t                var el = this.data[i];\n\n\t                \tlet real_profit = this.calcRealProfit(el, subdomain)\n\n\t                \trealValueData.push([\n\t                \t\tel.timestamp * 1000,\n\t                \t\t((real_profit / real_profit_0 - 1)) * 100,\n\t                \t])\n\n\t\t                chartData.push([\n\t\t                    el.timestamp * 1000,\n\t\t                    ((el.virtual_price / 1e18) / start_profit - 1) * 100\n\t\t                ]);\n\t\t\t        }\n\t\t\t\t}\n\n\t\t        this.chart.hideLoading();\n\t\t        this.chart.addSeries({\n\t\t        \tname: 'Virtual growth of liquidity share',\n\t\t        \tlineWidth: 2,\n\t\t        \tdata: chartData,\n\t\t        \tcolor: '#0b0a57'\n\t\t        }, false, false)\n\t\t        this.chart.addSeries({\n\t\t        \tname: 'Real growth of liquidity share',\n\t\t        \tlineWidth: 2,\n\t\t        \tdata: realValueData,\n\t\t        }, false, false)\n\t\t        this.chart.redraw(false)\n\t\t        this.loading = false;\n\t\t\t},\n\t\t\tcalcRealProfit(point, subdomain) {\n\t\t\t\tlet S = point.balances\n\t\t\t\t\t.map((balance, i) => balance * point.rates[i] / abis[subdomain == 'susd' ? 'susdv2' : subdomain == 'ren2' ? 'ren' : subdomain == 'rens' ? 'sbtc' : subdomain].coin_precisions[i])\n            \t\t.reduce((a, b) => a + b, 0)\n\n            \tlet real_profit = point.balances\n            \t\t.map((balance, i) => {\n            \t\t\t//comparing prices against USDC\n\t            \t\tlet key = \"1-\"+i;\n\t                \tif(i == 0) key = \"0-1\"\n\t                \tlet price = point.prices[key] && point.prices[key][3]\n\t                \tif(i > 0) price = 1 / price\n\t                \tprice = price || 1\n\n\t            \t\tlet real_amount = balance * point.rates[i] / abis[subdomain == 'susd' ? 'susdv2' : subdomain == 'ren2' ? 'ren' : subdomain == 'rens' ? 'sbtc' : subdomain].coin_precisions[i];\n\t            \t\treturn real_amount / S * (point.virtual_price / this.virtual_price_0) * price\n\t            \t})\n\t        \t\t.reduce((a, b) => a + b, 0)\n\t        \treturn real_profit\n\t\t\t},\n\t\t}\n\t}\n</script>\n\n<style scoped>\n\t.allapys {\n\t\tmargin-top: 0.7em;\n\t\tmargin-bottom: 0.7em;\n\t}\n\t.allapys > p {\n\t\tmargin-top: 0.3em;\n\t\tmargin-bottom: 0.3em;\n\t}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stats.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stats.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Stats.vue?vue&type=template&id=f4920aa6&scoped=true&\"\nimport script from \"./Stats.vue?vue&type=script&lang=js&\"\nexport * from \"./Stats.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Stats.vue?vue&type=style&index=0&id=f4920aa6&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f4920aa6\",\n  null\n  \n)\n\nexport default component.exports","<template>\n\t<div>\n\t\t<div class=\"error window half-width info\" id=\"error-window\" v-show='error'>\n          {{error}}\n        </div>\n\n\t    <total-balances/>\n\n\t\t<div class=\"window white\" v-for='(currency, i) in Object.keys(filteredCurrencies)'>\n\t\t\t  <p class='simple-error' v-show=\"currency == 'susd'\"> Old susd pool. Please <router-link to=\"/susd/withdraw\">withdraw and move</router-link> funds to <router-link to=\"/susdv2\">susdv2</router-link> pool </p>\n\t\t      <p class='text-center'>\n\t\t      \t<router-link :to=\"currency\" v-show=\"currency != 'susd' && !['tbtc', 'ren', 'sbtc'].includes(currency)\">{{currency == 'swusd' ? 'y' : currency}}.Swerve.fi</router-link>\n\t      \t\t<span v-show=\"['tbtc', 'ren', 'sbtc'].includes(currency)\">{{currency}}</span>\n\t\t      \t<a href='https://swusd.finance/pool' v-show=\"currency == 'susd'\">susd</a>\n\t\t      </p>\n\t\t      <!--<stats :pool= 'currency'/> -->\n\t\t      <balances-info\n\t\t\t      :bal_info = 'bal_infos[currency]'\n\t\t\t      :total = 'totals[i]'\n\t\t\t      :l_info = 'l_infos[currency]'\n\t\t\t      :totalShare = 'totalShares[i]'\n\t\t\t      :fee = 'fees[i]'\n\t\t\t      :admin_fee = 'admin_fees[i]'\n\t\t\t      :pool = 'currency'\n\t\t\t      :currencies = 'allCurrencies[currency]'\n\t\t\t      :tokenSupply = 'totalTokenSupplies[i]'\n\t\t\t      :tokenBalance = 'totalTokenBalances[i]'\n\t\t\t      :usdShare = 'usdShares[i]'\n\t\t\t      :staked_info = \"['susdv2', 'sbtc', 'y', 'swusd'].includes(currency) && staked_infos[currency]\"\n\t\t\t      :totalStake = 'totalStakes[currency]'\n\t\t\t      :usdStake = 'usdStakes[currency]'\n\t\t\t      :virtual_price = 'virtual_prices[i]'\n\t\t\t      :A = 'As[i]'\n\t\t\t      :future_A = 'future_As[i]'\n\t\t\t      :admin_actions_deadline = 'admin_actions_deadlines[i]'\n\t\t\t      :combinedstats = 'true'\n\t\t      />\n\t  \t</div>\n\t</div>\n</template>\n\n<script>\n\timport Vue from 'vue'\n\timport Stats from '../Stats.vue'\n\timport BalancesInfo from '../BalancesInfo.vue'\n  import TotalBalances from './TotalBalances.vue'\n\n    import { contract as currentContract, allCurrencies } from '../../contract'\n    import contracts, { ERC20_abi, cERC20_abi, yERC20_abi } from '../../allabis'\n\n    import * as helpers from '../../utils/helpers'\nimport { clean_and_multi_call } from '../../utils/common'\n\n\texport default {\n\t\tmetaInfo: {\n\t      title: 'Swerve.fi - Stats',\n\t      meta: [\n\t      ]\n\t    },\n\t\tcomponents: {\n\t\t\tStats,\n\t\t\tBalancesInfo,\n\t\t\tTotalBalances,\n\t\t},\n\t\tdata: () => ({\n\t\t\tcontracts: [],\n\t\t\tweb3contracts: {},\n\t\t\tall_coins: {},\n\t\t\tall_underlying_coins: {},\n\t\t\tall_c_rates: {},\n\t\t\tall_fees: {},\n\t\t\ttotals: [],\n\t\t\tbal_infos: {},\n\t\t\tl_infos: {},\n\t\t\ttotalShares: [],\n\t\t\ttotalStakes: {},\n\t\t\tusdShares: [],\n\t\t\tusdStakes: {},\n\n\t\t\tstaked_infos: {},\n\t\t\ttotalStake: -1,\n\t\t\tusdStake: -1,\n\n\t\t\tvirtual_prices: [],\n\t\t\tAs: [],\n\t\t\tfuture_As: [],\n\t\t\tadmin_actions_deadlines: [],\n\n\t\t\tfees: [],\n\t\t\tadmin_fees: [],\n\t\t\ttotalTokenBalances: [],\n\t\t\ttotalTokenSupplies: [],\n\t\t}),\n\t\tcreated() {\n            this.$watch(()=>currentContract.initializedContracts, val => {\n                if(val) this.mounted();\n            })\n            this.$watch(()=>currentContract.currentContract, val => {\n            \tif(currentContract.initializedContracts) this.mounted();\n            })\n        },\n        computed: {\n          allCurrencies() {\n          \treturn Object.assign(allCurrencies, {\n          \t\tsusd: {\n          \t\t\tsusd: 'sUSD',\n          \t\t\tyswerve: 'ySwerve'\n          \t\t}\n          \t})\n          },\n          allContracts() {\n          \tlet pools = {...contracts};\n          \tdelete pools.tbtc\n          \treturn pools;\n          },\n          error() {\n          \treturn currentContract.error\n          },\n          filteredCurrencies() {\n          \treturn Object.fromEntries(Object.entries(this.allCurrencies).filter(\n\t\t\t      ([key, val])=>['swusd'].includes(key)\n\t\t\t   ))\n          }\n        },\n        mounted() {\n            if(currentContract.initializedContracts) this.mounted();\n        },\n\t\tmethods: {\n\t\t\tasync mounted() {\n\t\t\t\tthis.fees = Array.from(4).fill(0)\n\t\t\t\tthis.admin_fees = Array.from(4).fill(0)\n\t\t\t\tthis.admin_fees = Array.from(4).fill(0)\n\t\t\t\tthis.admin_fees = Array.from(4).fill(0)\n\t\t\t\tawait this.init_contracts();\n\t\t\t\tawait this.update_fee_info();\n\t\t\t},\n\t\t\tpoolLink(pool) {\n\t\t\t\tif(pool == 'susd') return 'https://swusd.finance/pool'\n\t\t\t\treturn pool\n\t\t\t},\n\t\t\tasync init_contracts() {\n\t\t\t    for(let [key, contract] of Object.entries(this.allContracts)) {\n\t\t\t    \tthis.web3contracts[key] = {};\n\t\t\t\t    this.web3contracts[key].swap = new currentContract.web3.eth.Contract(contract.swap_abi, contract.swap_address);\n\t\t\t\t    this.web3contracts[key].swap_token = new currentContract.web3.eth.Contract(ERC20_abi, contract.token_address);\n\n\t\t\t        this.all_coins[key] = {}\n\t\t\t        this.all_coins[key].coins = [];\n\t\t\t        this.all_underlying_coins[key] = {}\n\t\t\t        this.all_underlying_coins[key].underlying_coins = [];\n\t\t\t\t    for (let i = 0; i < contract.N_COINS; i++) {\n\t\t\t\t        var addr = contracts[key].coins[i];\n\n\t\t\t\t        let cabi = ['swusd', 'y', 'busd', 'susd', 'pax'].includes(key) ? yERC20_abi : cERC20_abi;\n\t\t\t\t        if(key == 'susd' && i == 1) {\n\t\t\t\t        \tcabi = contracts.swusd.swap_abi;\n\t\t\t\t        \taddr = contracts.swusd.swap_address\n\t\t\t\t        }\n\t\t\t\t        this.all_coins[key].coins[i] = new currentContract.web3.eth.Contract(cabi, addr);\n\t\t\t\t        var underlying_addr = contracts[key].underlying_coins[i];\n\t\t\t\t        this.all_underlying_coins[key].underlying_coins[i] = new currentContract.web3.eth.Contract(ERC20_abi, underlying_addr);\n\t\t\t\t    }\n\t\t\t    }\n\t\t\t},\n\n\t\t\tasync update_rates() {\n\t\t\t\tlet calls = []\n\t\t\t    for(let [key, contract] of Object.entries(this.allContracts)) {\n\t\t\t    \tthis.all_fees[key] = [];\n\t\t\t     \tthis.all_c_rates[key] = {}\n\t\t\t\t\tthis.all_c_rates[key].c_rates = [];\n\t\t\t\t\tif (key != 'swusd') continue;\n\t\t\t\t    for (let i = 0; i < contract.N_COINS; i++) {\n\t\t\t\t        /*\n\t\t\t\t        rate: uint256 = cERC20(self.coins[i]).exchangeRateStored()\n\t\t\t\t        supply_rate: uint256 = cERC20(self.coins[i]).supplyRatePerBlock()\n\t\t\t\t        old_block: uint256 = cERC20(self.coins[i]).accrualBlockNumber()\n\t\t\t\t        rate += rate * supply_rate * (block.number - old_block) / 10 ** 18\n\t\t\t\t        */\n\t\t\t         \tif (contract.tethered && contract.tethered[i]\n\t\t\t         \t\t&& contract.use_lending && !contract.use_lending[i]\n\t\t\t         \t\t|| key == 'susdv2' || (key == 'pax' && i == 3) || key == 'tbtc' || key == 'ren' || key == 'sbtc' || key == 'swusd') {\n\t\t\t            \tthis.all_c_rates[key].c_rates[i] = 1 / contract.coin_precisions[i]\n\t\t\t         \t}\n\t\t\t         \telse {\n\t\t\t         \t\tif(key == 'y' || key == 'busd' || (key == 'susd' && i == 0) || (key == 'pax' && i < 3)) {\n\t\t\t            \t\tcalls.push([\n\t\t\t            \t\t\tthis.all_coins[key].coins[i]._address,\n\t\t\t            \t\t\tthis.all_coins[key].coins[i].methods.getPricePerFullShare().encodeABI()\n\t\t\t            \t\t])\n\t\t\t         \t\t}\n\t\t\t         \t\telse if(key == 'susd' && i == 1) {\n\t\t\t         \t\t\tcalls.push([\n\t\t\t         \t\t\t\tthis.all_coins[key].coins[i]._address,\n\t\t\t         \t\t\t\tthis.all_coins[key].coins[i].methods.get_virtual_price().encodeABI()\n\t\t\t         \t\t\t])\n\t\t\t         \t\t}\n\t\t\t         \t\telse {\n\t\t\t\t\t\t        if(key != 'usdt') {\n\t\t\t\t\t\t\t        calls.push(\n\t\t\t\t\t\t\t        \t[\n\t\t\t\t\t\t\t        \t\tthis.all_coins[key].coins[i]._address,\n\t\t\t\t\t\t\t        \t\tthis.all_coins[key].coins[i].methods.exchangeRateStored().encodeABI()\n\t\t\t\t\t\t\t        \t],\n\t\t\t\t\t\t\t        \t[\n\t\t\t\t\t\t\t        \t\tthis.all_coins[key].coins[i]._address,\n\t\t\t\t\t\t\t        \t\tthis.all_coins[key].coins[i].methods.supplyRatePerBlock().encodeABI()\n\t\t\t\t\t\t\t        \t],\n\t\t\t\t\t\t\t        \t[\n\t\t\t\t\t\t\t        \t\tthis.all_coins[key].coins[i]._address,\n\t\t\t\t\t\t\t        \t\tthis.all_coins[key].coins[i].methods.accrualBlockNumber().encodeABI()\n\t\t\t\t\t\t\t        \t],\n\t\t\t\t\t\t\t        )\n\t\t\t\t\t\t    \t}\n\t\t\t         \t\t}\n\t\t\t\t\t    }\n\t\t\t\t\t    calls.push([\n\t\t\t\t\t    \tthis.web3contracts[key].swap._address,\n\t\t\t\t\t    \tthis.web3contracts[key].swap.methods.balances(i).encodeABI(),\n\t\t\t\t\t    ])\n\t\t\t\t\t}\n\t\t\t\t    calls.push(\n\t\t\t\t    \t[\n\t\t\t\t    \t\tthis.web3contracts[key].swap._address,\n\t\t\t\t    \t\tthis.web3contracts[key].swap.methods.get_virtual_price().encodeABI(),\n\t\t\t\t    \t],\n\t\t\t\t    \t[\n\t\t\t\t    \t\tthis.web3contracts[key].swap._address,\n\t\t\t\t    \t\tthis.web3contracts[key].swap.methods.A().encodeABI(),\n\t\t\t\t    \t],\n\t\t\t\t    \t[\n\t\t\t\t    \t\tthis.web3contracts[key].swap._address,\n\t\t\t\t    \t\tthis.web3contracts[key].swap.methods.future_A().encodeABI(),\n\t\t\t\t    \t],\n\t\t\t\t    \t[\n\t\t\t\t    \t\tthis.web3contracts[key].swap._address,\n\t\t\t\t    \t\tthis.web3contracts[key].swap.methods.admin_actions_deadline().encodeABI(),\n\t\t\t\t    \t],\n\t\t\t\t    \t[\n\t\t\t\t    \t\tthis.web3contracts[key].swap._address,\n\t\t\t\t    \t\tthis.web3contracts[key].swap.methods.fee().encodeABI(),\n\t\t\t\t    \t],\n\t\t\t\t    \t[\n\t\t\t\t    \t\tthis.web3contracts[key].swap._address,\n\t\t\t\t    \t\tthis.web3contracts[key].swap.methods.admin_fee().encodeABI(),\n\t\t\t\t    \t],\n\t\t\t\t    \t[\n\t\t\t\t    \t\tthis.web3contracts[key].swap_token._address,\n\t\t\t\t    \t\tthis.web3contracts[key].swap_token.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI(),\n\t\t\t\t    \t],\n\t\t\t\t    \t[\n\t\t\t\t    \t\tthis.web3contracts[key].swap_token._address,\n\t\t\t\t    \t\tthis.web3contracts[key].swap_token.methods.totalSupply().encodeABI(),\n\t\t\t\t    \t],\n\t\t\t\t    )\n\t\t\t\t}\n\t\t\t\treturn calls;\n\t\t\t},\n\n\t\t\tasync update_fee_info(version = 'new') {\n\t\t\t    let calls = await this.update_rates();\n\t\t\t\tcalls.push([contracts.susdv2.sSwerveRewards_address, '0x70a08231000000000000000000000000' + (currentContract.default_account || '0x0000000000000000000000000000000000000000').slice(2)])\n\t\t\t\tcalls.push([contracts.sbtc.sSwerveRewards_address, '0x70a08231000000000000000000000000' + (currentContract.default_account || '0x0000000000000000000000000000000000000000').slice(2)])\n\t\t\t\tcalls.push([contracts.swusd.sSwerveRewards_address, '0x70a08231000000000000000000000000' + (currentContract.default_account || '0x0000000000000000000000000000000000000000').slice(2)])\n\t\t\t    let aggcalls = await clean_and_multi_call(calls);\n\t\t\t    let block = aggcalls[0]\n\t\t\t    let decoded = aggcalls[1].map(hex => currentContract.web3.eth.abi.decodeParameter('uint256', hex))\n\t\t\t    let swerveStakedBalance = decoded[decoded.length-3]\n\t\t\t    let sbtcSwerveStakedBalance = decoded[decoded.length-2]\n\t\t\t    let ySwerveStakedBalance = decoded[decoded.length-1]\n\t\t\t    console.log(ySwerveStakedBalance, \"Y SWERVE STAKED BALANCE\")\n\t\t\t    decoded = decoded.slice(0, decoded.length-1)\n\t\t\t    let i = 0;\n\t\t\t    this.bal_infos['usdt'] = []\n\t\t\t    this.l_infos['usdt'] = []\n\t\t\t\tfor(let [key, contract] of Object.entries(this.allContracts)) {\n\t\t\t\t\tthis.bal_infos[key] = []\n\t\t\t\t\tthis.l_infos[key] = []\n\t\t\t\t\tvar total = 0;\n\t\t\t\t\tlet ind = i*16;\n\t\t\t\t\tif(i > 1) ind-=5;\n\t\t\t\t\tif(key == 'compound') {\n\t\t\t\t\t    helpers.chunkArr(decoded.slice(ind, ind+8), 4).map((v, i) => {\n\t\t\t\t\t    \t// v is [rate, supply_rate, old_bloc, balance]\n\t\t\t\t    \t \tlet rate = +v[0] / 1e18 / contracts[key].coin_precisions[i]\n\t\t\t                let supply_rate = +v[1]\n\t\t\t                let old_block = +v[2]\n\t\t\t                let balance = +v[3]\n\t\t\t                let calcRate = rate * (1 + supply_rate * (block - old_block) / 1e18);\n\t\t\t\t\t        this.all_c_rates[key].c_rates[i] = calcRate;\n\t\t\t\t\t        this.all_c_rates['usdt'].c_rates[i] = calcRate;\n\t\t\t\t\t        let calcBalance = balance * this.all_c_rates[key].c_rates[i]\n\t\t\t\t\t        this.bal_infos[key].push(calcBalance)\n\t\t\t\t\t        total += calcBalance\n\t\t\t\t\t    })\n\t\t\t\t\t}\n\t\t\t\t    if(key == 'usdt') {\n\t\t\t\t    \tthis.bal_infos.usdt.push(this.all_c_rates['compound'].c_rates[0] * (+decoded[ind]))\n\t\t\t\t    \tthis.bal_infos.usdt.push(this.all_c_rates['compound'].c_rates[1] * (+decoded[ind+1]))\n\t\t\t\t    \tthis.all_c_rates[key].c_rates[2] = 1 / contracts[key].coin_precisions[2]\n\t\t\t\t    \tlet calcBalance = +decoded[ind+2] * this.all_c_rates[key].c_rates[2]\n\t\t\t\t    \tind-=5\n\t\t\t\t    \tthis.bal_infos[key].push(calcBalance)\n\t\t\t\t    \ttotal += this.bal_infos.usdt[0] + this.bal_infos.usdt[1] + calcBalance\n\t\t\t\t    }\n\t\t\t\t    if(key == 'swusd' || key == 'busd' || key == 'susd' || key == 'susdnew') {\n\t\t\t\t    \tlet slice = decoded.slice(ind, ind+contracts[key].N_COINS*2)\n\t\t\t\t    \thelpers.chunkArr(slice, 2).map((v, i) => {\n\t\t\t\t    \t\t//v is [rate, balance] or just [balance] for PAX in pax pool\n\t\t\t\t    \t\tif(v[1] === undefined) {\n\t\t\t\t    \t\t\tlet balance = +v[0]\n\t\t\t\t    \t\t\tlet calcBalance = this.all_c_rates[key].c_rates[i] * balance\n\t\t\t\t    \t\t\tthis.bal_infos[key].push(calcBalance)\n\t\t\t\t    \t\t\ttotal += calcBalance\n\t\t\t\t    \t\t}\n\t\t\t\t    \t\telse {\n\t\t\t\t\t    \t\tlet rate = +v[0] / 1e18 / contracts[key].coin_precisions[i]\n\t\t\t\t\t    \t\tif(key == 'susd' && i == 1) rate = +v[0] / 1e36\n\t\t\t\t\t    \t\tthis.all_c_rates[key].c_rates[i] = rate\n\t\t\t\t\t    \t\tlet balance = +v[1]\n\t\t\t\t\t    \t\tlet calcBalance = rate*balance\n\t\t\t\t\t    \t\tthis.bal_infos[key].push(calcBalance)\n\t\t\t\t\t    \t\ttotal += calcBalance\n\t\t\t\t    \t\t}\n\t\t\t\t    \t})\n\t\t\t\t    \tif(key == 'susd') ind -= 4\n\t\t\t\t    }\n\t\t\t\t\tif(key == 'susdv2') {\n\t\t\t\t\t\tlet N_COINS = contracts[key].N_COINS\n\t\t\t\t\t\tlet slice = decoded.slice(ind-N_COINS, ind)\n\t\t\t\t\t\tfor(let i = 0; i < 4; i++) {\n\t\t\t\t\t\t\tlet calcBalance = this.all_c_rates.susdv2.c_rates[i] * (slice[i])\n\t\t\t\t\t\t\tthis.bal_infos.susdv2.push(calcBalance)\n\t\t\t\t\t\t\ttotal += calcBalance\n\t\t\t\t\t\t}\n\t\t\t\t\t\tind-=N_COINS*2\n\t\t\t\t\t}\n\t\t\t\t\tif(key == 'pax') {\n\t\t\t\t\t\tlet slice = decoded.slice(ind-8, ind-1)\n\t\t\t\t\t\thelpers.chunkArr(slice, 2).map((v, i) => {\n\t\t\t\t    \t\t//v is [rate, balance] or just [balance] for PAX in pax pool\n\t\t\t\t    \t\tif(v[1] === undefined) {\n\t\t\t\t    \t\t\tlet balance = +v[0]\n\t\t\t\t    \t\t\tlet calcBalance = this.all_c_rates[key].c_rates[i] * balance\n\t\t\t\t    \t\t\tthis.bal_infos[key].push(calcBalance)\n\t\t\t\t    \t\t\ttotal += calcBalance\n\t\t\t\t    \t\t}\n\t\t\t\t    \t\telse {\n\t\t\t\t\t    \t\tlet rate = +v[0] / 1e18 / contracts[key].coin_precisions[i]\n\t\t\t\t\t    \t\tthis.all_c_rates[key].c_rates[i] = rate\n\t\t\t\t\t    \t\tlet balance = +v[1]\n\t\t\t\t\t    \t\tlet calcBalance = rate*balance\n\t\t\t\t\t    \t\tthis.bal_infos[key].push(calcBalance)\n\t\t\t\t\t    \t\ttotal += calcBalance\n\t\t\t\t    \t\t}\n\t\t\t\t    \t})\n\t\t\t\t    \tind -= 9;\n\t\t\t\t\t}\n\t\t\t\t\tif(['tbtc', 'ren'].includes(key)) {\n\t\t\t\t\t\tlet N_COINS = contracts[key].N_COINS\n\t\t\t\t\t\tlet start = 98\n\t\t\t\t\t\tlet slice = decoded.slice(start)\n\t\t\t\t\t\tfor(let i = 0; i < N_COINS; i++) {\n\t\t\t\t\t\t\tlet calcBalance = this.all_c_rates[key].c_rates[i] * (slice[i])\n\t\t\t\t\t\t\tthis.bal_infos[key].push(calcBalance)\n\t\t\t\t\t\t\ttotal += calcBalance\n\t\t\t\t\t\t}\n\t\t\t\t\t\tind = 92\n\t\t\t\t\t}\n\t\t\t\t\tif(key == 'sbtc') {\n\t\t\t\t\t\tlet N_COINS = contracts[key].N_COINS\n\t\t\t\t\t\tlet start = 108\n\t\t\t\t\t\tlet slice = decoded.slice(start)\n\t\t\t\t\t\tfor(let i = 0; i < N_COINS; i++) {\n\t\t\t\t\t\t\tlet calcBalance = this.all_c_rates[key].c_rates[i] * (slice[i])\n\t\t\t\t\t\t\tthis.bal_infos[key].push(calcBalance)\n\t\t\t\t\t\t\ttotal += calcBalance\n\t\t\t\t\t\t}\n\t\t\t\t\t\tind = 103\n\t\t\t\t\t}\n\t\t\t\t    this.totals.push(total)\n\t\t\t\t    this.virtual_prices.push(+decoded[ind+8] / 1e18)\n\t\t\t\t    this.As.push(+decoded[ind+9])\n\t\t\t\t    this.future_As.push(+decoded[ind+10])\n\t\t\t\t    this.admin_actions_deadlines.push(+decoded[ind+11])\n\n\n\t\t\t\t    //this.fees.push(+decoded[ind+12] / 1e8)\n\t\t\t\t\t//this.admin_fees.push(+decoded[ind+13] || 0)\n\t\t\t\t\t// not sure why indexes are off, these are correct for y pool\n\t\t\t\t    this.fees.push(+decoded[39] / 1e8);\n\t\t\t\t\tthis.admin_fees.push(+decoded[40]);\n\n\t\t    \t\tthis.totalTokenBalances.push(+decoded[ind+14])\n\t\t    \t\tthis.totalTokenSupplies.push(+decoded[ind+15])\n\t\t    \t\tvar totalShare = 0\n\t\t\t\t    for (let i=0; i < contracts[key].N_COINS; i++) {\n\t\t                var val = this.bal_infos[key][i] * (+decoded[ind+14]) / (+decoded[ind+15]);\n\t\t                this.l_infos[key].push(val)\n\t\t                totalShare += val;\n\t\t            }\n\t\t            this.usdShares.push(decoded[ind+14] * decoded[ind+8] / 1e36)\n\t            \tthis.totalShares.push(totalShare)\n\t            \tif(['susdv2', 'sbtc', 'y', 'swusd'].includes(key)) {\n\t            \t\tlet stakedBalance = swerveStakedBalance\n\t            \t\tif(key == 'sbtc') stakedBalance = sbtcSwerveStakedBalance\n\t            \t\tif(['y', 'swusd'].includes(key)) stakedBalance = ySwerveStakedBalance\n\t            \t\tthis.totalStakes[key] = 0\n\t            \t\tthis.staked_infos[key] = []\n\t            \t\tif(stakedBalance > 0) {\n\t            \t\t\tfor(let i=0; i < contracts[key].N_COINS; i++) {\n\t            \t\t\t\tvar val = this.bal_infos[key][i] * stakedBalance / (+decoded[ind+15]);\n\t            \t\t\t\tVue.set(this.staked_infos[key], i, val)\n\t            \t\t\t\tthis.totalStakes[key] += val\n\t            \t\t\t}\n\t            \t\t}\n\t            \t\tthis.usdStakes[key] = stakedBalance * decoded[ind+8] / 1e36\n\t            \t}\n\n\t            \ti++;\n\t\t\t\t}\n\t\t\t},\n\n\n\t\t}\n\t}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CombinedStats.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CombinedStats.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CombinedStats.vue?vue&type=template&id=55d7ea43&\"\nimport script from \"./CombinedStats.vue?vue&type=script&lang=js&\"\nexport * from \"./CombinedStats.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"window white\"},[_c('fieldset',[_c('legend',{staticStyle:{\"color\":\"#86fce7\",\"font-weight\":\"600\",\"margin-bottom\":\"1rem\",\"padding-top\":\".5rem\",\"text-align\":\"center\"}},[_vm._v(\"Pool deposits & daily volume\")]),_c('div',{class:{'loading line': !_vm.yPoolTvlUsd, 'text-center-stats': true},attrs:{\"id\":\"total-balances\"}},[_vm._v(\" TVL: \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.yPoolTvlUsd),expression:\"yPoolTvlUsd\"}]},[_vm._v(\"$\"+_vm._s(_vm.formatNumber(_vm.yPoolTvlUsd)))])]),_c('div',{class:{'loading line': _vm.volume < 0, 'text-center-stats': true}},[_vm._v(\" Daily volume: \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.volume >= 0),expression:\"volume >= 0\"}]},[_vm._v(\"$\"+_vm._s(_vm._f(\"formatNumber\")((_vm.volume | 0),0)))])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"window white\">\n        <fieldset>\n\t\t\t<legend style=\"color: #86fce7;font-weight:600;margin-bottom: 1rem; padding-top: .5rem;text-align:center;\">Pool deposits & daily volume</legend>\n\t\t\t\t<div :class=\"{'loading line': !yPoolTvlUsd, 'text-center-stats': true}\" id='total-balances'>\n\t\t\t\t\tTVL: <span v-show='yPoolTvlUsd'>${{formatNumber(yPoolTvlUsd)}}</span>\n\t\t\t\t</div>\n\t\t\t\t<div :class=\"{'loading line': volume < 0, 'text-center-stats': true}\" >\n\t\t\t\t\tDaily volume: <span v-show='volume >= 0'>${{(volume | 0) | formatNumber(0)}}</span>\n\t\t\t\t</div>\n        </fieldset>\n    </div>\n</template>\n\n<script>\n\timport Web3 from 'web3'\n\timport allabis, { infura_url, multicall_address, multicall_abi, ERC20_abi, yERC20_abi } from '../../allabis'\n\timport { chunkArr } from '../../utils/helpers'\n\timport BN from 'bignumber.js'\n\timport * as volumeStore from '@/components/common/volumeStore'\n    import { contract } from '../../contract'\n    import * as priceStore from '../common/priceStore'\n\timport { getYPoolTVL, getUserBoostValue } from '../../utils/common'\n\timport * as helpers from '../../utils/helpers'\n\t  \n\texport default {\n\t\tprops: {\n\t\t\ttotalVolume: {\n\t\t\t\tdefault: undefined,\n\t\t\t}\n\t\t},\n\t\tdata: () => ({\n\t\t\ttotal: '',\n\t\t\tyPoolTvl: null,\n\t\t\tboost: null,\n\t\t}),\n\t\tcomputed: {\n\t\t\tvolume() {\n\t\t\t\treturn this.totalVolume !== undefined ? this.totalVolume : volumeStore.totalVolume() \n\t\t\t},\n\t\t\tyPoolTvlUsd() {\n\t\t\t\treturn this.yPoolTvl;\n\t\t\t}\n\t\t},\n\t\tasync created() {\n\t\t\tawait volumeStore.getVolumes();\n\t\t\t// TOOD: issue with getting balances, need to make a different call\n\t\t\t// this.totalBalances()\n\t\t\tif(this.totalVolume === undefined || this.totalVolume < 0)\n\t\t\t\tthis.dailyVolume();\n\t\t\tif(this.yPoolTvl === null)\n\t\t\t\tthis.getYPoolNumbers();\n\n\t\t},\n\t\tmethods: {\n\t\t\tformatNumber(number, dec = 2) {\n        \t\treturn helpers.formatNumber(number, dec)\n      \t\t},\n\t\t\tasync getYPoolNumbers() {\n\t\t\t\tthis.yPoolTvl = await getYPoolTVL(allabis.swusd);\n\t\t\t\tconsole.log('yPoolTvl', this.yPoolTvl);\n\t\t\t},\n\t\t\tasync totalBalances() {\n\t\t\t\ttry {\n\t\t\t\t\tthis.total = 0;\n\t\t\t\t\tif(!priceStore.state.btcPrice) await priceStore.getBTCPrice()\n\t\t\t\t\tlet total = BN(0);\n\t\t\t\t\tlet tokenContracts = {}\n\t\t\t\t\tlet swapContracts = {}\n\t\t\t\t\tlet promises = []\n\t\t\t\t\tlet web3 = contract.web3 || new Web3(infura_url)\n\t\t\t\t\tlet multicall = new web3.eth.Contract(multicall_abi, multicall_address)\n\t\t\t\t\tlet calls = []\n\t\t\t\t\tlet pools = Object.assign({},allabis)\n\t\t\t\t\tdelete pools.susd\n\t\t\t\t\tdelete pools.tbtc\n\t\t\t\t\tdelete pools.swusd\n\t\t\t\t\tfor(let [key, contract] of Object.entries(pools)) {\n\t\t\t\t\t\tconsole.log(key, \"THE KEY\")\n\t\t\t\t\t\ttokenContracts[key] = new web3.eth.Contract(ERC20_abi, contract.token_address);\n\t\t\t\t\t\tswapContracts[key] = new web3.eth.Contract(contract.swap_abi, contract.swap_address);\n\t\t\t\t\t\tcalls.push([tokenContracts[key]._address, tokenContracts[key].methods.totalSupply().encodeABI()])\n\t\t\t\t\t\tcalls.push([swapContracts[key]._address, swapContracts[key].methods.get_virtual_price().encodeABI()])\n\t\t\t\t\t}\n\t\t\t\t\tlet susd_swap_token = new web3.eth.Contract(ERC20_abi, allabis.susd.token_address)\n\t\t\t\t\tlet susd_swap = new web3.eth.Contract(allabis.susd.swap_abi, allabis.susd.swap_address)\n\t\t\t\t\tlet ySUSD = new web3.eth.Contract(yERC20_abi, allabis.susd.coins[0])\n\t\t\t\t\tcalls.push(\n\t\t\t\t\t\t[ySUSD._address, ySUSD.methods.getPricePerFullShare().encodeABI()],\n\t\t\t\t\t\t[susd_swap._address, susd_swap.methods.balances(0).encodeABI()]\n\t\t\t\t\t)\n\t\t\t\t\tlet aggcalls = await multicall.methods.aggregate(calls).call()\n\t\t\t\t\tlet decoded = aggcalls[1].map(hex => web3.eth.abi.decodeParameter('uint256', hex))\n\t\t\t\t\tchunkArr(decoded, 2).map((v, i, arr) => {\n\t\t\t\t\t\tlet balance = BN(v[0]).times(BN(v[1])).div(1e36)\n\n\t\t\t\t\t\t//renBTC\n\t\t\t\t\t\tif([6,7].includes(i)) balance = balance.times(BN(priceStore.state.btcPrice))\n\t\t\t\t\t\ttotal = total.plus(balance)\n\t\t\t\t\t})\n\t\t\t\t\tthis.total = total.toFixed(0);\n\t\t\t\t} catch(e) {\n\t\t\t\t\tconsole.log('total balances issue');\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync dailyVolume() {\n\t\t\t\tvar pools = ['compound', 'usdt', 'swusd', 'busd', 'susd', 'pax', 'tbtc', 'ren', 'sbtc']\n\t\t\t\tawait volumeStore.getVolumes(pools);\n\t\t\t}\n\t\t}\n\n\t}\n</script>\n\n<style scoped>\n\tfieldset div {\n\t\tdisplay: block;\n\t}\n\tfieldset div:nth-of-type(2) {\n\t\tmargin-top: 1em;\n\t}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TotalBalances.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TotalBalances.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TotalBalances.vue?vue&type=template&id=0a8cd102&scoped=true&\"\nimport script from \"./TotalBalances.vue?vue&type=script&lang=js&\"\nexport * from \"./TotalBalances.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TotalBalances.vue?vue&type=style&index=0&id=0a8cd102&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0a8cd102\",\n  null\n  \n)\n\nexport default component.exports","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"8a453fc57b81816d40a9.worker.js\");\n};","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BalancesInfo.vue?vue&type=style&index=0&id=e54e9a70&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BalancesInfo.vue?vue&type=style&index=0&id=e54e9a70&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('fieldset',[_vm._m(0),_c('highcharts',{ref:\"highcharts\",attrs:{\"constructor-type\":'stockChart',\"options\":_vm.chartdata}}),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.volume && _vm.volume[0] != -1),expression:\"volume && volume[0] != -1\"}]},[_c('span',[_vm._v(\"Daily USD trading volume:\")]),_c('span',{class:{'loading line': !_vm.volume}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.volume && _vm.volume[0] != -1),expression:\"volume && volume[0] != -1\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"formatNumber\")((_vm.volume && _vm.volume[0] || 0),0))+\"$\")])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(['tbtc', 'ren', 'sbtc'].includes(_vm.pool)),expression:\"['tbtc', 'ren', 'sbtc'].includes(pool)\"}]},[_c('span',[_vm._v(\"Daily ₿ trading volume:\")]),_c('span',[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.volume && _vm.volume[1] != -1),expression:\"volume && volume[1] != -1\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"formatNumber\")((_vm.volume && _vm.volume[1] || 0),8))+\" ₿ \")])])]),_c('p')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('legend',[_vm._v(\"Daily APY % \"),_c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?]\"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\"Pool APY % + Lending APY % (on annual basis)\")])])])}]\n\nexport { render, staticRenderFns }","<template>\n\t<fieldset>\n\t\t<legend>Daily APY % <span class='tooltip'>[?]<span class='tooltiptext long'>Pool APY % + Lending APY % (on annual basis)</span></span></legend>\n\t\t<highcharts :constructor-type=\"'stockChart'\" :options=\"chartdata\" ref='highcharts'></highcharts>\n    \t<p v-show='volume && volume[0] != -1'>\n    \t\t<span>Daily USD trading volume:</span>\n    \t\t<span :class=\"{'loading line': !volume}\">\n    \t\t\t<span v-show='volume && volume[0] != -1'> {{ (volume && volume[0] || 0) | formatNumber(0) }}$</span>\n    \t\t</span>\n    \t\t<div v-show=\"['tbtc', 'ren', 'sbtc'].includes(pool)\">\n\t    \t\t<span>Daily ₿ trading volume:</span>\n\t    \t\t<span>\n\t    \t\t\t<span v-show='volume && volume[1] != -1'> {{ (volume && volume[1] || 0) | formatNumber(8) }} ₿ </span>\n\t    \t\t</span>\n    \t\t</div>\n    \t</p>\n\t</fieldset>\n</template>\n\n<script>\n\timport Web3 from 'web3'\n\timport Highcharts from 'highcharts'\n\timport HC_exporting from 'highcharts/modules/exporting';\n\timport HC_exporting_data from 'highcharts/modules/export-data';\n\tHC_exporting(Highcharts);\n\tHC_exporting_data(Highcharts)\n\n\timport {Chart} from 'highcharts-vue'\n\timport stockInit from 'highcharts/modules/stock'\n\n  import * as helpers from '../../utils/helpers'\n\timport abis, { multicall_abi, multicall_address, infura_url } from '@/allabis'\n\timport * as volumeStore from '@/components/common/volumeStore'\n\n\tstockInit(Highcharts)\n\n\tHighcharts.setOptions({\n\t\tlang: {\n\t\t\tloading: '',\n\t\t}\n\t})\n\n\tlet web3 = new Web3(infura_url)\n\n\texport default {\n\t\tprops: {\n\t\t\tdata: Array,\n\t\t\tvolume: {\n\t\t\t\ttype: Array,\n\t\t\t},\n\t\t\tpool: String,\n\t\t},\n\t\tcomponents: {\n\t\t\thighcharts: Chart,\n\t\t},\n\t\tdata(){\n\t\t\treturn {\n\t\t\tchartdata: {\n\t\t\t\tchart: {\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t        panKey: 'ctrl',\n\t\t\t        height: 600,\n\t\t\t\t},\n                rangeSelector: {\n\t\t            selected: 1\n\t\t        },\n\t\t        exporting: {\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tcontextButton: {\n\t\t\t\t\t\t\tmenuItems: [\"printChart\",\n\t\t\t\t\t                    \"separator\",\n\t\t\t\t\t                    \"downloadPNG\",\n\t\t\t\t\t                    \"downloadJPEG\",\n\t\t\t\t\t                    \"downloadPDF\",\n\t\t\t\t\t                    \"downloadSVG\",\n\t\t\t\t\t                    \"separator\",\n\t\t\t\t\t                    \"downloadCSV\",\n\t\t\t\t\t                    \"downloadXLS\",\n\t\t\t\t\t                    //\"viewData\",\n\t\t\t\t\t                    \"openInCloud\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t            yAxis: [\n\t\t            {\n\t\t            \tid: 'apyAxis',\n\t\t            \topposite: false,\n\t\t            \ttype: 'logarithmic',\n\t\t            \tmin: 0.1,\n\t        \t\t\ttitle: {\n\t        \t\t\t\ttext: 'Daily APY [%]',\n\t        \t\t\t\tstyle: {\n\t        \t\t\t\t\tcolor: 'black'\n\t        \t\t\t\t},\n\t        \t\t\t\tmargin: 10,\n\t        \t\t\t},\n\t\t            \tlabels: {\n\t\t            \t\talign: 'right',\n\t\t            \t\tx: -30,\n\t\t            \t\tformatter() {\n\t\t            \t\t\treturn (Math.floor(this.value * 100) / 100).toFixed(2);\n\t\t            \t\t},\n\t\t\t            \tstyle: {\n\t\t\t            \t\tcolor: 'black'\n\t\t\t            \t},\n\t\t            \t},\n\t\t            \ttickPixelInterval: 10,\n\t\t            \theight: '60%',\n\t\t            },\n\t\t            {\n\t\t            \tid: 'volumeAxis',\n\t\t            \t//type: 'logarithmic',\n\t\t            \topposite: false,\n\t\t            \ttitle: {\n\t\t            \t\ttext: 'Trading Volume',\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black'\n\t\t            \t\t},\n\t\t            \t\tmargin: 10,\n\t\t            \t},\n\t\t            \tlabels: {\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black',\n\t\t            \t\t},\n\t\t            \t\talign: 'right',\n\t\t            \t\tx: -30,\n\t\t            \t},\n\t\t            \ttop: '65%',\n\t\t            \theight: '35%',\n\t\t\t            offset: 0,\n\t\t            }\n\t            ],\n\t            xAxis: {\n\t            \tlabels: {\n\t\t            \tstyle: {\n\t\t            \t\tcolor: 'black'\n\t\t            \t}\n\t            \t}\n\t            },\n\t\t        series: [/*{\n\t\t        \tname: 'Daily APY',\n\t\t        \tlineWidth: 2,\n\t\t        \tdata: [],\n\t\t        \tcolor: '#0b0a57'\n\t\t        }*/],\n\t\t        tooltip: {\n\t\t        \tsplit: true,\n\t                valueDecimals: 3,\n\t                pointFormatter: (function(self) {\n\t                \treturn function() {\n\t                \t\tlet value = Math.floor(this.y * 100) / 100 + '%';\n\t\t                \tif(this.series.name == 'Daily APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n\t                \t\tif(this.series.name == 'SNX APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n                \t\t\tif(this.series.name == 'SNX+REN APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n                \t\t\tif(this.series.name == 'YFI APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n                \t\t\tif(this.series.name == 'Total APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n\t\t                \tif(this.series.name == 'Lending APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n\t\t                \tif(this.series.name === 'Trading Volume') {\n\t\t                \t\tlet val = this.y.toFixed(2)\n\t\t                \t\tif(['tbtc', 'ren', 'sbtc'].includes(self.pool)) val = this.y.toFixed(8)\n\t\t                \t\treturn `<span style=\"color:${this.color}\">●</span> ${this.series.name} : <b>${val}</b><br/>`\n\t\t                \t}\n\t\t                }\n\t\t        \t})(this),\n\t            },\n\t            legend: {\n\t            \tenabled: true,\n\t            },\n\t\t\t},\n\t\t\tchart: null,\n\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tvolumeData() {\n\t\t\t\tif(['tbtc', 'ren', 'sbtc'].includes(this.pool)) return helpers.formatNumber(this.volume, 8)\n\t\t\t\treturn helpers.formatNumber(this.volume, 0)\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\t'data.length'(val) {\n\t\t\t\tthis.mounted()\n\t\t\t}\n\t\t},\n\t\tmounted() {\n\t\t\tthis.chart = this.$refs.highcharts.chart;\n\t        this.chart.showLoading();\n\t\t},\n\t\tmethods: {\n\t\t\tloaded() {\n\t\t\t\tthis.loading = false;\n\t\t\t},\n\t\t\tfindClosestPrice(timestamp, data) {\n\t\t\t\tlet price = data.find(([time, price]) => time / 1000 > timestamp)\n\t\t\t\tif(price === undefined) return data[data.length-1][1]\n\t\t\t\treturn price[1]\n\t\t\t},\n\t\t\tasync mounted() {\n\t\t\t\twhile(this.chart.series.length) {\n\t\t\t\t\tthis.chart.series[0].remove()\n\t\t\t\t}\n\t\t        let chartData = [];\n\t\t        for(let i = 1; i < this.data.length; i++) {\n\t\t        \tvar el = this.data[i];\n\t\t        \tlet daylen = el.timestamp - this.data[i-1].timestamp\n\t\t        \tlet profit = ((el.virtual_price / 1e18) / (this.data[i-1].virtual_price / 1e18)) ** (365 * 86400 / daylen) - 1\n\t\t        \tchartData.push([\n\t\t        \t\tel.timestamp * 1000,\n\t\t        \t\tprofit * 100,\n\t\t        \t])\n\t\t        }\n\n\n\t\t        this.chart.addSeries({\n\t\t        \tname: 'Daily APY',\n\t\t        \tlineWidth: 2,\n\t\t        \tdata: chartData,\n\t\t        \tcolor: '#0b0a57'\n\t\t        }, false, false)\n\t\t        if(this.pool == 'susdv2') {\n\t\t        \tlet startTime = this.data[0].timestamp\n\t\t        \tlet endTime = this.data[this.data.length - 1].timestamp\n\t\t        \tlet SNXprices = await fetch(`https://api.coingecko.com/api/v3/coins/havven/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`)\n\t\t        \tSNXprices = (await SNXprices.json()).prices\n\n\t\t        \tlet curveRewards = new web3.eth.Contract(abis.susdv2.sCurveRewards_abi, abis.susdv2.sCurveRewards_address)\n\t\t        \tlet multicall = new web3.eth.Contract(multicall_abi, multicall_address)\n\n\t\t        \tlet calls = [\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.DURATION().encodeABI()],\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.rewardRate().encodeABI()],\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.periodFinish().encodeABI()],\n\t\t\t\t\t]\n\n\t\t\t\t\tlet aggcalls = await multicall.methods.aggregate(calls).call()\n\t\t\t\t\tlet decoded = aggcalls[1].map(hex => web3.eth.abi.decodeParameter('uint256', hex))\n\n\t\t        \tlet SNXapys = []\n\t\t        \tfor(let i = 1; i < this.data.length; i++) {\n\t\t        \t\tlet timestamp = this.data[i].timestamp\n\t\t        \t\tlet total_supply = this.data[i].supply\n\t\t        \t\tlet virtual_price = this.data[i].virtual_price\n\t\t        \t\tlet SNXprice = this.findClosestPrice(this.data[i].timestamp, SNXprices)\n\t\t        \t\tlet reward = 64000\n\t\t        \t\tif(timestamp > 1590705735 && timestamp < 1594256015) reward = 48000\n\t\t        \t\tif(timestamp > 1594256015) reward = decoded[0] * decoded[1] / 1e18\n\t\t        \t\tif(+decoded[2] < timestamp)\n\t\t        \t\t\treward = 0.000001\n\t\t        \t\tlet SNXapy = 356 * reward / 7 * SNXprice / (0.98 * total_supply * virtual_price / 1e36) * 100\n\t\t        \t\tSNXapys.push([timestamp * 1000, SNXapy])\n\t\t        \t}\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'SNX APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: SNXapys,\n\t\t        \t\tcolor: '#f45b5b',\n\t\t        \t})\n\n\t\t        \tlet totalAPYs = chartData.map(([timestamp, apy], i) => [timestamp, apy + SNXapys[i][1]])\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'Total APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: totalAPYs,\n\t\t        \t\tcolor: '#8085e9',\n\t\t        \t})\n\t\t    \t}\n\n\t\t    \tlet now = Date.now() / 1000\n\n\t\t    \tif(this.pool == 'sbtc') {\n\t\t        \tlet startTime = this.data[0].timestamp\n\t\t        \tlet endTime = this.data[this.data.length - 1].timestamp\n\t\t        \tlet pricereqs = await Promise.all([\n\t\t        \t\tfetch(`https://api.coingecko.com/api/v3/coins/havven/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`),\n\t\t        \t\tfetch(`https://api.coingecko.com/api/v3/coins/republic-protocol/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`),\n\t\t        \t\tfetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd'),\n\t\t        \t\t])\n\t\t        \tlet prices = await Promise.all(pricereqs.map(req => req.json()))\n\t\t        \tconsole.log(prices, \"PRICES\")\n\t\t        \tlet SNXprices = prices[0].prices\n\t\t        \tlet RENprices = prices[1].prices\n\t\t        \tlet btcPrice = prices[2].bitcoin.usd\n\n\t\t        \tlet curveRewards = new web3.eth.Contract(abis.sbtc.sCurveRewards_abi, abis.sbtc.sCurveRewards_address)\n\t\t        \tlet sbtcPeriodFinish = await curveRewards.methods.periodFinish().call()\n\n\t\t        \tlet SNXapys = []\n\t\t        \tfor(let i = 1; i < this.data.length; i++) {\n\t\t        \t\tlet timestamp = this.data[i].timestamp\n\t\t        \t\tlet total_supply = this.data[i].supply\n\t\t        \t\tlet virtual_price = this.data[i].virtual_price\n\t\t        \t\tlet SNXprice = this.findClosestPrice(this.data[i].timestamp, SNXprices)\n\t\t        \t\tlet RENprice = this.findClosestPrice(this.data[i].timestamp, RENprices)\n\t\t        \t\tlet SNXreward = 10000\n\t\t        \t\tlet RENreward = 25000\n\t\t        \t\tif(+sbtcPeriodFinish < timestamp) {\n\t\t        \t\t\tSNXreward = 0.000001\n\t\t        \t\t\tRENreward = 0.000001\n\t\t        \t\t}\n\t\t        \t\tlet SNXapy = 356 * (SNXreward * SNXprice + RENreward * RENprice) / 7  / (0.98 * btcPrice * total_supply * virtual_price / 1e36) * 100\n\t\t        \t\tSNXapys.push([timestamp * 1000, SNXapy])\n\t\t        \t}\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'SNX+REN APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: SNXapys,\n\t\t        \t\tcolor: '#f45b5b',\n\t\t        \t})\n\n\t\t        \tlet totalAPYs = chartData.map(([timestamp, apy], i) => [timestamp, apy + SNXapys[i][1]])\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'Total APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: totalAPYs,\n\t\t        \t\tcolor: '#8085e9',\n\t\t        \t})\n\t\t    \t}\n\n\t\t    \tif(['y', 'swusd'].includes(this.pool)) {\n\t\t    \t\t//YFI token deployed\n\t\t        \tlet startTime = 1594972885\n\t\t        \tlet endTime = this.data[this.data.length - 1].timestamp\n\t\t        \tlet SNXprices = await fetch(`https://api.coingecko.com/api/v3/coins/yearn-finance/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`)\n\t\t        \tconsole.log(`https://api.coingecko.com/api/v3/coins/yearn-finance/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`)\n\t\t        \tSNXprices = (await SNXprices.json()).prices\n\t\t        \tlet curveRewards = new web3.eth.Contract(abis.swusd.sCurveRewards_abi, abis.swusd.sCurveRewards_address)\n\t\t        \tlet multicall = new web3.eth.Contract(multicall_abi, multicall_address)\n\n\t\t        \tlet calls = [\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.DURATION().encodeABI()],\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.rewardRate().encodeABI()],\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.periodFinish().encodeABI()],\n\t\t\t\t\t]\n\n\t\t\t\t\tlet aggcalls = await multicall.methods.aggregate(calls).call()\n\t\t\t\t\tlet decoded = aggcalls[1].map(hex => web3.eth.abi.decodeParameter('uint256', hex))\n\n\t\t        \tlet SNXapys = []\n\t\t        \tfor(let i = 1; i < this.data.length; i++) {\n\t\t        \t\tlet timestamp = this.data[i].timestamp\n\t\t        \t\tlet total_supply = this.data[i].supply\n\t\t        \t\tlet virtual_price = this.data[i].virtual_price\n\t\t        \t\tconsole.log(SNXprices, \"SNX PRICES\")\n\t\t        \t\tlet SNXprice = this.findClosestPrice(this.data[i].timestamp, SNXprices)\n\t\t        \t\tlet reward = decoded[0] * decoded[1] / 1e18\n\t\t        \t\tif(+decoded[2] < timestamp)\n\t\t        \t\t\treward = 0.000001\n\t\t        \t\t//before YFI\n\t\t        \t\tif(timestamp < 1594972885) reward = 0\n\t\t        \t\tlet SNXapy = 356 * reward / 7 * SNXprice / (0.98 * total_supply * virtual_price / 1e36) * 100\n\t\t        \t\tSNXapys.push([timestamp * 1000, SNXapy])\n\t\t        \t}\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'YFI APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: SNXapys,\n\t\t        \t\tcolor: '#f45b5b',\n\t\t        \t})\n\n\t\t        \tlet totalAPYs = chartData.map(([timestamp, apy], i) => [timestamp, apy + SNXapys[i][1]])\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'Total APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: totalAPYs,\n\t\t        \t\tcolor: '#8085e9',\n\t\t        \t})\n\t\t    \t}\n\n\n\n\t\t        if(['susd'].includes(this.pool)) {\n\t\t        \tthis.chart.yAxis[0].update({\n\t\t        \t\ttype: 'linear'\n\t\t        \t})\n\t\t        }\n\n\t\t        await volumeStore.getDailyVolume(this.pool, false, 1440)\n\n\t\t        let volumeSeries = volumeStore.state.allVolume[this.pool == 'susdv2' ? 'susd' : this.pool]\n\n\t\t        this.chart.addSeries({\n\t\t        \ttype: 'column',\n\t\t        \tname: 'Trading Volume',\n\t\t        \tdata: volumeSeries,\n\t\t        \tcolor: '#0b0a57',\n\t\t        \tyAxis: 'volumeAxis',\n\t\t        }, false, false)\n\n\t\t        this.chart.redraw(false)\n\n\t\t        let lendingrates;\n\t\t        let lendingAxis = 'apyAxis'\n\t\t        if(!['susdv2', 'tbtc', 'ren', 'sbtc'].includes(this.pool))\n\t    \t\t\tlendingrates = await volumeStore.getLendingAPY(this.pool, false, 1440)\n\t\t        else {\n\t\t        \tlendingrates = volumeSeries.map(data => [data[0], 0])\n\t\t        \tlendingAxis = 'lendingAxis'\n\t\t        \tthis.chart.addAxis({\n\t\t            \tid: 'lendingAxis',\n\t\t            \topposite: false,\n\t\t            \ttype: 'linear',\n\t\t            \ttitle: {\n\t\t            \t\ttext: 'Lending rates',\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black'\n\t\t            \t\t},\n\t\t            \t},\n\t\t            \tlabels: {\n\t\t            \t\tx: 40,\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black',\n\t\t            \t\t},\n\t\t            \t},\n\t\t            \ttickPixelInterval: 10,\n\t\t            \ttop: '65%',\n\t\t            \theight: '5%',\n\t\t            })\n\t\t            this.chart.yAxis[1].update({\n\t\t            \ttop: '70%',\n\t\t            \theight: '30%',\n\t\t            })\n\n\t\t        }\n\n\n\t    \t\tthis.chart.addSeries({\n\t    \t\t\tname: 'Lending APY',\n\t    \t\t\tdata: lendingrates,\n\t    \t\t\tyAxis: lendingAxis,\n\t    \t\t\tcolor: '#7bb5ec',\n\t    \t\t})\n\n\t\t        if(!['susdv2', 'tbtc', 'ren', 'sbtc', 'y', 'swusd'].includes(this.pool)) {\n\t\t        \tlet totalAPYs = chartData.map(([timestamp, apy], i) => [timestamp, apy + lendingrates[i][1]])\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'Total APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: totalAPYs,\n\t\t        \t\tcolor: '#8085e9',\n\t\t        \t})\n\t\t        }\n\n\t\t        this.chart.redraw();\n\t\t        this.chart.hideLoading();\n\n\t\t        this.loading = false;\n\t\t\t},\n\t\t}\n\t}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DailyAPYChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DailyAPYChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DailyAPYChart.vue?vue&type=template&id=7caa6678&\"\nimport script from \"./DailyAPYChart.vue?vue&type=script&lang=js&\"\nexport * from \"./DailyAPYChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"blue window half-width info\"},[_c('fieldset',{attrs:{\"id\":\"lp-info-currency\"}},[_c('legend',[_vm._v(\"Currency reserves\")]),_c('ul',{attrs:{\"id\":\"balances-info\"}},[_vm._l((Object.keys(_vm.currencies)),function(currency,i){return _c('li',[_c('b',[_vm._v(_vm._s(_vm._f(\"capitalize\")(currency))+\":\")]),_c('span',{class:{'loading line': !_vm.bal_info || _vm.bal_info[i] === null}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.bal_info && _vm.bal_info[i]),expression:\"bal_info && bal_info[i]\"}]},[_vm._v(\" \"+_vm._s(_vm.bal_info && _vm.toFixed(_vm.bal_info[i]))+\" (\"+_vm._s(_vm._f(\"toFixed2\")(((_vm.bal_info && _vm.bal_info[i] * 100) / _vm.totalBalances)))+\"%) \")])])])}),_c('li',[_c('b',[_vm._v(_vm._s(_vm.totalCurrencies(_vm.currencies))+\":\")]),_c('span',{class:{'loading line': _vm.totalBalances === null}},[_vm._v(\" \"+_vm._s(_vm.toFixed(_vm.totalBalances)))])])],2),_c('p',[_c('ul',[_c('li',[_c('b',[_vm._v(\"Daily USD Vol:\")]),_c('span',{class:{'loading line': _vm.dailyVolumeInUsd === null}},[_vm._v(\" $\"+_vm._s(_vm._f(\"formatNumber\")(_vm.dailyVolumeInUsd))+\" \")])])]),_c('ul',[_c('li',[_c('b',[_vm._v(\"Fee:\")]),_c('span',{class:{'loading line': !_vm.fee},attrs:{\"id\":\"fee-info\"}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.fee),expression:\"fee\"}]},[_vm._v(\" \"+_vm._s(_vm.fee && _vm.fee.toFixed(3))+\"%\")])]),_c('li',[_c('b',[_vm._v(\"Admin fee:\")]),_c('span',{class:{'loading line': _vm.admin_fee},attrs:{\"id\":\"admin-fee-info\"}},[_vm._v(\" \"+_vm._s(_vm.admin_fee && _vm.admin_fee.toFixed(3)))]),_vm._v(\"% \")])])]),_c('ul',[_c('li',[_c('b',[_vm._v(\" Virtual price: \")]),_c('span',{class:{'loading line': _vm.virtualPrice1 === null}},[_c('span',{staticClass:\"tooltip\"},[_vm._v(\" \"+_vm._s((_vm.virtualPrice1).toFixed(4))+\" \"),_c('span',{staticClass:\"tooltiptext\"},[_vm._v(\" \"+_vm._s(_vm.virtualPrice1)+\" \")])])]),_vm._v(\" \"),_c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?] \"),_c('span',{staticClass:\"tooltiptext\"},[_vm._v(\" Average dollar value of pool token \"+_vm._s((_vm.usdShare1 + _vm.usdStake1).toFixed(2))+\" \")])])]),_c('li',[_vm._m(0),_c('span',{class:{'loading line': _vm.A1 === null}},[_vm._v(\" \"+_vm._s(_vm.A1)+\" \")])]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isRampingUp),expression:\"isRampingUp\"}]},[_vm._m(1),_c('span',[_vm._v(\" \"+_vm._s(_vm.initial_A)+\" -> \"+_vm._s(_vm.future_A)+\" \")])]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isRampingUp),expression:\"isRampingUp\"}]},[_c('b',[_vm._v(\"Ramp up A ends on:\")]),_c('span',[_vm._v(\" \"+_vm._s(_vm.rampEnd))])]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.admin_actions_deadline1 !== null && _vm.admin_actions_deadline1 !== 0),expression:\"admin_actions_deadline1 !== null && admin_actions_deadline1 !== 0\"}]},[_c('b',[_vm._v(\"Future A: \")]),_c('span',{class:{'loading line': _vm.future_A1 === null}},[_vm._v(\" \"+_vm._s(_vm.future_A1)+\" \")])]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.admin_actions_deadline1 !== null && _vm.admin_actions_deadline1 !== 0),expression:\"admin_actions_deadline1 !== null && admin_actions_deadline1 !== 0\"}]},[_c('b',[_vm._v(\"Action deadline: \")]),_c('div',{class:{'loading line': _vm.admin_actions_deadline1 === null}},[_vm._v(\" \"+_vm._s(_vm.admin_actions_readable)+\" GMT \"),_vm._m(2)])])])]),_c('fieldset',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.totalShare > 0 && _vm.initializedContracts),expression:\"totalShare > 0 && initializedContracts\"}],attrs:{\"id\":\"lp-info-container\"}},[_c('legend',[_vm._v(\"My share: ( \"+_vm._s((_vm.totalBalance / _vm.totalSupply * 100).toFixed(3))+\"% of pool)\")]),_c('ul',{attrs:{\"id\":\"lp-info\"}},[_vm._l((Object.keys(_vm.currencies)),function(currency,i){return _c('li',[_c('b',[_vm._v(_vm._s(_vm._f(\"capitalize\")(currency))+\":\")]),_c('span',[_vm._v(\" \"+_vm._s(_vm.l_info && _vm.toFixed(_vm.l_info[i])))])])}),_c('li',[_c('b',[_vm._v(_vm._s(_vm.totalCurrencies(_vm.currencies))+\":\")]),_c('span',{class:{'loading line': _vm.totalUserBalances === null}},[_vm._v(\" \"+_vm._s(_vm.toFixed(_vm.totalUserBalances)))])]),_c('li',[_c('b',[_vm._v(\"USD balance:\")]),_c('span',[_c('span',{class:{'loading line': _vm.usdShare1 === null}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.usdShare1 !== null),expression:\"usdShare1 !== null\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"formatNumber\")(_vm._f(\"toFixed2\")(_vm.usdShare1)))+\" \")])])])])],2)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b',{staticClass:\"tooltip\"},[_vm._v(\" A: \"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\" Amplification coefficient chosen from fluctation of prices around 1 \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b',[_vm._v(\" Ramping up A: \"),_c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?] \"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\"Slowly changing up A so that it doesn't negatively change virtual price growth of shares\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"tooltip\"},[_vm._v(\" [?] \"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\" This is when the proposed future A can be enacted and changed. It also may not be changed. \")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"blue window half-width info\">\n    <fieldset id=\"lp-info-currency\">\n      <legend>Currency reserves</legend>\n      <ul id='balances-info'>\n          <li v-for='(currency, i) in Object.keys(currencies)'>\n            <b>{{currency | capitalize}}:</b>\n            <span :class=\"{'loading line': !bal_info || bal_info[i] === null}\">\n              <span v-show='bal_info && bal_info[i]'>\n                {{bal_info && toFixed(bal_info[i]) }} ({{((bal_info && bal_info[i] * 100) / totalBalances) | toFixed2}}%)\n              </span>\n            </span>\n          </li>\n          <li>\n            <b>{{totalCurrencies(currencies)}}:</b>\n            <span :class=\"{'loading line': totalBalances === null}\"> {{toFixed(totalBalances)}}</span>\n          </li>\n      </ul>\n      <p>\n        <ul>\n          <li>\n            <b>Daily USD Vol:</b>\n            <span :class=\"{'loading line': dailyVolumeInUsd === null}\"> ${{dailyVolumeInUsd | formatNumber}} </span>\n          </li>\n        </ul>\n        <ul>\n          <li>\n            <b>Fee:</b>\n            <span id='fee-info' :class=\"{'loading line': !fee}\">\n            </span>\n            <span v-show = 'fee'> {{fee && fee.toFixed(3)}}%</span>\n          </span>\n          <li>\n            <b>Admin fee:</b>\n            <span id='admin-fee-info' :class=\"{'loading line': admin_fee}\"> {{admin_fee && admin_fee.toFixed(3)}}</span>%\n          </li>\n        </ul>\n      </p>\n      <ul>\n        <li>\n          <b>\n            Virtual price:\n          </b>\n          <span :class=\"{'loading line': virtualPrice1 === null}\">\n            <span class='tooltip'>\n              {{ (virtualPrice1).toFixed(4) }}\n              <span class='tooltiptext'>\n                {{ virtualPrice1 }}\n              </span>\n            </span>\n          </span>\n          &nbsp;\n          <span class='tooltip'>[?]\n            <span class='tooltiptext'>\n              Average dollar value of pool token {{(usdShare1 + usdStake1).toFixed(2)}}\n            </span>\n          </span>\n        </li>\n        <li>\n          <b class='tooltip'>\n            A:\n            <span class='tooltiptext long'>\n              Amplification coefficient chosen from fluctation of prices around 1\n            </span>\n          </b>\n          <span :class=\"{'loading line': A1 === null}\"> {{ A1 }} </span>\n        </li>\n        <li v-show='isRampingUp'>\n          <b>\n           Ramping up A:\n            <span class='tooltip'>[?]\n              <span class='tooltiptext long'>Slowly changing up A so that it doesn't negatively change virtual price growth of shares</span>\n            </span>\n          </b>\n          <span> {{ initial_A }} -> {{ future_A }} </span>\n        </li>\n        <li v-show='isRampingUp'>\n          <b>Ramp up A ends on:</b>\n          <span> {{ rampEnd }}</span>\n        </li>\n        <li v-show = 'admin_actions_deadline1 !== null && admin_actions_deadline1 !== 0'>\n          <b>Future A: </b>\n          <span :class=\"{'loading line': future_A1 === null}\"> {{ future_A1 }} </span>\n        </li>\n        <li v-show = 'admin_actions_deadline1 !== null && admin_actions_deadline1 !== 0'>\n          <b>Action deadline: </b>\n          <div :class=\"{'loading line': admin_actions_deadline1 === null}\">\n            {{ admin_actions_readable }} GMT\n            <span class='tooltip'> [?]\n              <span class='tooltiptext long'>\n                This is when the proposed future A can be enacted and changed.\n                It also may not be changed.\n              </span>\n            </span>\n          </div>\n        </li>\n      </ul>\n    </fieldset>\n\n    <fieldset id=\"lp-info-container\" v-show='totalShare > 0 && initializedContracts'>\n      <legend>My share: ( {{(totalBalance / totalSupply * 100).toFixed(3)}}% of pool)</legend>\n      <ul id='lp-info'>\n          <li v-for='(currency, i) in Object.keys(currencies)'>\n            <b>{{currency | capitalize}}:</b>\n            <span> {{l_info && toFixed(l_info[i])}}</span></li>\n          <li>\n            <b>{{totalCurrencies(currencies)}}:</b>\n            <span :class=\"{'loading line': totalUserBalances === null}\"> {{toFixed(totalUserBalances)}}</span>\n          </li>\n          <li>\n            <b>USD balance:</b>\n\n            <span>\n               <span :class=\"{'loading line': usdShare1 === null}\">\n                <span v-show=\"usdShare1 !== null\">\n                  {{usdShare1 | toFixed2 | formatNumber}}\n                </span>\n              </span>\n            </span>\n          </li>\n          <!--\n          <li>\n            <b>Averaged USD balance:</b> {{ usdShare1 | formatNumber(2) }}\n          </li>\n          -->\n      </ul>\n    </fieldset>\n\n  </div>\n</template>\n\n<script>\n  import Vue from 'vue'\n  import { getters, contract as currentContract } from '../contract'\n  import allabis from '../allabis'\n  import * as helpers from '../utils/helpers';\n  import * as common from '../utils/common';\n  import * as volumeStore from './common/volumeStore'\n  import * as Comlink from 'comlink'\n  import Worker from 'worker-loader!./graphs/worker.js';\n  const worker = new Worker();\n  const calcWorker = Comlink.wrap(worker);\n  import * as priceStore from './common/priceStore'\n\n  export default {\n    props: ['pool', 'bal_info', 'total', 'l_info', 'totalShare', 'fee', 'admin_fee', 'currencies', 'tokenSupply', 'tokenBalance', 'usdShare', 'staked_info', 'totalStake', 'usdStake', 'combinedstats', 'virtual_price', 'A', 'future_A', 'admin_actions_deadline'],\n    data: () => ({\n      volumes: [],\n      realShare: null,\n      realStake: null,\n      lastPoint: null,\n      lastPool: null,\n      btcPrice: 0,\n      liqUtil: \"-\",\n      dailyUsdVolume: \"-\",\n      avgPrice: 1,\n      dailyVolumeInUsd: 0,\n    }),\n    methods: {\n      toFixed(num, precisions = 2, round = 4) {\n          if(num == '' || num === null || num === undefined) return ''\n          if(precisions == 2 && ['tbtc', 'ren', 'sbtc'].includes(this.currentPool)) precisions = 8\n          let rounded = this.formatNumber(num, precisions)\n          return rounded\n      },\n      totalCurrencies(currencies) {\n        if(!['susdv2', 'tbtc', 'ren'].includes(this.currentPool))\n          return Object.keys(currencies).join('+').toUpperCase();\n        return Object.values(currencies).join('+');\n      },\n      formatNumber(number, dec = 2) {\n        return helpers.formatNumber(number, dec)\n      },\n      async updateShares() {\n        if(!(this.usdShare1 > 0 || (['susdv2', 'sbtc', 'y', 'swusd'].includes(this.currentPool) && this.usdStake1) > 0)) return;\n        let pool = this.currentPool\n        pool = pool == 'swusd' ? 'y' : pool == 'susdv2' ? 'susd' : pool == 'ren' ? 'ren2' : pool == 'sbtc' ? 'rens' : pool\n        // deleted unneeded code here\n      },\n    },\n    async created() {\n      await volumeStore.getVolumes();\n      this.$watch(() => this.hasLoadedInfo, val => true); // commenting out this loading variable\n\n      const volume = volumeStore.totalVolume();\n      this.avgPrice = await common.getAverageCoinPrice();\n      console.log('avgPrice', String(this.avgPrice));\n      //const volume = await volumeStore.totalVolume();        \n      console.log('volume', volume);\n      this.dailyVolumeInUsd = this.avgPrice * volume;\n      console.log('daily vol in usd', this.dailyVolumeInUsd);\n    },\n    computed: {\n      showShares: getters.showShares,\n      initializedContracts: getters.initializedContracts,\n      totalSupply() {\n        if(this.tokenSupply) return this.tokenSupply\n        return getters.totalSupply()\n      },\n      totalBalance() {\n        if(this.tokenBalance) return this.tokenBalance\n        return getters.totalBalance()\n      },\n      curveStakeBalance() {\n        return currentContract.curveStakeBalance\n      },\n      volumePool() {\n        return this.currentPool == 'swusd' ? 'y' : this.currentPool == 'susdv2' ? 'susd' : this.currentPool\n      },\n      currentPool() {\n        return this.pool || currentContract.currentContract\n      },\n      virtualPrice1() {\n        return this.virtual_price || (currentContract.virtual_price || 0)\n      },\n      totalBalances() {\n        const value = this.bal_info && this.bal_info.reduce((a, b) => a + b, 0) || null\n        return value;\n      },\n      totalUserBalances() {\n        return this.l_info && this.l_info.reduce((a, b) => a + b, 0) || null\n      },\n      totalStakedBalances() {\n        return this.staked_info && this.staked_info.reduce((a, b) => a + b, 0) || null\n      },\n      poolLiqUtilization() {\n        // TODO: calculate liquidity utilization in method set this.liqUtil\n        return this.liqUtil;\n      },\n      usdShare1() {\n        let share = (this.usdShare || getters.usdShare())\n        if(this.isBTC) share *= this.btcPrice\n        return share\n      },\n      usdStake1() {\n        let stake =  (this.usdStake || getters.usdStake())\n        if(this.isBTC) stake *= this.btcPrice\n        return stake\n      },\n      A1() {\n        return this.A || ((getters.A() * 1e18) | 0)\n      },\n      future_A1() {\n        return this.future_A || ((getters.future_A()) | 0)\n      },\n      initial_A() {\n        return getters.initial_A()\n      },\n      isRampingUp() {\n        return getters.initial_A_time() < Date.now()/1000 < getters.future_A_time()\n      },\n      rampEnd() {\n        return helpers.formatDateToHuman(getters.future_A_time())\n      },\n      admin_actions_readable() {\n        return helpers.formatDateToHuman(this.admin_actions_deadline1)\n      },\n      admin_actions_deadline1() {\n        return this.admin_actions_deadline || getters.admin_actions_deadline()\n      },\n      poolVolumeUSD() {\n        return volumeStore.state.volumes[this.currentPool == 'swusd' ? 'y' : this.currentPool == 'susdv2' ? 'susd' : this.currentPool][0]\n      },\n      poolVolume() {\n        return volumeStore.state.volumes[this.currentPool == 'swusd' ? 'y' : this.currentPool == 'susdv2' ? 'susd' : this.currentPool][1] || 0\n      },\n      nativeVolume() {\n        if(this.isBTC) return this.poolVolume\n        return this.poolVolumeUSD\n      },\n      isBTC() {\n        return ['tbtc', 'ren', 'sbtc'].includes(this.currentPool)\n      },\n      hasLoadedInfo() {\n        let N_COINS = allabis[this.currentPool].N_COINS;\n        return this.currentPool && (this.l_info && this.l_info[N_COINS-1] !== undefined) || (this.staked_info && this.staked_info[N_COINS - 1] !== undefined)\n      },\n    }\n  }\n</script>\n\n<style scoped>\n  .tooltip {\n    margin-left: 0;\n  }\n\n  .tooltip .tooltiptext {\n    font-weight: normal;\n    background-color: #aaaaaa;\n    color: black;\n  }\n  .tooltip .tooltiptext::after {\n    border-color: #aaaaaa transparent transparent transparent;\n  }\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BalancesInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BalancesInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BalancesInfo.vue?vue&type=template&id=e54e9a70&scoped=true&\"\nimport script from \"./BalancesInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./BalancesInfo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BalancesInfo.vue?vue&type=style&index=0&id=e54e9a70&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e54e9a70\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TotalBalances.vue?vue&type=style&index=0&id=0a8cd102&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TotalBalances.vue?vue&type=style&index=0&id=0a8cd102&scoped=true&lang=css&\""],"sourceRoot":""}