{"version":3,"sources":["webpack:///./src/components/root/StatsDaily.vue?5c18","webpack:///src/components/root/StatsDaily.vue","webpack:///./src/components/root/StatsDaily.vue?b6cd","webpack:///./src/components/root/StatsDaily.vue","webpack:///./src/components/common/DailyAPYChart.vue?08d9","webpack:///src/components/common/DailyAPYChart.vue","webpack:///./src/components/common/DailyAPYChart.vue?b7c8","webpack:///./src/components/common/DailyAPYChart.vue","webpack:///./node_modules/core-js/modules/es.array.every.js","webpack:///./src/components/root/StatsDaily.vue?963c"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","ref","attrs","chartdata","_v","volumeChartdata","tradingFeesChartdata","_l","Object","keys","pools","currency","i","directives","name","rawName","value","expression","_s","poolData","volumesData","staticRenderFns","component","volume","class","_f","includes","pool","$","$every","every","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","length","undefined"],"mappings":"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aAGA,aAGA,UACA,WADA,WAEA,sEACA,wBAGA,OACA,cADA,SACA,GACA,iBAGA,QA5IA,WA6IA,uCACA,0BAEA,SACA,OADA,WAEA,iBAEA,iBAJA,SAIA,KACA,kFACA,mCACA,MAEA,QATA,WASA,ySACA,4BACA,2BAGA,IADA,KACA,wBACA,YACA,oCACA,8EACA,QACA,gBACA,QAXA,GAgBA,mBACA,iBACA,YACA,OACA,kBACA,MACA,iBAtBA,wBAuBA,sBACA,oCAxBA,SAyBA,2HAzBA,cAyBA,EAzBA,iBA0BA,SA1BA,eA0BA,EA1BA,OA0BA,OAEA,0FACA,oCAEA,GACA,8CACA,gDACA,mDAlCA,UAqCA,8BArCA,QAyCA,IAJA,EArCA,OAsCA,yEAEA,KACA,wBACA,sBACA,mBACA,0BACA,4CACA,OACA,qCACA,kCACA,SACA,QACA,+BACA,kBAGA,mBACA,eACA,YACA,OACA,kBAGA,sFAEA,mBACA,iBACA,YACA,OACA,kBApEA,WAwEA,eAEA,eA1EA,wBA2EA,sBACA,oCA5EA,UA6EA,aACA,2HACA,sIACA,uFAhFA,eA6EA,EA7EA,iBAkFA,mDAlFA,eAkFA,EAlFA,OAmFA,wBACA,cACA,cACA,mBAEA,sFAxFA,UAyFA,gCAzFA,QA4FA,IAHA,EAzFA,OA2FA,KACA,wBACA,sBACA,mBACA,0BACA,4CACA,4CACA,MACA,QACA,MACA,OACA,QAEA,uCACA,kBAGA,mBACA,mBACA,YACA,OACA,kBAGA,sFAEA,mBACA,iBACA,YACA,OACA,kBAzHA,YA6HA,+BA7HA,wBA+HA,aACA,oCAhIA,UAiIA,kIAjIA,eAiIA,EAjIA,OAkIA,wIAlIA,UAmIA,SAnIA,eAmIA,EAnIA,OAmIA,OACA,wFACA,oCAEA,GACA,8CACA,gDACA,mDA1IA,UA6IA,8BA7IA,QAiJA,IAJA,GA7IA,OA8IA,2EAEA,MACA,2BACA,wBACA,qBACA,4BACA,4BACA,8CACA,qBACA,WACA,SAEA,sBACA,oCACA,qBAGA,mBACA,eACA,YACA,QACA,kBAGA,wFAEA,mBACA,iBACA,YACA,QACA,kBA7KA,cAmLA,2BACA,yBACA,gBArLA,UAyLA,uBAzLA,WA2LA,oDAEA,mBACA,cACA,sBACA,QACA,gBACA,qBACA,MAEA,mBAGA,aACA,gDAzMA,kCA0MA,uBA1MA,QA0MA,GA1MA,+BA4MA,yCACA,iBACA,iBACA,iBACA,YACA,cACA,OACA,qBACA,OACA,gBAGA,QACA,KACA,OACA,gBAGA,qBACA,UACA,cAEA,yBACA,UACA,eApOA,QA0OA,mBACA,mBACA,QACA,SACA,kBAGA,8DACA,wFAEA,mBACA,iBACA,YACA,QACA,mBAIA,iBACA,sBAEA,aA/PA,iDCrMsW,I,YCOlWkB,EAAY,eACd,EACA9B,EACA6B,GACA,EACA,KACA,KACA,MAIa,OAAAC,E,2CCjBf,IAAIM,EAAI,EAAQ,QACZC,EAAS,EAAQ,QAAgCC,MACjDC,EAAsB,EAAQ,QAC9BC,EAA0B,EAAQ,QAElCC,EAAgBF,EAAoB,SACpCG,EAAiBF,EAAwB,SAI7CJ,EAAE,CAAEO,OAAQ,QAASC,OAAO,EAAMC,QAASJ,IAAkBC,GAAkB,CAC7EJ,MAAO,SAAeQ,GACpB,OAAOT,EAAOnC,KAAM4C,EAAYC,UAAUC,OAAS,EAAID,UAAU,QAAKE,O,yDCb1E,yBAA2f,EAAG","file":"js/chunk-6b4d7330.4e666a79.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"window white\"},[_c('fieldset',[_vm._m(0),_c('highcharts',{ref:\"highcharts\",attrs:{\"constructor-type\":'stockChart',\"options\":_vm.chartdata}})],1)]),_c('div',{staticClass:\"window white\"},[_c('fieldset',[_c('legend',[_vm._v(\"Total trading volume\")]),_c('highcharts',{ref:\"highcharts2\",attrs:{\"constructor-type\":'stockChart',\"options\":_vm.volumeChartdata}})],1)]),_c('div',{staticClass:\"window white\"},[_c('fieldset',[_c('legend',[_vm._v(\"Trading fees\")]),_vm._m(1),_c('highcharts',{ref:\"feecharts\",staticClass:\"tradingfees\",attrs:{\"constructor-type\":'stockChart',\"options\":_vm.tradingFeesChartdata}})],1)]),_vm._l((Object.keys(_vm.pools)),function(currency,i){return _c('div',{staticClass:\"window white\"},[_c('p',{staticClass:\"text-center\"},[_c('router-link',{directives:[{name:\"show\",rawName:\"v-show\",value:(currency != 'susd'),expression:\"currency != 'susd'\"}],attrs:{\"to\":currency == 'susd' ? 'susdv2' : currency}},[_vm._v(\" swerve.fi/\"+_vm._s(currency == 'swusd' ? 'y' : currency == 'susd' ? 'susdv2' : currency)+\" \")]),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(currency == 'susd'),expression:\"currency == 'susd'\"}],attrs:{\"href\":\"https://swusd.finance/pool\"}},[_vm._v(\"susd\")])],1),_c('daily-chart',{attrs:{\"data\":_vm.poolData[i],\"pool\":currency == 'swusd' ? 'y' : currency,\"volume\":_vm.volumesData[currency == 'swusd' ? 'y' : currency == 'susdv2' ? 'susd' : currency]}})],1)})],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('legend',[_vm._v(\"Daily APY % and trading volume \"),_c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?]\"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\"Daily Pool APY + Lending APY (annualized)\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"info-message gentle-message\"},[_vm._v(\" The chart shows only trading \"),_c('b',[_vm._v(\"volume\")]),_vm._v(\" fees and does not account for fees from deposits/withdrawals \")])}]\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n \t\t<div class='window white'>\n \t\t\t<fieldset>\n \t\t\t\t<legend>Daily APY % and trading volume <span class='tooltip'>[?]<span class='tooltiptext long'>Daily Pool APY + Lending APY (annualized)</span></span></legend>\n \t\t\t\t<highcharts :constructor-type=\"'stockChart'\" :options=\"chartdata\" ref='highcharts'></highcharts>\n \t\t\t</fieldset>\n \t\t</div>\n\n \t\t<div class='window white'>\n \t\t\t<fieldset>\n \t\t\t\t<legend>Total trading volume</legend>\n \t\t\t\t<highcharts :constructor-type=\"'stockChart'\" :options=\"volumeChartdata\" ref='highcharts2'></highcharts>\n \t\t\t</fieldset>\n \t\t</div>\n\n \t\t<div class='window white'>\n \t\t\t<fieldset>\n \t\t\t\t<legend>Trading fees</legend>\n \t\t\t\t<div class='info-message gentle-message'>\n \t\t\t\t\tThe chart shows only trading <b>volume</b> fees and does not account for fees from deposits/withdrawals\n \t\t\t\t</div>\n \t\t\t\t<highcharts :constructor-type=\"'stockChart'\" :options=\"tradingFeesChartdata\" ref='feecharts' class='tradingfees'></highcharts>\n \t\t\t</fieldset>\n \t\t</div>\n\n\t\t<div class='window white' v-for='(currency, i) in Object.keys(pools)'>\n\t\t\t<p class='text-center'>\n\t\t      \t<router-link :to=\"currency == 'susd' ? 'susdv2' : currency\" v-show=\"currency != 'susd'\">\n\t\t      \t\tswerve.fi/{{currency == 'swusd' ? 'y' : currency == 'susd' ? 'susdv2' : currency}}\n\t\t      \t</router-link>\n\t\t      \t<a href='https://swusd.finance/pool' v-show=\"currency == 'susd'\">susd</a>\n\t      \t</p>\n\t\t\t<daily-chart\n\t\t\t\t:data = 'poolData[i]'\n\t\t\t\t:pool=\"currency == 'swusd' ? 'y' : currency\"\n\t\t\t\t:volume = \"volumesData[currency == 'swusd' ? 'y' : currency == 'susdv2' ? 'susd' : currency]\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport DailyChart from '../common/DailyAPYChart.vue'\n  import * as volumeStore from '@/components/common/volumeStore'\n\n\timport Highcharts from 'highcharts'\n\timport HC_exporting from 'highcharts/modules/exporting';\n\timport HC_exporting_data from 'highcharts/modules/export-data';\n\tHC_exporting(Highcharts);\n\tHC_exporting_data(Highcharts)\n\n\timport {Chart} from 'highcharts-vue'\n\timport stockInit from 'highcharts/modules/stock'\n\n  import * as helpers from '../../utils/helpers'\n\n\tstockInit(Highcharts)\n\n\tHighcharts.setOptions({\n\t\tlang: {\n\t\t\tloading: '',\n\t\t}\n\t})\n\n\texport default {\n\t\tcomponents: {\n\t\t\tDailyChart,\n\t\t\thighcharts: Chart,\n\t\t},\n\t\tdata: () => ({\n\t\t\tpools: {\n\t\t\t\tcompound: 'compound',\n\t\t\t\tusdt: 'usdt',\n\t\t\t\tswusd: 'y',\n\t\t\t\tbusd: 'busd',\n\t\t\t\tsusdv2: 'susdv2',\n\t\t\t\tpax: 'pax',\n\t\t\t\ttbtc: 'tbtc',\n\t\t\t\tren: 'ren',\n\t\t\t\tsbtc: 'sbtc',\n\t\t\t},\n\t\t\tchartdata: {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: ''\n\t\t\t\t},\n\t\t\t\tchart: {\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t        panKey: 'ctrl',\n\t\t\t        height: 800,\n\t\t\t\t},\n\t\t\t\tyAxis: [\n\t\t\t\t\t{\n\t\t\t\t\t\topposite: false,\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\ttext: 'Daily APY %',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 'logarithmic',\n\t\t            \theight: '60%',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t            \tid: 'volumeAxis',\n\t\t            \t//type: 'logarithmic',\n\t\t            \topposite: false,\n\t\t            \ttitle: {\n\t\t            \t\ttext: 'Trading volume',\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black'\n\t\t            \t\t},\n\t\t            \t\tmargin: 10,\n\t\t            \t},\n\t\t            \tlabels: {\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black',\n\t\t            \t\t},\n\t\t            \t\talign: 'right',\n\t\t            \t\tx: -30,\n\t\t            \t},\n\t\t            \ttop: '65%',\n\t\t            \theight: '35%',\n\t\t\t            offset: 0,\n\t\t            }\n\t            ],\n\t\t\t\ttooltip: {\n\t                valueDecimals: 3,\n\t                pointFormatter() {\n                \t\tlet value = Math.floor(this.y * 100) / 100 + '%';\n                \t\tif(this.series.name == 'Trading Volume') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${this.y.toFixed(0)}</b><br/>`\n\t                \treturn `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n\t                }\n\t            },\n\t            legend: {\n\t            \tenabled: true,\n\t            },\n\t\t\t\tseries: [],\n\t\t\t},\n\t\t\tvolumeChartdata: {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Total Trading Volume'\n\t\t\t\t},\n\t\t\t\tchart: {\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t        panKey: 'ctrl',\n\t\t\t        height: 600,\n\t\t\t\t},\n\t\t\t\tyAxis: [\n\t\t\t\t\t{\n\t\t            \tid: 'volumeAxis',\n\t\t            \t//type: 'logarithmic',\n\t\t            \topposite: false,\n\t\t            \ttitle: {\n\t\t            \t\ttext: 'Trading volume',\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black'\n\t\t            \t\t},\n\t\t            \t\tmargin: 10,\n\t\t            \t},\n\t\t            \tlabels: {\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black',\n\t\t            \t\t},\n\t\t            \t\talign: 'right',\n\t\t            \t\tx: -30,\n\t\t            \t},\n\t\t\t            offset: 0,\n\t\t            }\n\t            ],\n\t\t\t\ttooltip: {\n\t                valueDecimals: 3,\n\t                pointFormatter() {\n                \t\tlet value = Math.floor(this.y * 100) / 100 + '%';\n                \t\tif(this.series.name == 'Trading Volume') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${helpers.formatNumber(this.y, 0)}$</b><br/>`\n\t                \treturn `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${this.y.toFixed(0)}</b><br/>`\n\t                }\n\t            },\n\t            legend: {\n\t            \tenabled: true,\n\t            },\n\t\t\t\tseries: [],\n\t\t\t},\n\t\t\ttradingFeesChartdata: {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Trading Fees'\n\t\t\t\t},\n\t\t\t\tchart: {\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t        panKey: 'ctrl',\n\t\t\t        height: 600,\n\t\t\t\t},\n\t\t\t\tyAxis: [\n\t\t\t\t\t{\n\t\t            \tid: 'volumeAxis',\n\t\t            \t//type: 'logarithmic',\n\t\t            \topposite: false,\n\t\t            \ttitle: {\n\t\t            \t\ttext: 'Trading fees',\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black'\n\t\t            \t\t},\n\t\t            \t\tmargin: 10,\n\t\t            \t},\n\t\t            \tlabels: {\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black',\n\t\t            \t\t},\n\t\t            \t\talign: 'right',\n\t\t            \t\tx: -30,\n\t\t            \t},\n\t\t\t            offset: 0,\n\t\t            }\n\t            ],\n\t\t\t\ttooltip: {\n\t                valueDecimals: 3,\n\t                pointFormatter() {\n                \t\tlet value = Math.floor(this.y * 100) / 100 + '%';\n                \t\tif(this.series.name == 'Trading Fees') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${helpers.formatNumber(this.y, 0)}$</b><br/>`\n\t                \treturn `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${this.y.toFixed(0)}</b><br/>`\n\t                }\n\t            },\n\t            legend: {\n\t            \tenabled: true,\n\t            },\n\t\t\t\tseries: [],\n\t\t\t},\n\t\t\tpoolData: [],\n\t\t\tstart: 0,\n\t\t\tend: 0,\n\t\t\tchart: null,\n\t\t\tvolumeChart: null,\n\t\t\ttradingFeesChart: null,\n\t\t}),\n\t\tcomputed: {\n\t\t\tvolumesData() {\n\t\t\t\treturn volumeStore.state.volumes;\n\t\t\t}\n\t\t},\n\t\tasync mounted() {\n\t\t\tlet allPools = ['compound', 'usdt', 'y', 'busd', 'susd', 'pax', 'tbtc', 'ren', 'sbtc']\n\t\t\tlet allVolume = volumeStore.state.allVolume\n\t\t\tthis.$watch(()=>Object.keys(allVolume).every(pool => allVolume[pool].length > 0), val => {\n\t\t\t\tif(val) {\n\t\t\t\t\tlet volumeSeries = []\n\t\t\t\t\tlet data = volumeStore.state.allVolume\n\t\t\t\t\tlet maxlenpool = Object.keys(data).reduce((a, b) => data[a].length > data[b].length ? a : b)\n\t\t\t\t\tdata = Object.keys(data).reduce((obj, key) => {\n\t\t\t\t\t\treturn {...obj, [key]: (new Array(Math.max(...Object.values(data).map(arr=>arr.length))-data[key].length).fill({})).concat(data[key])}\n\t\t\t\t\t}, {})\n\t\t\t\t\tdata.susdv2 = data.susd\n\t\t\t\t\tfor(let i = 0; i < data[maxlenpool].length; i++) {\n\t\t\t\t\t\tvolumeSeries.push([\n\t\t\t\t\t\t\tdata[maxlenpool][i][0],\n\t\t\t\t\t\t\tallPools.map(p=>{\n\t\t\t\t\t\t\t\tp = p == 'susd' ? 'susdv2' : p\n\t\t\t\t\t\t\t\treturn data[p] && data[p][i] && data[p][i][1] || 0\n\t\t\t\t\t\t\t}).reduce((a ,b) => (+a) + (+b), 0)\n\t\t\t\t\t\t])\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.chart.addSeries({\n\t\t\t        \ttype: 'column',\n\t\t\t\t\t\tname: 'Trading Volume',\n\t\t\t\t\t\tdata: volumeSeries,\n\t\t\t\t\t\tcolor: '#0b0a57',\n\t\t\t\t\t\tyAxis: 1,\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.volumeChart.addSeries({\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tname: 'Trading Volume',\n\t\t\t\t\t\tdata: volumeSeries,\n\t\t\t\t\t\tcolor: '#0b0a57',\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.volumeChart.hideLoading()\n\n\t\t\t\t\tlet tradingFees = volumeSeries.map(([timestamp, volume]) => [timestamp, volume * 0.04 / 100])\n\n\t\t\t\t\tthis.tradingFeesChart.addSeries({\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tname: 'Trading Fees',\n\t\t\t\t\t\tdata: tradingFees,\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.tradingFeesChart.hideLoading()\n\n\t\t\t\t\tthis.chart.hideLoading()\n\t\t\t\t}\n\n\t\t\t})\n\t\t\tthis.chart = this.$refs.highcharts.chart\n\t\t\tthis.volumeChart = this.$refs.highcharts2.chart\n\t\t\tthis.tradingFeesChart = this.$refs.feecharts.chart\n\t\t\tthis.volumeChart.showLoading()\n\t\t\tthis.chart.showLoading()\n\t\t\tthis.tradingFeesChart.showLoading()\n\t\t\tvar start = new Date();\n\t\t\tstart.setHours(0,0,0,0);\n\t\t\tthis.start = start.getTime() / 1000\n\n\t\t\tvar end = new Date();\n\t\t\tend.setHours(23,59,59,999);\n\t\t\tthis.end = end.getTime() / 1000\n\n\t\t\tlet requests = Object.values(this.pools)\n\t\t\t\t\t\t\t.map(p => p == 'susdv2' ? 'susd' : p == 'ren' ? 'ren2' : p == 'sbtc' ? 'rens' : p)\n\t\t\t\t\t\t\t.map(p => fetch(`${window.domain}/raw-stats/${p}-1440m.json`))\n\t\t\tlet data = await Promise.all(requests)\n\t\t\tfor(let [key, res] of data.entries()) {\n\t\t\t\tlet json = await res.json();\n\t\t\t\tlet chartData = [];\n\t\t        for(let i = 1; i < json.length; i++) {\n\t\t        \tvar el = json[i];\n\t\t        \tlet daylen = el.timestamp - json[i-1].timestamp\n\t\t        \tlet profit = ((el.virtual_price / 1e18) / (json[i-1].virtual_price / 1e18)) ** (365 * 86400 / daylen) - 1\n\t\t        \tchartData.push([\n\t\t        \t\tel.timestamp * 1000,\n\t\t        \t\tprofit * 100,\n\t\t        \t])\n\t\t        }\n\n\t\t        this.chart.addSeries({\n\t\t        \tname: key == 2 ? 'y' : Object.keys(this.pools)[key],\n\t\t        \tdata: chartData,\n\t\t        })\n\n\t\t\t\tthis.poolData.push(json);\n\t\t\t}\n\n/*\t\t\tlet pools = Object.values(this.pools).slice(0, 4)\n\t        requests = pools.map(p => fetch(`https://beta.swerve.fi/raw-stats/${p}-30m.json`))\n\t\t\trequests = await Promise.all(requests)\n\t\t\tlet jsons = await Promise.all(requests.map(r => r.json()))\n\t\t\tconsole.log(jsons)*/\n\n            volumeStore.getVolumes(Object.values(this.pools));\n\t\t},\n\t}\n</script>\n\n<style scoped>\n\t.tradingfees {\n\t\tmargin-top: 1em;\n\t}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatsDaily.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatsDaily.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StatsDaily.vue?vue&type=template&id=8da16b4c&scoped=true&\"\nimport script from \"./StatsDaily.vue?vue&type=script&lang=js&\"\nexport * from \"./StatsDaily.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StatsDaily.vue?vue&type=style&index=0&id=8da16b4c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8da16b4c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('fieldset',[_vm._m(0),_c('highcharts',{ref:\"highcharts\",attrs:{\"constructor-type\":'stockChart',\"options\":_vm.chartdata}}),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.volume && _vm.volume[0] != -1),expression:\"volume && volume[0] != -1\"}]},[_c('span',[_vm._v(\"Daily USD trading volume:\")]),_c('span',{class:{'loading line': !_vm.volume}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.volume && _vm.volume[0] != -1),expression:\"volume && volume[0] != -1\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"formatNumber\")((_vm.volume && _vm.volume[0] || 0),0))+\"$\")])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(['tbtc', 'ren', 'sbtc'].includes(_vm.pool)),expression:\"['tbtc', 'ren', 'sbtc'].includes(pool)\"}]},[_c('span',[_vm._v(\"Daily ₿ trading volume:\")]),_c('span',[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.volume && _vm.volume[1] != -1),expression:\"volume && volume[1] != -1\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"formatNumber\")((_vm.volume && _vm.volume[1] || 0),8))+\" ₿ \")])])]),_c('p')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('legend',[_vm._v(\"Daily APY % \"),_c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?]\"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\"Pool APY % + Lending APY % (on annual basis)\")])])])}]\n\nexport { render, staticRenderFns }","<template>\n\t<fieldset>\n\t\t<legend>Daily APY % <span class='tooltip'>[?]<span class='tooltiptext long'>Pool APY % + Lending APY % (on annual basis)</span></span></legend>\n\t\t<highcharts :constructor-type=\"'stockChart'\" :options=\"chartdata\" ref='highcharts'></highcharts>\n    \t<p v-show='volume && volume[0] != -1'>\n    \t\t<span>Daily USD trading volume:</span>\n    \t\t<span :class=\"{'loading line': !volume}\">\n    \t\t\t<span v-show='volume && volume[0] != -1'> {{ (volume && volume[0] || 0) | formatNumber(0) }}$</span>\n    \t\t</span>\n    \t\t<div v-show=\"['tbtc', 'ren', 'sbtc'].includes(pool)\">\n\t    \t\t<span>Daily ₿ trading volume:</span>\n\t    \t\t<span>\n\t    \t\t\t<span v-show='volume && volume[1] != -1'> {{ (volume && volume[1] || 0) | formatNumber(8) }} ₿ </span>\n\t    \t\t</span>\n    \t\t</div>\n    \t</p>\n\t</fieldset>\n</template>\n\n<script>\n\timport Web3 from 'web3'\n\timport Highcharts from 'highcharts'\n\timport HC_exporting from 'highcharts/modules/exporting';\n\timport HC_exporting_data from 'highcharts/modules/export-data';\n\tHC_exporting(Highcharts);\n\tHC_exporting_data(Highcharts)\n\n\timport {Chart} from 'highcharts-vue'\n\timport stockInit from 'highcharts/modules/stock'\n\n  import * as helpers from '../../utils/helpers'\n\timport abis, { multicall_abi, multicall_address, infura_url } from '@/allabis'\n\timport * as volumeStore from '@/components/common/volumeStore'\n\n\tstockInit(Highcharts)\n\n\tHighcharts.setOptions({\n\t\tlang: {\n\t\t\tloading: '',\n\t\t}\n\t})\n\n\tlet web3 = new Web3(infura_url)\n\n\texport default {\n\t\tprops: {\n\t\t\tdata: Array,\n\t\t\tvolume: {\n\t\t\t\ttype: Array,\n\t\t\t},\n\t\t\tpool: String,\n\t\t},\n\t\tcomponents: {\n\t\t\thighcharts: Chart,\n\t\t},\n\t\tdata(){\n\t\t\treturn {\n\t\t\tchartdata: {\n\t\t\t\tchart: {\n\t\t\t\t\tpanning: true,\n\t\t\t\t\tzoomType: 'x',\n\t\t\t        panKey: 'ctrl',\n\t\t\t        height: 600,\n\t\t\t\t},\n                rangeSelector: {\n\t\t            selected: 1\n\t\t        },\n\t\t        exporting: {\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\tcontextButton: {\n\t\t\t\t\t\t\tmenuItems: [\"printChart\",\n\t\t\t\t\t                    \"separator\",\n\t\t\t\t\t                    \"downloadPNG\",\n\t\t\t\t\t                    \"downloadJPEG\",\n\t\t\t\t\t                    \"downloadPDF\",\n\t\t\t\t\t                    \"downloadSVG\",\n\t\t\t\t\t                    \"separator\",\n\t\t\t\t\t                    \"downloadCSV\",\n\t\t\t\t\t                    \"downloadXLS\",\n\t\t\t\t\t                    //\"viewData\",\n\t\t\t\t\t                    \"openInCloud\"]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t            yAxis: [\n\t\t            {\n\t\t            \tid: 'apyAxis',\n\t\t            \topposite: false,\n\t\t            \ttype: 'logarithmic',\n\t\t            \tmin: 0.1,\n\t        \t\t\ttitle: {\n\t        \t\t\t\ttext: 'Daily APY [%]',\n\t        \t\t\t\tstyle: {\n\t        \t\t\t\t\tcolor: 'black'\n\t        \t\t\t\t},\n\t        \t\t\t\tmargin: 10,\n\t        \t\t\t},\n\t\t            \tlabels: {\n\t\t            \t\talign: 'right',\n\t\t            \t\tx: -30,\n\t\t            \t\tformatter() {\n\t\t            \t\t\treturn (Math.floor(this.value * 100) / 100).toFixed(2);\n\t\t            \t\t},\n\t\t\t            \tstyle: {\n\t\t\t            \t\tcolor: 'black'\n\t\t\t            \t},\n\t\t            \t},\n\t\t            \ttickPixelInterval: 10,\n\t\t            \theight: '60%',\n\t\t            },\n\t\t            {\n\t\t            \tid: 'volumeAxis',\n\t\t            \t//type: 'logarithmic',\n\t\t            \topposite: false,\n\t\t            \ttitle: {\n\t\t            \t\ttext: 'Trading Volume',\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black'\n\t\t            \t\t},\n\t\t            \t\tmargin: 10,\n\t\t            \t},\n\t\t            \tlabels: {\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black',\n\t\t            \t\t},\n\t\t            \t\talign: 'right',\n\t\t            \t\tx: -30,\n\t\t            \t},\n\t\t            \ttop: '65%',\n\t\t            \theight: '35%',\n\t\t\t            offset: 0,\n\t\t            }\n\t            ],\n\t            xAxis: {\n\t            \tlabels: {\n\t\t            \tstyle: {\n\t\t            \t\tcolor: 'black'\n\t\t            \t}\n\t            \t}\n\t            },\n\t\t        series: [/*{\n\t\t        \tname: 'Daily APY',\n\t\t        \tlineWidth: 2,\n\t\t        \tdata: [],\n\t\t        \tcolor: '#0b0a57'\n\t\t        }*/],\n\t\t        tooltip: {\n\t\t        \tsplit: true,\n\t                valueDecimals: 3,\n\t                pointFormatter: (function(self) {\n\t                \treturn function() {\n\t                \t\tlet value = Math.floor(this.y * 100) / 100 + '%';\n\t\t                \tif(this.series.name == 'Daily APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n\t                \t\tif(this.series.name == 'SNX APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n                \t\t\tif(this.series.name == 'SNX+REN APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n                \t\t\tif(this.series.name == 'YFI APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n                \t\t\tif(this.series.name == 'Total APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n\t\t                \tif(this.series.name == 'Lending APY') return `<span style=\"color:${this.color}\">●</span> ${this.series.name}: <b>${value}</b><br/>`\n\t\t                \tif(this.series.name === 'Trading Volume') {\n\t\t                \t\tlet val = this.y.toFixed(2)\n\t\t                \t\tif(['tbtc', 'ren', 'sbtc'].includes(self.pool)) val = this.y.toFixed(8)\n\t\t                \t\treturn `<span style=\"color:${this.color}\">●</span> ${this.series.name} : <b>${val}</b><br/>`\n\t\t                \t}\n\t\t                }\n\t\t        \t})(this),\n\t            },\n\t            legend: {\n\t            \tenabled: true,\n\t            },\n\t\t\t},\n\t\t\tchart: null,\n\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tvolumeData() {\n\t\t\t\tif(['tbtc', 'ren', 'sbtc'].includes(this.pool)) return helpers.formatNumber(this.volume, 8)\n\t\t\t\treturn helpers.formatNumber(this.volume, 0)\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\t'data.length'(val) {\n\t\t\t\tthis.mounted()\n\t\t\t}\n\t\t},\n\t\tmounted() {\n\t\t\tthis.chart = this.$refs.highcharts.chart;\n\t        this.chart.showLoading();\n\t\t},\n\t\tmethods: {\n\t\t\tloaded() {\n\t\t\t\tthis.loading = false;\n\t\t\t},\n\t\t\tfindClosestPrice(timestamp, data) {\n\t\t\t\tlet price = data.find(([time, price]) => time / 1000 > timestamp)\n\t\t\t\tif(price === undefined) return data[data.length-1][1]\n\t\t\t\treturn price[1]\n\t\t\t},\n\t\t\tasync mounted() {\n\t\t\t\twhile(this.chart.series.length) {\n\t\t\t\t\tthis.chart.series[0].remove()\n\t\t\t\t}\n\t\t        let chartData = [];\n\t\t        for(let i = 1; i < this.data.length; i++) {\n\t\t        \tvar el = this.data[i];\n\t\t        \tlet daylen = el.timestamp - this.data[i-1].timestamp\n\t\t        \tlet profit = ((el.virtual_price / 1e18) / (this.data[i-1].virtual_price / 1e18)) ** (365 * 86400 / daylen) - 1\n\t\t        \tchartData.push([\n\t\t        \t\tel.timestamp * 1000,\n\t\t        \t\tprofit * 100,\n\t\t        \t])\n\t\t        }\n\n\n\t\t        this.chart.addSeries({\n\t\t        \tname: 'Daily APY',\n\t\t        \tlineWidth: 2,\n\t\t        \tdata: chartData,\n\t\t        \tcolor: '#0b0a57'\n\t\t        }, false, false)\n\t\t        if(this.pool == 'susdv2') {\n\t\t        \tlet startTime = this.data[0].timestamp\n\t\t        \tlet endTime = this.data[this.data.length - 1].timestamp\n\t\t        \tlet SNXprices = await fetch(`https://api.coingecko.com/api/v3/coins/havven/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`)\n\t\t        \tSNXprices = (await SNXprices.json()).prices\n\n\t\t        \tlet curveRewards = new web3.eth.Contract(abis.susdv2.sCurveRewards_abi, abis.susdv2.sCurveRewards_address)\n\t\t        \tlet multicall = new web3.eth.Contract(multicall_abi, multicall_address)\n\n\t\t        \tlet calls = [\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.DURATION().encodeABI()],\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.rewardRate().encodeABI()],\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.periodFinish().encodeABI()],\n\t\t\t\t\t]\n\n\t\t\t\t\tlet aggcalls = await multicall.methods.aggregate(calls).call()\n\t\t\t\t\tlet decoded = aggcalls[1].map(hex => web3.eth.abi.decodeParameter('uint256', hex))\n\n\t\t        \tlet SNXapys = []\n\t\t        \tfor(let i = 1; i < this.data.length; i++) {\n\t\t        \t\tlet timestamp = this.data[i].timestamp\n\t\t        \t\tlet total_supply = this.data[i].supply\n\t\t        \t\tlet virtual_price = this.data[i].virtual_price\n\t\t        \t\tlet SNXprice = this.findClosestPrice(this.data[i].timestamp, SNXprices)\n\t\t        \t\tlet reward = 64000\n\t\t        \t\tif(timestamp > 1590705735 && timestamp < 1594256015) reward = 48000\n\t\t        \t\tif(timestamp > 1594256015) reward = decoded[0] * decoded[1] / 1e18\n\t\t        \t\tif(+decoded[2] < timestamp)\n\t\t        \t\t\treward = 0.000001\n\t\t        \t\tlet SNXapy = 356 * reward / 7 * SNXprice / (0.98 * total_supply * virtual_price / 1e36) * 100\n\t\t        \t\tSNXapys.push([timestamp * 1000, SNXapy])\n\t\t        \t}\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'SNX APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: SNXapys,\n\t\t        \t\tcolor: '#f45b5b',\n\t\t        \t})\n\n\t\t        \tlet totalAPYs = chartData.map(([timestamp, apy], i) => [timestamp, apy + SNXapys[i][1]])\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'Total APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: totalAPYs,\n\t\t        \t\tcolor: '#8085e9',\n\t\t        \t})\n\t\t    \t}\n\n\t\t    \tlet now = Date.now() / 1000\n\n\t\t    \tif(this.pool == 'sbtc') {\n\t\t        \tlet startTime = this.data[0].timestamp\n\t\t        \tlet endTime = this.data[this.data.length - 1].timestamp\n\t\t        \tlet pricereqs = await Promise.all([\n\t\t        \t\tfetch(`https://api.coingecko.com/api/v3/coins/havven/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`),\n\t\t        \t\tfetch(`https://api.coingecko.com/api/v3/coins/republic-protocol/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`),\n\t\t        \t\tfetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd'),\n\t\t        \t\t])\n\t\t        \tlet prices = await Promise.all(pricereqs.map(req => req.json()))\n\t\t        \tconsole.log(prices, \"PRICES\")\n\t\t        \tlet SNXprices = prices[0].prices\n\t\t        \tlet RENprices = prices[1].prices\n\t\t        \tlet btcPrice = prices[2].bitcoin.usd\n\n\t\t        \tlet curveRewards = new web3.eth.Contract(abis.sbtc.sCurveRewards_abi, abis.sbtc.sCurveRewards_address)\n\t\t        \tlet sbtcPeriodFinish = await curveRewards.methods.periodFinish().call()\n\n\t\t        \tlet SNXapys = []\n\t\t        \tfor(let i = 1; i < this.data.length; i++) {\n\t\t        \t\tlet timestamp = this.data[i].timestamp\n\t\t        \t\tlet total_supply = this.data[i].supply\n\t\t        \t\tlet virtual_price = this.data[i].virtual_price\n\t\t        \t\tlet SNXprice = this.findClosestPrice(this.data[i].timestamp, SNXprices)\n\t\t        \t\tlet RENprice = this.findClosestPrice(this.data[i].timestamp, RENprices)\n\t\t        \t\tlet SNXreward = 10000\n\t\t        \t\tlet RENreward = 25000\n\t\t        \t\tif(+sbtcPeriodFinish < timestamp) {\n\t\t        \t\t\tSNXreward = 0.000001\n\t\t        \t\t\tRENreward = 0.000001\n\t\t        \t\t}\n\t\t        \t\tlet SNXapy = 356 * (SNXreward * SNXprice + RENreward * RENprice) / 7  / (0.98 * btcPrice * total_supply * virtual_price / 1e36) * 100\n\t\t        \t\tSNXapys.push([timestamp * 1000, SNXapy])\n\t\t        \t}\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'SNX+REN APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: SNXapys,\n\t\t        \t\tcolor: '#f45b5b',\n\t\t        \t})\n\n\t\t        \tlet totalAPYs = chartData.map(([timestamp, apy], i) => [timestamp, apy + SNXapys[i][1]])\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'Total APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: totalAPYs,\n\t\t        \t\tcolor: '#8085e9',\n\t\t        \t})\n\t\t    \t}\n\n\t\t    \tif(['y', 'swusd'].includes(this.pool)) {\n\t\t    \t\t//YFI token deployed\n\t\t        \tlet startTime = 1594972885\n\t\t        \tlet endTime = this.data[this.data.length - 1].timestamp\n\t\t        \tlet SNXprices = await fetch(`https://api.coingecko.com/api/v3/coins/yearn-finance/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`)\n\t\t        \tconsole.log(`https://api.coingecko.com/api/v3/coins/yearn-finance/market_chart/range?vs_currency=usd&from=${startTime}&to=${endTime}`)\n\t\t        \tSNXprices = (await SNXprices.json()).prices\n\t\t        \tlet curveRewards = new web3.eth.Contract(abis.swusd.sCurveRewards_abi, abis.swusd.sCurveRewards_address)\n\t\t        \tlet multicall = new web3.eth.Contract(multicall_abi, multicall_address)\n\n\t\t        \tlet calls = [\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.DURATION().encodeABI()],\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.rewardRate().encodeABI()],\n\t\t\t\t\t\t[curveRewards._address, curveRewards.methods.periodFinish().encodeABI()],\n\t\t\t\t\t]\n\n\t\t\t\t\tlet aggcalls = await multicall.methods.aggregate(calls).call()\n\t\t\t\t\tlet decoded = aggcalls[1].map(hex => web3.eth.abi.decodeParameter('uint256', hex))\n\n\t\t        \tlet SNXapys = []\n\t\t        \tfor(let i = 1; i < this.data.length; i++) {\n\t\t        \t\tlet timestamp = this.data[i].timestamp\n\t\t        \t\tlet total_supply = this.data[i].supply\n\t\t        \t\tlet virtual_price = this.data[i].virtual_price\n\t\t        \t\tconsole.log(SNXprices, \"SNX PRICES\")\n\t\t        \t\tlet SNXprice = this.findClosestPrice(this.data[i].timestamp, SNXprices)\n\t\t        \t\tlet reward = decoded[0] * decoded[1] / 1e18\n\t\t        \t\tif(+decoded[2] < timestamp)\n\t\t        \t\t\treward = 0.000001\n\t\t        \t\t//before YFI\n\t\t        \t\tif(timestamp < 1594972885) reward = 0\n\t\t        \t\tlet SNXapy = 356 * reward / 7 * SNXprice / (0.98 * total_supply * virtual_price / 1e36) * 100\n\t\t        \t\tSNXapys.push([timestamp * 1000, SNXapy])\n\t\t        \t}\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'YFI APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: SNXapys,\n\t\t        \t\tcolor: '#f45b5b',\n\t\t        \t})\n\n\t\t        \tlet totalAPYs = chartData.map(([timestamp, apy], i) => [timestamp, apy + SNXapys[i][1]])\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'Total APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: totalAPYs,\n\t\t        \t\tcolor: '#8085e9',\n\t\t        \t})\n\t\t    \t}\n\n\n\n\t\t        if(['susd'].includes(this.pool)) {\n\t\t        \tthis.chart.yAxis[0].update({\n\t\t        \t\ttype: 'linear'\n\t\t        \t})\n\t\t        }\n\n\t\t        await volumeStore.getDailyVolume(this.pool, false, 1440)\n\n\t\t        let volumeSeries = volumeStore.state.allVolume[this.pool == 'susdv2' ? 'susd' : this.pool]\n\n\t\t        this.chart.addSeries({\n\t\t        \ttype: 'column',\n\t\t        \tname: 'Trading Volume',\n\t\t        \tdata: volumeSeries,\n\t\t        \tcolor: '#0b0a57',\n\t\t        \tyAxis: 'volumeAxis',\n\t\t        }, false, false)\n\n\t\t        this.chart.redraw(false)\n\n\t\t        let lendingrates;\n\t\t        let lendingAxis = 'apyAxis'\n\t\t        if(!['susdv2', 'tbtc', 'ren', 'sbtc'].includes(this.pool))\n\t    \t\t\tlendingrates = await volumeStore.getLendingAPY(this.pool, false, 1440)\n\t\t        else {\n\t\t        \tlendingrates = volumeSeries.map(data => [data[0], 0])\n\t\t        \tlendingAxis = 'lendingAxis'\n\t\t        \tthis.chart.addAxis({\n\t\t            \tid: 'lendingAxis',\n\t\t            \topposite: false,\n\t\t            \ttype: 'linear',\n\t\t            \ttitle: {\n\t\t            \t\ttext: 'Lending rates',\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black'\n\t\t            \t\t},\n\t\t            \t},\n\t\t            \tlabels: {\n\t\t            \t\tx: 40,\n\t\t            \t\tstyle: {\n\t\t            \t\t\tcolor: 'black',\n\t\t            \t\t},\n\t\t            \t},\n\t\t            \ttickPixelInterval: 10,\n\t\t            \ttop: '65%',\n\t\t            \theight: '5%',\n\t\t            })\n\t\t            this.chart.yAxis[1].update({\n\t\t            \ttop: '70%',\n\t\t            \theight: '30%',\n\t\t            })\n\n\t\t        }\n\n\n\t    \t\tthis.chart.addSeries({\n\t    \t\t\tname: 'Lending APY',\n\t    \t\t\tdata: lendingrates,\n\t    \t\t\tyAxis: lendingAxis,\n\t    \t\t\tcolor: '#7bb5ec',\n\t    \t\t})\n\n\t\t        if(!['susdv2', 'tbtc', 'ren', 'sbtc', 'y', 'swusd'].includes(this.pool)) {\n\t\t        \tlet totalAPYs = chartData.map(([timestamp, apy], i) => [timestamp, apy + lendingrates[i][1]])\n\n\t\t        \tthis.chart.addSeries({\n\t\t        \t\tname: 'Total APY',\n\t\t        \t\tlineWidth: 2,\n\t\t        \t\tdata: totalAPYs,\n\t\t        \t\tcolor: '#8085e9',\n\t\t        \t})\n\t\t        }\n\n\t\t        this.chart.redraw();\n\t\t        this.chart.hideLoading();\n\n\t\t        this.loading = false;\n\t\t\t},\n\t\t}\n\t}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DailyAPYChart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DailyAPYChart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DailyAPYChart.vue?vue&type=template&id=7caa6678&\"\nimport script from \"./DailyAPYChart.vue?vue&type=script&lang=js&\"\nexport * from \"./DailyAPYChart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $every = require('../internals/array-iteration').every;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('every');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('every');\n\n// `Array.prototype.every` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.every\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  every: function every(callbackfn /* , thisArg */) {\n    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatsDaily.vue?vue&type=style&index=0&id=8da16b4c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatsDaily.vue?vue&type=style&index=0&id=8da16b4c&scoped=true&lang=css&\""],"sourceRoot":""}