(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-20ea62d0"],{"0155":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VotingEscrow_vue_vue_type_style_index_0_id_2f28084e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d3f3");\n/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VotingEscrow_vue_vue_type_style_index_0_id_2f28084e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VotingEscrow_vue_vue_type_style_index_0_id_2f28084e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* unused harmony reexport * */\n /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_VotingEscrow_vue_vue_type_style_index_0_id_2f28084e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9taW50ZXIvVm90aW5nRXNjcm93LnZ1ZT80MGY5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUE2ZSxDQUFnQix5Z0JBQUcsRUFBQyIsImZpbGUiOiIwMTU1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNi1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9Wb3RpbmdFc2Nyb3cudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9MmYyODA4NGUmc2NvcGVkPXRydWUmbGFuZz1jc3MmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzPz9yZWYtLTYtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTYtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vVm90aW5nRXNjcm93LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTJmMjgwODRlJnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0155\n')},"2b7d":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return state; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return newVotingPower; });\n/* harmony import */ var core_js_modules_es_date_now__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("6eba");\n/* harmony import */ var core_js_modules_es_date_now__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_now__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_date_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("0d03");\n/* harmony import */ var core_js_modules_es_date_to_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_string__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("2b0e");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("901e");\n/* harmony import */ var bignumber_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bignumber_js__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nvar state = vue__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"].observable({\n  vecrvBalance: bignumber_js__WEBPACK_IMPORTED_MODULE_3___default()(0),\n  deposit: 0,\n  increaseLock: Date.now()\n});\nfunction newVotingPower() {\n  var lockTime = Date.parse(state.increaseLock);\n  var deposit = bignumber_js__WEBPACK_IMPORTED_MODULE_3___default()(state.deposit);\n  return deposit.times((lockTime - Date.now()) / 1000).div(86400 * 365).div(4).plus(state.vecrvBalance / 1e18);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9taW50ZXIvdmVTdG9yZS5qcz8yYjdkIl0sIm5hbWVzIjpbInN0YXRlIiwiVnVlIiwib2JzZXJ2YWJsZSIsInZlY3J2QmFsYW5jZSIsIkJOIiwiZGVwb3NpdCIsImluY3JlYXNlTG9jayIsIkRhdGUiLCJub3ciLCJuZXdWb3RpbmdQb3dlciIsImxvY2tUaW1lIiwicGFyc2UiLCJ0aW1lcyIsImRpdiIsInBsdXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTtBQUVPLElBQUlBLEtBQUssR0FBR0MsbURBQUcsQ0FBQ0MsVUFBSixDQUFlO0FBQ2pDQyxjQUFZLEVBQUVDLG1EQUFFLENBQUMsQ0FBRCxDQURpQjtBQUVqQ0MsU0FBTyxFQUFFLENBRndCO0FBR2pDQyxjQUFZLEVBQUVDLElBQUksQ0FBQ0MsR0FBTDtBQUhtQixDQUFmLENBQVo7QUFNQSxTQUFTQyxjQUFULEdBQTBCO0FBQ2hDLE1BQUlDLFFBQVEsR0FBR0gsSUFBSSxDQUFDSSxLQUFMLENBQVdYLEtBQUssQ0FBQ00sWUFBakIsQ0FBZjtBQUNBLE1BQUlELE9BQU8sR0FBR0QsbURBQUUsQ0FBQ0osS0FBSyxDQUFDSyxPQUFQLENBQWhCO0FBRUEsU0FBT0EsT0FBTyxDQUFDTyxLQUFSLENBQWMsQ0FBQ0YsUUFBUSxHQUFHSCxJQUFJLENBQUNDLEdBQUwsRUFBWixJQUEwQixJQUF4QyxFQUE4Q0ssR0FBOUMsQ0FBa0QsUUFBUSxHQUExRCxFQUErREEsR0FBL0QsQ0FBbUUsQ0FBbkUsRUFBc0VDLElBQXRFLENBQTJFZCxLQUFLLENBQUNHLFlBQU4sR0FBcUIsSUFBaEcsQ0FBUDtBQUNBIiwiZmlsZSI6IjJiN2QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcblxuaW1wb3J0IEJOIGZyb20gJ2JpZ251bWJlci5qcydcblxuZXhwb3J0IGxldCBzdGF0ZSA9IFZ1ZS5vYnNlcnZhYmxlKHtcblx0dmVjcnZCYWxhbmNlOiBCTigwKSxcblx0ZGVwb3NpdDogMCxcblx0aW5jcmVhc2VMb2NrOiBEYXRlLm5vdygpXG59KVxuXG5leHBvcnQgZnVuY3Rpb24gbmV3Vm90aW5nUG93ZXIoKSB7XG5cdGxldCBsb2NrVGltZSA9IERhdGUucGFyc2Uoc3RhdGUuaW5jcmVhc2VMb2NrKVxuXHRsZXQgZGVwb3NpdCA9IEJOKHN0YXRlLmRlcG9zaXQpXG5cblx0cmV0dXJuIGRlcG9zaXQudGltZXMoKGxvY2tUaW1lIC0gRGF0ZS5ub3coKSkgLyAxMDAwKS5kaXYoODY0MDAgKiAzNjUpLmRpdig0KS5wbHVzKHN0YXRlLnZlY3J2QmFsYW5jZSAvIDFlMTgpXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2b7d\n')},"3bdc":function(module,exports,__webpack_require__){eval('__webpack_require__("d3b7");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2V0LWludGVydmFsLWFzeW5jL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IuanM/M2JkYyJdLCJuYW1lcyI6WyJhc3luY0dlbmVyYXRvclN0ZXAiLCJnZW4iLCJyZXNvbHZlIiwicmVqZWN0IiwiX25leHQiLCJfdGhyb3ciLCJrZXkiLCJhcmciLCJpbmZvIiwidmFsdWUiLCJlcnJvciIsImRvbmUiLCJQcm9taXNlIiwidGhlbiIsIl9hc3luY1RvR2VuZXJhdG9yIiwiZm4iLCJzZWxmIiwiYXJncyIsImFyZ3VtZW50cyIsImFwcGx5IiwiZXJyIiwidW5kZWZpbmVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxTQUFTQSxrQkFBVCxDQUE0QkMsR0FBNUIsRUFBaUNDLE9BQWpDLEVBQTBDQyxNQUExQyxFQUFrREMsS0FBbEQsRUFBeURDLE1BQXpELEVBQWlFQyxHQUFqRSxFQUFzRUMsR0FBdEUsRUFBMkU7QUFDekUsTUFBSTtBQUNGLFFBQUlDLElBQUksR0FBR1AsR0FBRyxDQUFDSyxHQUFELENBQUgsQ0FBU0MsR0FBVCxDQUFYO0FBQ0EsUUFBSUUsS0FBSyxHQUFHRCxJQUFJLENBQUNDLEtBQWpCO0FBQ0QsR0FIRCxDQUdFLE9BQU9DLEtBQVAsRUFBYztBQUNkUCxVQUFNLENBQUNPLEtBQUQsQ0FBTjtBQUNBO0FBQ0Q7O0FBRUQsTUFBSUYsSUFBSSxDQUFDRyxJQUFULEVBQWU7QUFDYlQsV0FBTyxDQUFDTyxLQUFELENBQVA7QUFDRCxHQUZELE1BRU87QUFDTEcsV0FBTyxDQUFDVixPQUFSLENBQWdCTyxLQUFoQixFQUF1QkksSUFBdkIsQ0FBNEJULEtBQTVCLEVBQW1DQyxNQUFuQztBQUNEO0FBQ0Y7O0FBRUQsU0FBU1MsaUJBQVQsQ0FBMkJDLEVBQTNCLEVBQStCO0FBQzdCLFNBQU8sWUFBWTtBQUNqQixRQUFJQyxJQUFJLEdBQUcsSUFBWDtBQUFBLFFBQ0lDLElBQUksR0FBR0MsU0FEWDtBQUVBLFdBQU8sSUFBSU4sT0FBSixDQUFZLFVBQVVWLE9BQVYsRUFBbUJDLE1BQW5CLEVBQTJCO0FBQzVDLFVBQUlGLEdBQUcsR0FBR2MsRUFBRSxDQUFDSSxLQUFILENBQVNILElBQVQsRUFBZUMsSUFBZixDQUFWOztBQUVBLGVBQVNiLEtBQVQsQ0FBZUssS0FBZixFQUFzQjtBQUNwQlQsMEJBQWtCLENBQUNDLEdBQUQsRUFBTUMsT0FBTixFQUFlQyxNQUFmLEVBQXVCQyxLQUF2QixFQUE4QkMsTUFBOUIsRUFBc0MsTUFBdEMsRUFBOENJLEtBQTlDLENBQWxCO0FBQ0Q7O0FBRUQsZUFBU0osTUFBVCxDQUFnQmUsR0FBaEIsRUFBcUI7QUFDbkJwQiwwQkFBa0IsQ0FBQ0MsR0FBRCxFQUFNQyxPQUFOLEVBQWVDLE1BQWYsRUFBdUJDLEtBQXZCLEVBQThCQyxNQUE5QixFQUFzQyxPQUF0QyxFQUErQ2UsR0FBL0MsQ0FBbEI7QUFDRDs7QUFFRGhCLFdBQUssQ0FBQ2lCLFNBQUQsQ0FBTDtBQUNELEtBWk0sQ0FBUDtBQWFELEdBaEJEO0FBaUJEOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJULGlCQUFqQiIsImZpbGUiOiIzYmRjLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBrZXksIGFyZykge1xuICB0cnkge1xuICAgIHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTtcbiAgICB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJlamVjdChlcnJvcik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGluZm8uZG9uZSkge1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpO1xuXG4gICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG5cbiAgICAgIF9uZXh0KHVuZGVmaW5lZCk7XG4gICAgfSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2FzeW5jVG9HZW5lcmF0b3I7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3bdc\n')},"6b41":function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb21tb24vR2FzUHJpY2UudnVlPzY2NmMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNmI0MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6b41\n")},"79ab":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2faedd3d-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/minter/VotingEscrow.vue?vue&type=template&id=2f28084e&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{class:{\'window white\': (_vm.showvelock && _vm.showchart)}},[_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.showModal),expression:"showModal"}],staticClass:"rootmodal modal",attrs:{"id":"modal"},on:{"click":function($event){if($event.target !== $event.currentTarget){ return null; }_vm.showModal = false}}},[_c(\'div\',{staticClass:"modal-content window white"},[_c(\'fieldset\',[_c(\'div\',{staticClass:"legend2 hoverpointer",on:{"click":function($event){_vm.showModal = false}}},[_vm._v(" ["),_c(\'span\',{staticClass:"greentext"},[_vm._v("X")]),_vm._v("] ")]),_c(\'legend\',[_vm._v("Confirm lock")]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.gaugesNeedCheckpoint && _vm.gaugesNeedCheckpoint.length > 0),expression:"gaugesNeedCheckpoint && gaugesNeedCheckpoint.length > 0"}],staticClass:"content"},[_vm._v(" You need to checkpoint into "+_vm._s(_vm.gaugesNeedCheckpoint && _vm.gaugesNeedCheckpoint.length)+" gauges: "+_vm._s(_vm.gaugesNeedCheckpointText)+" gauge before locking ")]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.showModalType == 0),expression:"showModalType == 0"}],staticClass:"content"},[_vm._v(" Confirm creating lock with "+_vm._s(_vm.deposit)+" SWRV until "+_vm._s(_vm.increaseLockText)+" ")]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.showModalType == 1),expression:"showModalType == 1"}],staticClass:"content"},[_vm._v(" Confirm locking "+_vm._s(_vm.deposit)+" SWRV until "+_vm._s(_vm.increaseLockText)+" ")]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.showModalType == 2),expression:"showModalType == 2"}],staticClass:"content"},[_vm._v(" Confirm increasing lock time until "+_vm._s(_vm.increaseLockText)+" ")]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.showModalType == 3),expression:"showModalType == 3"}],staticClass:"content"},[_vm._v(" Confirm reseting approval to zero ")]),_c(\'button\',{staticClass:"simplebutton",on:{"click":_vm.submitModal}},[_vm._v(" OK ")]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.waitingMessage),expression:"waitingMessage"}],staticClass:"info-message gentle-message waiting-message"},[_c(\'span\',{domProps:{"innerHTML":_vm._s(_vm.waitingMessage)}}),_c(\'span\',{staticClass:"loading line"})])])])]),_c(\'fieldset\',[_c(\'legend\',[_vm._v(" Voting power in DAO ")]),_c(\'div\',{staticClass:"totalCRVlocked"},[_vm._v(" Total "),_c(\'img\',{staticClass:"icon small",attrs:{"src":_vm.publicPath + \'logo.png\'}}),_vm._v(" SWRV vote-locked: "),_c(\'span\',{class:{\'loading line\': _vm.SWRVLocked === null}}),_vm._v(" "),_c(\'span\',{directives:[{name:"show",rawName:"v-show",value:(_vm.SWRVLocked > 0),expression:"SWRVLocked > 0"}]},[_vm._v(" "+_vm._s(_vm.CRVLockedFormat)+" ")])]),_c(\'div\',{staticClass:"myCRV"},[_c(\'img\',{staticClass:"icon small",attrs:{"src":_vm.publicPath + \'logo.png\'}}),_vm._v(" SWRV balance: "+_vm._s(_vm.crvBalanceText)+" ")]),_c(\'div\',[_c(\'img\',{staticClass:"icon small",attrs:{"src":_vm.publicPath + \'logo.png\'}}),_vm._v(" My SWRV Locked: "+_vm._s(_vm.myLockedSWRVFormat)+" ")]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasvecrv),expression:"hasvecrv"}],staticClass:"veSWRVBalance"},[_c(\'div\',[_vm._v(" Balance in Voting Escrow: "+_vm._s(_vm.vecrvBalanceText)+" veSWRV ")]),_c(\'div\',[_c(\'img\',{staticClass:"icon small",attrs:{"src":_vm.publicPath + \'lock-solid.svg\'}}),_vm._v(" Locked until: "+_vm._s(_vm.lockTimeText)+" ")])]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.showchart),expression:"showchart"}]},[_c(\'p\'),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasvecrv),expression:"hasvecrv"}]},[_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.showend),expression:"showend"}],attrs:{"id":"showend","type":"checkbox"},domProps:{"checked":Array.isArray(_vm.showend)?_vm._i(_vm.showend,null)>-1:(_vm.showend)},on:{"change":function($event){var $$a=_vm.showend,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showend=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showend=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showend=$$c}}}}),_c(\'label\',{attrs:{"for":"showend"}},[_vm._v("Show until end")])]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasvecrv),expression:"hasvecrv"}],staticClass:"chartoptions"},[_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.showmypower),expression:"showmypower"}],attrs:{"id":"showmypower","type":"checkbox"},domProps:{"checked":Array.isArray(_vm.showmypower)?_vm._i(_vm.showmypower,null)>-1:(_vm.showmypower)},on:{"change":function($event){var $$a=_vm.showmypower,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showmypower=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showmypower=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showmypower=$$c}}}}),_c(\'label\',{attrs:{"for":"showmypower"}},[_vm._v("Show my voting power")]),_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.showdaopower),expression:"showdaopower"}],attrs:{"id":"showdaopower","type":"checkbox"},domProps:{"checked":Array.isArray(_vm.showdaopower)?_vm._i(_vm.showdaopower,null)>-1:(_vm.showdaopower)},on:{"change":function($event){var $$a=_vm.showdaopower,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showdaopower=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showdaopower=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showdaopower=$$c}}}}),_c(\'label\',{attrs:{"for":"showdaopower"}},[_vm._v("Show DAO voting power")])]),_c(\'p\'),_c(\'highcharts\',{directives:[{name:"show",rawName:"v-show",value:(_vm.showvelock),expression:"showvelock"}],ref:"highcharts",attrs:{"constructor-type":\'stockChart\',"options":_vm.chartdata}})],1),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.showvelock),expression:"showvelock"}],staticClass:"velock"},[_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasvecrv),expression:"hasvecrv"}],staticClass:"increaselock"},[_c(\'p\',{staticClass:"depositinputs"},[_c(\'label\',{attrs:{"for":"deposit"}},[_vm._v("Increase amount:")]),_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.deposit),expression:"deposit"}],class:{\'invalid\': _vm.isInvalidAmount},attrs:{"id":"deposit","type":"text"},domProps:{"value":(_vm.deposit)},on:{"input":function($event){if($event.target.composing){ return; }_vm.deposit=$event.target.value}}}),_c(\'span\',{staticClass:"maxbalance",on:{"click":_vm.setMaxBalance}},[_vm._v("Max: "+_vm._s(_vm.crvBalanceText))]),_c(\'br\'),_c(\'button\',{staticClass:"simplebutton onLeft",on:{"click":function($event){return _vm.confirmModal(\'increaseAmount\')}}},[_vm._v("Add")])]),_c(\'p\',{staticClass:"depositinputs calendar"},[_c(\'label\',{attrs:{"for":"incraselock"}},[_vm._v("Increase lock:")]),_c(\'datepicker\',{staticClass:"calendar",attrs:{"id":"increaselock","name":"increaselock","disabled-dates":_vm.disabledDates,"open-date":_vm.openDate,"calendar-class":"calendarClass","input-class":"inputClass","wrapper-class":"wrapperClass"},model:{value:(_vm.increaseLock),callback:function ($$v) {_vm.increaseLock=$$v},expression:"increaseLock"}}),_c(\'br\'),_c(\'button\',{staticClass:"simplebutton onLeft",on:{"click":function($event){return _vm.confirmModal(\'submitIncreaseLock\')}}},[_vm._v("Increase lock")])],1)]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(!_vm.hasvecrv),expression:"!hasvecrv"}],staticClass:"increaselock"},[_c(\'p\',{staticClass:"depositinputs"},[_c(\'label\',{attrs:{"for":"deposit"}},[_vm._v("Amount:")]),_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.deposit),expression:"deposit"}],class:{\'invalid\': _vm.isInvalidAmount},attrs:{"id":"deposit","type":"text"},domProps:{"value":(_vm.deposit)},on:{"input":function($event){if($event.target.composing){ return; }_vm.deposit=$event.target.value}}}),_c(\'span\',{staticClass:"maxbalance",on:{"click":_vm.setMaxBalance}},[_vm._v("Max: "+_vm._s(_vm.crvBalanceText))])]),_c(\'p\',{staticClass:"depositinputs"},[_c(\'label\',{attrs:{"for":"incraselock"}},[_vm._v("Choose lock time:")]),_c(\'datepicker\',{staticClass:"calendar",attrs:{"id":"increaselock","name":"increaselock","disabled-dates":_vm.disabledDates,"open-date":_vm.openDate,"calendar-class":"calendarClass","input-class":"inputClass","wrapper-class":"wrapperClass"},model:{value:(_vm.increaseLock),callback:function ($$v) {_vm.increaseLock=$$v},expression:"increaseLock"}})],1),_c(\'button\',{staticClass:"simplebutton",on:{"click":function($event){return _vm.confirmModal(\'createLock\')}}},[_vm._v("Create lock")])]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasEndedLock),expression:"hasEndedLock"}]},[_vm._v(" Your lock ended, you can withdraw your "),_c(\'img\',{staticClass:"icon small",attrs:{"src":_vm.publicPath + \'logo.png\'}}),_vm._v(" SWRV "),_c(\'button\',{staticClass:"simplebutton",on:{"click":_vm.withdraw}},[_vm._v("Withdraw")])]),_c(\'p\',{directives:[{name:"show",rawName:"v-show",value:(!_vm.userNeedsResetApproval),expression:"!userNeedsResetApproval"}],staticClass:"disable-approval"},[_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.inf_approval),expression:"inf_approval"}],attrs:{"id":"inf-approval","type":"checkbox","disabled":"","name":"inf-approval"},domProps:{"checked":Array.isArray(_vm.inf_approval)?_vm._i(_vm.inf_approval,null)>-1:(_vm.inf_approval)},on:{"change":function($event){var $$a=_vm.inf_approval,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.inf_approval=$$a.concat([$$v]))}else{$$i>-1&&(_vm.inf_approval=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.inf_approval=$$c}}}}),_vm._m(0)]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.userNeedsResetApproval),expression:"userNeedsResetApproval"}],staticClass:"reset-approval"},[_c(\'span\',{staticClass:"reset-approval-label"},[_vm._v("Approval issue please reset approval amount to zero.")]),_c(\'button\',{staticClass:"simplebutton",attrs:{"id":"resetApproval"},on:{"click":function($event){return _vm.confirmModal(\'resetApproval\')}}},[_vm._v("Reset Approval")]),_vm._m(1)]),_c(\'p\',[_vm._v(" Your starting voting power will be: "+_vm._s(_vm.newVotingPower())+" veSWRV ")]),_c(\'p\',{directives:[{name:"show",rawName:"v-show",value:(_vm.newVotingPower() < 2500),expression:"newVotingPower() < 2500"}],staticClass:"info-message gentle-message"},[_vm._v(" You need at least 2500 veSWRV to be able to create a vote ")])]),_c(\'gas-price\'),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(!_vm.showvelock),expression:"!showvelock"}]},[_vm._t("default")],2)],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'label\',{staticClass:"inf-approval-label",attrs:{"for":"inf-approval"}},[_vm._v("Infinite approval "),_c(\'span\',{staticClass:"tooltip"},[_vm._v("[?] "),_c(\'span\',{staticClass:"tooltiptext long"},[_vm._v(" Preapprove the contract to be able to spend coins on your behalf. max value will be used as default because of contract bug. ")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'span\',{staticClass:"reset-tooltip"},[_c(\'span\',{staticClass:"tooltip"},[_vm._v("[?] "),_c(\'span\',{staticClass:"tooltiptext long"},[_vm._v(" Because of a contract bug approval value can not be increased, set to 0 so approval can be set to a higher value ")])])])}]\n\n\n// CONCATENATED MODULE: ./src/components/minter/VotingEscrow.vue?vue&type=template&id=2f28084e&scoped=true&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js\nvar es_array_concat = __webpack_require__("99af");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js\nvar es_array_filter = __webpack_require__("4de4");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.find.js\nvar es_array_find = __webpack_require__("7db0");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js\nvar es_array_for_each = __webpack_require__("4160");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.join.js\nvar es_array_join = __webpack_require__("a15b");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js\nvar es_array_map = __webpack_require__("d81d");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.reduce.js\nvar es_array_reduce = __webpack_require__("13d5");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js\nvar es_array_slice = __webpack_require__("fb6a");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.splice.js\nvar es_array_splice = __webpack_require__("a434");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.now.js\nvar es_date_now = __webpack_require__("6eba");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-string.js\nvar es_date_to_string = __webpack_require__("0d03");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js\nvar es_function_name = __webpack_require__("b0c0");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js\nvar es_number_constructor = __webpack_require__("a9e3");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.to-fixed.js\nvar es_number_to_fixed = __webpack_require__("b680");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js\nvar es_object_keys = __webpack_require__("b64b");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__("d3b7");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js\nvar es_regexp_to_string = __webpack_require__("25f0");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js\nvar es_string_iterator = __webpack_require__("3ca3");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.starts-with.js\nvar es_string_starts_with = __webpack_require__("2ca0");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js\nvar web_dom_collections_for_each = __webpack_require__("159b");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js\nvar web_dom_collections_iterator = __webpack_require__("ddb0");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules\nvar toConsumableArray = __webpack_require__("2909");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\nvar objectSpread2 = __webpack_require__("5530");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\nvar taggedTemplateLiteral = __webpack_require__("8785");\n\n// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__("96cf");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__("1da1");\n\n// EXTERNAL MODULE: ./src/init.js\nvar init = __webpack_require__("d99e");\n\n// EXTERNAL MODULE: ./node_modules/graphql-tag/src/index.js\nvar src = __webpack_require__("9530");\nvar src_default = /*#__PURE__*/__webpack_require__.n(src);\n\n// EXTERNAL MODULE: ./node_modules/@aragon/connect-thegraph/dist/esm/index.js\nvar esm = __webpack_require__("d25d");\n\n// EXTERNAL MODULE: ./node_modules/highcharts/highcharts.js\nvar highcharts = __webpack_require__("ea7f");\nvar highcharts_default = /*#__PURE__*/__webpack_require__.n(highcharts);\n\n// EXTERNAL MODULE: ./node_modules/highcharts/modules/exporting.js\nvar exporting = __webpack_require__("0319");\nvar exporting_default = /*#__PURE__*/__webpack_require__.n(exporting);\n\n// EXTERNAL MODULE: ./node_modules/highcharts/modules/export-data.js\nvar export_data = __webpack_require__("d68a");\nvar export_data_default = /*#__PURE__*/__webpack_require__.n(export_data);\n\n// EXTERNAL MODULE: ./node_modules/highcharts-vue/dist/highcharts-vue.min.js\nvar highcharts_vue_min = __webpack_require__("4452");\n\n// EXTERNAL MODULE: ./node_modules/highcharts/modules/stock.js\nvar stock = __webpack_require__("37d8");\nvar stock_default = /*#__PURE__*/__webpack_require__.n(stock);\n\n// CONCATENATED MODULE: ./node_modules/vuejs-datepicker/dist/vuejs-datepicker.esm.js\nfunction _typeof(obj) {\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError("Cannot call a class as a function");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if ("value" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === \'function\') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nvar Language =\n/*#__PURE__*/\nfunction () {\n  function Language(language, months, monthsAbbr, days) {\n    _classCallCheck(this, Language);\n\n    this.language = language;\n    this.months = months;\n    this.monthsAbbr = monthsAbbr;\n    this.days = days;\n    this.rtl = false;\n    this.ymd = false;\n    this.yearSuffix = \'\';\n  }\n\n  _createClass(Language, [{\n    key: "language",\n    get: function get() {\n      return this._language;\n    },\n    set: function set(language) {\n      if (typeof language !== \'string\') {\n        throw new TypeError(\'Language must be a string\');\n      }\n\n      this._language = language;\n    }\n  }, {\n    key: "months",\n    get: function get() {\n      return this._months;\n    },\n    set: function set(months) {\n      if (months.length !== 12) {\n        throw new RangeError("There must be 12 months for ".concat(this.language, " language"));\n      }\n\n      this._months = months;\n    }\n  }, {\n    key: "monthsAbbr",\n    get: function get() {\n      return this._monthsAbbr;\n    },\n    set: function set(monthsAbbr) {\n      if (monthsAbbr.length !== 12) {\n        throw new RangeError("There must be 12 abbreviated months for ".concat(this.language, " language"));\n      }\n\n      this._monthsAbbr = monthsAbbr;\n    }\n  }, {\n    key: "days",\n    get: function get() {\n      return this._days;\n    },\n    set: function set(days) {\n      if (days.length !== 7) {\n        throw new RangeError("There must be 7 days for ".concat(this.language, " language"));\n      }\n\n      this._days = days;\n    }\n  }]);\n\n  return Language;\n}(); // eslint-disable-next-line\n\nvar en = new Language(\'English\', [\'January\', \'February\', \'March\', \'April\', \'May\', \'June\', \'July\', \'August\', \'September\', \'October\', \'November\', \'December\'], [\'Jan\', \'Feb\', \'Mar\', \'Apr\', \'May\', \'Jun\', \'Jul\', \'Aug\', \'Sep\', \'Oct\', \'Nov\', \'Dec\'], [\'Sun\', \'Mon\', \'Tue\', \'Wed\', \'Thu\', \'Fri\', \'Sat\']) // eslint-disable-next-line\n;\n\nvar utils = {\n  /**\n   * @type {Boolean}\n   */\n  useUtc: false,\n\n  /**\n   * Returns the full year, using UTC or not\n   * @param {Date} date\n   */\n  getFullYear: function getFullYear(date) {\n    return this.useUtc ? date.getUTCFullYear() : date.getFullYear();\n  },\n\n  /**\n   * Returns the month, using UTC or not\n   * @param {Date} date\n   */\n  getMonth: function getMonth(date) {\n    return this.useUtc ? date.getUTCMonth() : date.getMonth();\n  },\n\n  /**\n   * Returns the date, using UTC or not\n   * @param {Date} date\n   */\n  getDate: function getDate(date) {\n    return this.useUtc ? date.getUTCDate() : date.getDate();\n  },\n\n  /**\n   * Returns the day, using UTC or not\n   * @param {Date} date\n   */\n  getDay: function getDay(date) {\n    return this.useUtc ? date.getUTCDay() : date.getDay();\n  },\n\n  /**\n   * Returns the hours, using UTC or not\n   * @param {Date} date\n   */\n  getHours: function getHours(date) {\n    return this.useUtc ? date.getUTCHours() : date.getHours();\n  },\n\n  /**\n   * Returns the minutes, using UTC or not\n   * @param {Date} date\n   */\n  getMinutes: function getMinutes(date) {\n    return this.useUtc ? date.getUTCMinutes() : date.getMinutes();\n  },\n\n  /**\n   * Sets the full year, using UTC or not\n   * @param {Date} date\n   */\n  setFullYear: function setFullYear(date, value, useUtc) {\n    return this.useUtc ? date.setUTCFullYear(value) : date.setFullYear(value);\n  },\n\n  /**\n   * Sets the month, using UTC or not\n   * @param {Date} date\n   */\n  setMonth: function setMonth(date, value, useUtc) {\n    return this.useUtc ? date.setUTCMonth(value) : date.setMonth(value);\n  },\n\n  /**\n   * Sets the date, using UTC or not\n   * @param {Date} date\n   * @param {Number} value\n   */\n  setDate: function setDate(date, value, useUtc) {\n    return this.useUtc ? date.setUTCDate(value) : date.setDate(value);\n  },\n\n  /**\n   * Check if date1 is equivalent to date2, without comparing the time\n   * @see https://stackoverflow.com/a/6202196/4455925\n   * @param {Date} date1\n   * @param {Date} date2\n   */\n  compareDates: function compareDates(date1, date2) {\n    var d1 = new Date(date1.getTime());\n    var d2 = new Date(date2.getTime());\n\n    if (this.useUtc) {\n      d1.setUTCHours(0, 0, 0, 0);\n      d2.setUTCHours(0, 0, 0, 0);\n    } else {\n      d1.setHours(0, 0, 0, 0);\n      d2.setHours(0, 0, 0, 0);\n    }\n\n    return d1.getTime() === d2.getTime();\n  },\n\n  /**\n   * Validates a date object\n   * @param {Date} date - an object instantiated with the new Date constructor\n   * @return {Boolean}\n   */\n  isValidDate: function isValidDate(date) {\n    if (Object.prototype.toString.call(date) !== \'[object Date]\') {\n      return false;\n    }\n\n    return !isNaN(date.getTime());\n  },\n\n  /**\n   * Return abbreviated week day name\n   * @param {Date}\n   * @param {Array}\n   * @return {String}\n   */\n  getDayNameAbbr: function getDayNameAbbr(date, days) {\n    if (_typeof(date) !== \'object\') {\n      throw TypeError(\'Invalid Type\');\n    }\n\n    return days[this.getDay(date)];\n  },\n\n  /**\n   * Return name of the month\n   * @param {Number|Date}\n   * @param {Array}\n   * @return {String}\n   */\n  getMonthName: function getMonthName(month, months) {\n    if (!months) {\n      throw Error(\'missing 2nd parameter Months array\');\n    }\n\n    if (_typeof(month) === \'object\') {\n      return months[this.getMonth(month)];\n    }\n\n    if (typeof month === \'number\') {\n      return months[month];\n    }\n\n    throw TypeError(\'Invalid type\');\n  },\n\n  /**\n   * Return an abbreviated version of the month\n   * @param {Number|Date}\n   * @return {String}\n   */\n  getMonthNameAbbr: function getMonthNameAbbr(month, monthsAbbr) {\n    if (!monthsAbbr) {\n      throw Error(\'missing 2nd paramter Months array\');\n    }\n\n    if (_typeof(month) === \'object\') {\n      return monthsAbbr[this.getMonth(month)];\n    }\n\n    if (typeof month === \'number\') {\n      return monthsAbbr[month];\n    }\n\n    throw TypeError(\'Invalid type\');\n  },\n\n  /**\n   * Alternative get total number of days in month\n   * @param {Number} year\n   * @param {Number} m\n   * @return {Number}\n   */\n  daysInMonth: function daysInMonth(year, month) {\n    return /8|3|5|10/.test(month) ? 30 : month === 1 ? !(year % 4) && year % 100 || !(year % 400) ? 29 : 28 : 31;\n  },\n\n  /**\n   * Get nth suffix for date\n   * @param {Number} day\n   * @return {String}\n   */\n  getNthSuffix: function getNthSuffix(day) {\n    switch (day) {\n      case 1:\n      case 21:\n      case 31:\n        return \'st\';\n\n      case 2:\n      case 22:\n        return \'nd\';\n\n      case 3:\n      case 23:\n        return \'rd\';\n\n      default:\n        return \'th\';\n    }\n  },\n\n  /**\n   * Formats date object\n   * @param {Date}\n   * @param {String}\n   * @param {Object}\n   * @return {String}\n   */\n  formatDate: function formatDate(date, format, translation) {\n    translation = !translation ? en : translation;\n    var year = this.getFullYear(date);\n    var month = this.getMonth(date) + 1;\n    var day = this.getDate(date);\n    var str = format.replace(/dd/, (\'0\' + day).slice(-2)).replace(/d/, day).replace(/yyyy/, year).replace(/yy/, String(year).slice(2)).replace(/MMMM/, this.getMonthName(this.getMonth(date), translation.months)).replace(/MMM/, this.getMonthNameAbbr(this.getMonth(date), translation.monthsAbbr)).replace(/MM/, (\'0\' + month).slice(-2)).replace(/M(?!a|ä|e)/, month).replace(/su/, this.getNthSuffix(this.getDate(date))).replace(/D(?!e|é|i)/, this.getDayNameAbbr(date, translation.days));\n    return str;\n  },\n\n  /**\n   * Creates an array of dates for each day in between two dates.\n   * @param {Date} start\n   * @param {Date} end\n   * @return {Array}\n   */\n  createDateArray: function createDateArray(start, end) {\n    var dates = [];\n\n    while (start <= end) {\n      dates.push(new Date(start));\n      start = this.setDate(new Date(start), this.getDate(new Date(start)) + 1);\n    }\n\n    return dates;\n  },\n\n  /**\n   * method used as a prop validator for input values\n   * @param {*} val\n   * @return {Boolean}\n   */\n  validateDateInput: function validateDateInput(val) {\n    return val === null || val instanceof Date || typeof val === \'string\' || typeof val === \'number\';\n  }\n};\nvar makeDateUtils = function makeDateUtils(useUtc) {\n  return _objectSpread({}, utils, {\n    useUtc: useUtc\n  });\n};\nvar utils$1 = _objectSpread({}, utils) // eslint-disable-next-line\n;\n\nvar script = {\n  props: {\n    selectedDate: Date,\n    resetTypedDate: [Date],\n    format: [String, Function],\n    translation: Object,\n    inline: Boolean,\n    id: String,\n    name: String,\n    refName: String,\n    openDate: Date,\n    placeholder: String,\n    inputClass: [String, Object, Array],\n    clearButton: Boolean,\n    clearButtonIcon: String,\n    calendarButton: Boolean,\n    calendarButtonIcon: String,\n    calendarButtonIconContent: String,\n    disabled: Boolean,\n    required: Boolean,\n    typeable: Boolean,\n    bootstrapStyling: Boolean,\n    useUtc: Boolean\n  },\n  data: function data() {\n    var constructedDateUtils = makeDateUtils(this.useUtc);\n    return {\n      input: null,\n      typedDate: false,\n      utils: constructedDateUtils\n    };\n  },\n  computed: {\n    formattedValue: function formattedValue() {\n      if (!this.selectedDate) {\n        return null;\n      }\n\n      if (this.typedDate) {\n        return this.typedDate;\n      }\n\n      return typeof this.format === \'function\' ? this.format(this.selectedDate) : this.utils.formatDate(new Date(this.selectedDate), this.format, this.translation);\n    },\n    computedInputClass: function computedInputClass() {\n      if (this.bootstrapStyling) {\n        if (typeof this.inputClass === \'string\') {\n          return [this.inputClass, \'form-control\'].join(\' \');\n        }\n\n        return _objectSpread({\n          \'form-control\': true\n        }, this.inputClass);\n      }\n\n      return this.inputClass;\n    }\n  },\n  watch: {\n    resetTypedDate: function resetTypedDate() {\n      this.typedDate = false;\n    }\n  },\n  methods: {\n    showCalendar: function showCalendar() {\n      this.$emit(\'showCalendar\');\n    },\n\n    /**\n     * Attempt to parse a typed date\n     * @param {Event} event\n     */\n    parseTypedDate: function parseTypedDate(event) {\n      // close calendar if escape or enter are pressed\n      if ([27, // escape\n      13 // enter\n      ].includes(event.keyCode)) {\n        this.input.blur();\n      }\n\n      if (this.typeable) {\n        var typedDate = Date.parse(this.input.value);\n\n        if (!isNaN(typedDate)) {\n          this.typedDate = this.input.value;\n          this.$emit(\'typedDate\', new Date(this.typedDate));\n        }\n      }\n    },\n\n    /**\n     * nullify the typed date to defer to regular formatting\n     * called once the input is blurred\n     */\n    inputBlurred: function inputBlurred() {\n      if (this.typeable && isNaN(Date.parse(this.input.value))) {\n        this.clearDate();\n        this.input.value = null;\n        this.typedDate = null;\n      }\n\n      this.$emit(\'closeCalendar\');\n    },\n\n    /**\n     * emit a clearDate event\n     */\n    clearDate: function clearDate() {\n      this.$emit(\'clearDate\');\n    }\n  },\n  mounted: function mounted() {\n    this.input = this.$el.querySelector(\'input\');\n  }\n} // eslint-disable-next-line\n;\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier\n/* server only */\n, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n  if (typeof shadowMode !== \'boolean\') {\n    createInjectorSSR = createInjector;\n    createInjector = shadowMode;\n    shadowMode = false;\n  } // Vue.extend constructor export interop.\n\n\n  var options = typeof script === \'function\' ? script.options : script; // render functions\n\n  if (template && template.render) {\n    options.render = template.render;\n    options.staticRenderFns = template.staticRenderFns;\n    options._compiled = true; // functional template\n\n    if (isFunctionalTemplate) {\n      options.functional = true;\n    }\n  } // scopedId\n\n\n  if (scopeId) {\n    options._scopeId = scopeId;\n  }\n\n  var hook;\n\n  if (moduleIdentifier) {\n    // server build\n    hook = function hook(context) {\n      // 2.3 injection\n      context = context || // cached call\n      this.$vnode && this.$vnode.ssrContext || // stateful\n      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n      // 2.2 with runInNewContext: true\n\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== \'undefined\') {\n        context = __VUE_SSR_CONTEXT__;\n      } // inject component styles\n\n\n      if (style) {\n        style.call(this, createInjectorSSR(context));\n      } // register component module identifier for async chunk inference\n\n\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier);\n      }\n    }; // used by ssr in case component is cached and beforeCreate\n    // never gets called\n\n\n    options._ssrRegister = hook;\n  } else if (style) {\n    hook = shadowMode ? function () {\n      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n    } : function (context) {\n      style.call(this, createInjector(context));\n    };\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // register for functional component in vue file\n      var originalRender = options.render;\n\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context);\n        return originalRender(h, context);\n      };\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate;\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n    }\n  }\n\n  return script;\n}\n\nvar normalizeComponent_1 = normalizeComponent;\n\n/* script */\nconst __vue_script__ = script;\n\n/* template */\nvar __vue_render__ = function() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\n    "div",\n    { class: { "input-group": _vm.bootstrapStyling } },\n    [\n      _vm.calendarButton\n        ? _c(\n            "span",\n            {\n              staticClass: "vdp-datepicker__calendar-button",\n              class: { "input-group-prepend": _vm.bootstrapStyling },\n              style: { "cursor:not-allowed;": _vm.disabled },\n              on: { click: _vm.showCalendar }\n            },\n            [\n              _c(\n                "span",\n                { class: { "input-group-text": _vm.bootstrapStyling } },\n                [\n                  _c("i", { class: _vm.calendarButtonIcon }, [\n                    _vm._v(\n                      "\\n        " +\n                        _vm._s(_vm.calendarButtonIconContent) +\n                        "\\n        "\n                    ),\n                    !_vm.calendarButtonIcon\n                      ? _c("span", [_vm._v("…")])\n                      : _vm._e()\n                  ])\n                ]\n              )\n            ]\n          )\n        : _vm._e(),\n      _vm._v(" "),\n      _c("input", {\n        ref: _vm.refName,\n        class: _vm.computedInputClass,\n        attrs: {\n          type: _vm.inline ? "hidden" : "text",\n          name: _vm.name,\n          id: _vm.id,\n          "open-date": _vm.openDate,\n          placeholder: _vm.placeholder,\n          "clear-button": _vm.clearButton,\n          disabled: _vm.disabled,\n          required: _vm.required,\n          readonly: !_vm.typeable,\n          autocomplete: "off"\n        },\n        domProps: { value: _vm.formattedValue },\n        on: {\n          click: _vm.showCalendar,\n          keyup: _vm.parseTypedDate,\n          blur: _vm.inputBlurred\n        }\n      }),\n      _vm._v(" "),\n      _vm.clearButton && _vm.selectedDate\n        ? _c(\n            "span",\n            {\n              staticClass: "vdp-datepicker__clear-button",\n              class: { "input-group-append": _vm.bootstrapStyling },\n              on: {\n                click: function($event) {\n                  return _vm.clearDate()\n                }\n              }\n            },\n            [\n              _c(\n                "span",\n                { class: { "input-group-text": _vm.bootstrapStyling } },\n                [\n                  _c("i", { class: _vm.clearButtonIcon }, [\n                    !_vm.clearButtonIcon ? _c("span", [_vm._v("×")]) : _vm._e()\n                  ])\n                ]\n              )\n            ]\n          )\n        : _vm._e(),\n      _vm._v(" "),\n      _vm._t("afterDateInput")\n    ],\n    2\n  )\n};\nvar __vue_staticRenderFns__ = [];\n__vue_render__._withStripped = true;\n\n  /* style */\n  const __vue_inject_styles__ = undefined;\n  /* scoped */\n  const __vue_scope_id__ = undefined;\n  /* module identifier */\n  const __vue_module_identifier__ = undefined;\n  /* functional template */\n  const __vue_is_functional_template__ = false;\n  /* style inject */\n  \n  /* style inject SSR */\n  \n\n  \n  var DateInput = normalizeComponent_1(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    undefined,\n    undefined\n  );\n\n//\nvar script$1 = {\n  props: {\n    showDayView: Boolean,\n    selectedDate: Date,\n    pageDate: Date,\n    pageTimestamp: Number,\n    fullMonthName: Boolean,\n    allowedToShowView: Function,\n    dayCellContent: {\n      type: Function,\n      "default": function _default(day) {\n        return day.date;\n      }\n    },\n    disabledDates: Object,\n    highlighted: Object,\n    calendarClass: [String, Object, Array],\n    calendarStyle: Object,\n    translation: Object,\n    isRtl: Boolean,\n    mondayFirst: Boolean,\n    useUtc: Boolean\n  },\n  data: function data() {\n    var constructedDateUtils = makeDateUtils(this.useUtc);\n    return {\n      utils: constructedDateUtils\n    };\n  },\n  computed: {\n    /**\n     * Returns an array of day names\n     * @return {String[]}\n     */\n    daysOfWeek: function daysOfWeek() {\n      if (this.mondayFirst) {\n        var tempDays = this.translation.days.slice();\n        tempDays.push(tempDays.shift());\n        return tempDays;\n      }\n\n      return this.translation.days;\n    },\n\n    /**\n     * Returns the day number of the week less one for the first of the current month\n     * Used to show amount of empty cells before the first in the day calendar layout\n     * @return {Number}\n     */\n    blankDays: function blankDays() {\n      var d = this.pageDate;\n      var dObj = this.useUtc ? new Date(Date.UTC(d.getUTCFullYear(), d.getUTCMonth(), 1)) : new Date(d.getFullYear(), d.getMonth(), 1, d.getHours(), d.getMinutes());\n\n      if (this.mondayFirst) {\n        return this.utils.getDay(dObj) > 0 ? this.utils.getDay(dObj) - 1 : 6;\n      }\n\n      return this.utils.getDay(dObj);\n    },\n\n    /**\n     * @return {Object[]}\n     */\n    days: function days() {\n      var d = this.pageDate;\n      var days = []; // set up a new date object to the beginning of the current \'page\'\n\n      var dObj = this.useUtc ? new Date(Date.UTC(d.getUTCFullYear(), d.getUTCMonth(), 1)) : new Date(d.getFullYear(), d.getMonth(), 1, d.getHours(), d.getMinutes());\n      var daysInMonth = this.utils.daysInMonth(this.utils.getFullYear(dObj), this.utils.getMonth(dObj));\n\n      for (var i = 0; i < daysInMonth; i++) {\n        days.push({\n          date: this.utils.getDate(dObj),\n          timestamp: dObj.getTime(),\n          isSelected: this.isSelectedDate(dObj),\n          isDisabled: this.isDisabledDate(dObj),\n          isHighlighted: this.isHighlightedDate(dObj),\n          isHighlightStart: this.isHighlightStart(dObj),\n          isHighlightEnd: this.isHighlightEnd(dObj),\n          isToday: this.utils.compareDates(dObj, new Date()),\n          isWeekend: this.utils.getDay(dObj) === 0 || this.utils.getDay(dObj) === 6,\n          isSaturday: this.utils.getDay(dObj) === 6,\n          isSunday: this.utils.getDay(dObj) === 0\n        });\n        this.utils.setDate(dObj, this.utils.getDate(dObj) + 1);\n      }\n\n      return days;\n    },\n\n    /**\n     * Gets the name of the month the current page is on\n     * @return {String}\n     */\n    currMonthName: function currMonthName() {\n      var monthName = this.fullMonthName ? this.translation.months : this.translation.monthsAbbr;\n      return this.utils.getMonthNameAbbr(this.utils.getMonth(this.pageDate), monthName);\n    },\n\n    /**\n     * Gets the name of the year that current page is on\n     * @return {Number}\n     */\n    currYearName: function currYearName() {\n      var yearSuffix = this.translation.yearSuffix;\n      return "".concat(this.utils.getFullYear(this.pageDate)).concat(yearSuffix);\n    },\n\n    /**\n     * Is this translation using year/month/day format?\n     * @return {Boolean}\n     */\n    isYmd: function isYmd() {\n      return this.translation.ymd && this.translation.ymd === true;\n    },\n\n    /**\n     * Is the left hand navigation button disabled?\n     * @return {Boolean}\n     */\n    isLeftNavDisabled: function isLeftNavDisabled() {\n      return this.isRtl ? this.isNextMonthDisabled(this.pageTimestamp) : this.isPreviousMonthDisabled(this.pageTimestamp);\n    },\n\n    /**\n     * Is the right hand navigation button disabled?\n     * @return {Boolean}\n     */\n    isRightNavDisabled: function isRightNavDisabled() {\n      return this.isRtl ? this.isPreviousMonthDisabled(this.pageTimestamp) : this.isNextMonthDisabled(this.pageTimestamp);\n    }\n  },\n  methods: {\n    selectDate: function selectDate(date) {\n      if (date.isDisabled) {\n        this.$emit(\'selectedDisabled\', date);\n        return false;\n      }\n\n      this.$emit(\'selectDate\', date);\n    },\n\n    /**\n     * @return {Number}\n     */\n    getPageMonth: function getPageMonth() {\n      return this.utils.getMonth(this.pageDate);\n    },\n\n    /**\n     * Emit an event to show the month picker\n     */\n    showMonthCalendar: function showMonthCalendar() {\n      this.$emit(\'showMonthCalendar\');\n    },\n\n    /**\n     * Change the page month\n     * @param {Number} incrementBy\n     */\n    changeMonth: function changeMonth(incrementBy) {\n      var date = this.pageDate;\n      this.utils.setMonth(date, this.utils.getMonth(date) + incrementBy);\n      this.$emit(\'changedMonth\', date);\n    },\n\n    /**\n     * Decrement the page month\n     */\n    previousMonth: function previousMonth() {\n      if (!this.isPreviousMonthDisabled()) {\n        this.changeMonth(-1);\n      }\n    },\n\n    /**\n     * Is the previous month disabled?\n     * @return {Boolean}\n     */\n    isPreviousMonthDisabled: function isPreviousMonthDisabled() {\n      if (!this.disabledDates || !this.disabledDates.to) {\n        return false;\n      }\n\n      var d = this.pageDate;\n      return this.utils.getMonth(this.disabledDates.to) >= this.utils.getMonth(d) && this.utils.getFullYear(this.disabledDates.to) >= this.utils.getFullYear(d);\n    },\n\n    /**\n     * Increment the current page month\n     */\n    nextMonth: function nextMonth() {\n      if (!this.isNextMonthDisabled()) {\n        this.changeMonth(+1);\n      }\n    },\n\n    /**\n     * Is the next month disabled?\n     * @return {Boolean}\n     */\n    isNextMonthDisabled: function isNextMonthDisabled() {\n      if (!this.disabledDates || !this.disabledDates.from) {\n        return false;\n      }\n\n      var d = this.pageDate;\n      return this.utils.getMonth(this.disabledDates.from) <= this.utils.getMonth(d) && this.utils.getFullYear(this.disabledDates.from) <= this.utils.getFullYear(d);\n    },\n\n    /**\n     * Whether a day is selected\n     * @param {Date}\n     * @return {Boolean}\n     */\n    isSelectedDate: function isSelectedDate(dObj) {\n      return this.selectedDate && this.utils.compareDates(this.selectedDate, dObj);\n    },\n\n    /**\n     * Whether a day is disabled\n     * @param {Date}\n     * @return {Boolean}\n     */\n    isDisabledDate: function isDisabledDate(date) {\n      var _this = this;\n\n      var disabledDates = false;\n\n      if (typeof this.disabledDates === \'undefined\') {\n        return false;\n      }\n\n      if (typeof this.disabledDates.dates !== \'undefined\') {\n        this.disabledDates.dates.forEach(function (d) {\n          if (_this.utils.compareDates(date, d)) {\n            disabledDates = true;\n            return true;\n          }\n        });\n      }\n\n      if (typeof this.disabledDates.to !== \'undefined\' && this.disabledDates.to && date < this.disabledDates.to) {\n        disabledDates = true;\n      }\n\n      if (typeof this.disabledDates.from !== \'undefined\' && this.disabledDates.from && date > this.disabledDates.from) {\n        disabledDates = true;\n      }\n\n      if (typeof this.disabledDates.ranges !== \'undefined\') {\n        this.disabledDates.ranges.forEach(function (range) {\n          if (typeof range.from !== \'undefined\' && range.from && typeof range.to !== \'undefined\' && range.to) {\n            if (date < range.to && date > range.from) {\n              disabledDates = true;\n              return true;\n            }\n          }\n        });\n      }\n\n      if (typeof this.disabledDates.days !== \'undefined\' && this.disabledDates.days.indexOf(this.utils.getDay(date)) !== -1) {\n        disabledDates = true;\n      }\n\n      if (typeof this.disabledDates.daysOfMonth !== \'undefined\' && this.disabledDates.daysOfMonth.indexOf(this.utils.getDate(date)) !== -1) {\n        disabledDates = true;\n      }\n\n      if (typeof this.disabledDates.customPredictor === \'function\' && this.disabledDates.customPredictor(date)) {\n        disabledDates = true;\n      }\n\n      return disabledDates;\n    },\n\n    /**\n     * Whether a day is highlighted (only if it is not disabled already except when highlighted.includeDisabled is true)\n     * @param {Date}\n     * @return {Boolean}\n     */\n    isHighlightedDate: function isHighlightedDate(date) {\n      var _this2 = this;\n\n      if (!(this.highlighted && this.highlighted.includeDisabled) && this.isDisabledDate(date)) {\n        return false;\n      }\n\n      var highlighted = false;\n\n      if (typeof this.highlighted === \'undefined\') {\n        return false;\n      }\n\n      if (typeof this.highlighted.dates !== \'undefined\') {\n        this.highlighted.dates.forEach(function (d) {\n          if (_this2.utils.compareDates(date, d)) {\n            highlighted = true;\n            return true;\n          }\n        });\n      }\n\n      if (this.isDefined(this.highlighted.from) && this.isDefined(this.highlighted.to)) {\n        highlighted = date >= this.highlighted.from && date <= this.highlighted.to;\n      }\n\n      if (typeof this.highlighted.days !== \'undefined\' && this.highlighted.days.indexOf(this.utils.getDay(date)) !== -1) {\n        highlighted = true;\n      }\n\n      if (typeof this.highlighted.daysOfMonth !== \'undefined\' && this.highlighted.daysOfMonth.indexOf(this.utils.getDate(date)) !== -1) {\n        highlighted = true;\n      }\n\n      if (typeof this.highlighted.customPredictor === \'function\' && this.highlighted.customPredictor(date)) {\n        highlighted = true;\n      }\n\n      return highlighted;\n    },\n    dayClasses: function dayClasses(day) {\n      return {\n        \'selected\': day.isSelected,\n        \'disabled\': day.isDisabled,\n        \'highlighted\': day.isHighlighted,\n        \'today\': day.isToday,\n        \'weekend\': day.isWeekend,\n        \'sat\': day.isSaturday,\n        \'sun\': day.isSunday,\n        \'highlight-start\': day.isHighlightStart,\n        \'highlight-end\': day.isHighlightEnd\n      };\n    },\n\n    /**\n     * Whether a day is highlighted and it is the first date\n     * in the highlighted range of dates\n     * @param {Date}\n     * @return {Boolean}\n     */\n    isHighlightStart: function isHighlightStart(date) {\n      return this.isHighlightedDate(date) && this.highlighted.from instanceof Date && this.utils.getFullYear(this.highlighted.from) === this.utils.getFullYear(date) && this.utils.getMonth(this.highlighted.from) === this.utils.getMonth(date) && this.utils.getDate(this.highlighted.from) === this.utils.getDate(date);\n    },\n\n    /**\n     * Whether a day is highlighted and it is the first date\n     * in the highlighted range of dates\n     * @param {Date}\n     * @return {Boolean}\n     */\n    isHighlightEnd: function isHighlightEnd(date) {\n      return this.isHighlightedDate(date) && this.highlighted.to instanceof Date && this.utils.getFullYear(this.highlighted.to) === this.utils.getFullYear(date) && this.utils.getMonth(this.highlighted.to) === this.utils.getMonth(date) && this.utils.getDate(this.highlighted.to) === this.utils.getDate(date);\n    },\n\n    /**\n     * Helper\n     * @param  {mixed}  prop\n     * @return {Boolean}\n     */\n    isDefined: function isDefined(prop) {\n      return typeof prop !== \'undefined\' && prop;\n    }\n  } // eslint-disable-next-line\n\n};\n\n/* script */\nconst __vue_script__$1 = script$1;\n\n/* template */\nvar __vue_render__$1 = function() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\n    "div",\n    {\n      directives: [\n        {\n          name: "show",\n          rawName: "v-show",\n          value: _vm.showDayView,\n          expression: "showDayView"\n        }\n      ],\n      class: [_vm.calendarClass, "vdp-datepicker__calendar"],\n      style: _vm.calendarStyle,\n      on: {\n        mousedown: function($event) {\n          $event.preventDefault();\n        }\n      }\n    },\n    [\n      _vm._t("beforeCalendarHeader"),\n      _vm._v(" "),\n      _c("header", [\n        _c(\n          "span",\n          {\n            staticClass: "prev",\n            class: { disabled: _vm.isLeftNavDisabled },\n            on: {\n              click: function($event) {\n                _vm.isRtl ? _vm.nextMonth() : _vm.previousMonth();\n              }\n            }\n          },\n          [_vm._v("<")]\n        ),\n        _vm._v(" "),\n        _c(\n          "span",\n          {\n            staticClass: "day__month_btn",\n            class: _vm.allowedToShowView("month") ? "up" : "",\n            on: { click: _vm.showMonthCalendar }\n          },\n          [\n            _vm._v(\n              _vm._s(_vm.isYmd ? _vm.currYearName : _vm.currMonthName) +\n                " " +\n                _vm._s(_vm.isYmd ? _vm.currMonthName : _vm.currYearName)\n            )\n          ]\n        ),\n        _vm._v(" "),\n        _c(\n          "span",\n          {\n            staticClass: "next",\n            class: { disabled: _vm.isRightNavDisabled },\n            on: {\n              click: function($event) {\n                _vm.isRtl ? _vm.previousMonth() : _vm.nextMonth();\n              }\n            }\n          },\n          [_vm._v(">")]\n        )\n      ]),\n      _vm._v(" "),\n      _c(\n        "div",\n        { class: _vm.isRtl ? "flex-rtl" : "" },\n        [\n          _vm._l(_vm.daysOfWeek, function(d) {\n            return _c(\n              "span",\n              { key: d.timestamp, staticClass: "cell day-header" },\n              [_vm._v(_vm._s(d))]\n            )\n          }),\n          _vm._v(" "),\n          _vm.blankDays > 0\n            ? _vm._l(_vm.blankDays, function(d) {\n                return _c("span", {\n                  key: d.timestamp,\n                  staticClass: "cell day blank"\n                })\n              })\n            : _vm._e(),\n          _vm._l(_vm.days, function(day) {\n            return _c("span", {\n              key: day.timestamp,\n              staticClass: "cell day",\n              class: _vm.dayClasses(day),\n              domProps: { innerHTML: _vm._s(_vm.dayCellContent(day)) },\n              on: {\n                click: function($event) {\n                  return _vm.selectDate(day)\n                }\n              }\n            })\n          })\n        ],\n        2\n      )\n    ],\n    2\n  )\n};\nvar __vue_staticRenderFns__$1 = [];\n__vue_render__$1._withStripped = true;\n\n  /* style */\n  const __vue_inject_styles__$1 = undefined;\n  /* scoped */\n  const __vue_scope_id__$1 = undefined;\n  /* module identifier */\n  const __vue_module_identifier__$1 = undefined;\n  /* functional template */\n  const __vue_is_functional_template__$1 = false;\n  /* style inject */\n  \n  /* style inject SSR */\n  \n\n  \n  var PickerDay = normalizeComponent_1(\n    { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 },\n    __vue_inject_styles__$1,\n    __vue_script__$1,\n    __vue_scope_id__$1,\n    __vue_is_functional_template__$1,\n    __vue_module_identifier__$1,\n    undefined,\n    undefined\n  );\n\n//\nvar script$2 = {\n  props: {\n    showMonthView: Boolean,\n    selectedDate: Date,\n    pageDate: Date,\n    pageTimestamp: Number,\n    disabledDates: Object,\n    calendarClass: [String, Object, Array],\n    calendarStyle: Object,\n    translation: Object,\n    isRtl: Boolean,\n    allowedToShowView: Function,\n    useUtc: Boolean\n  },\n  data: function data() {\n    var constructedDateUtils = makeDateUtils(this.useUtc);\n    return {\n      utils: constructedDateUtils\n    };\n  },\n  computed: {\n    months: function months() {\n      var d = this.pageDate;\n      var months = []; // set up a new date object to the beginning of the current \'page\'\n\n      var dObj = this.useUtc ? new Date(Date.UTC(d.getUTCFullYear(), 0, d.getUTCDate())) : new Date(d.getFullYear(), 0, d.getDate(), d.getHours(), d.getMinutes());\n\n      for (var i = 0; i < 12; i++) {\n        months.push({\n          month: this.utils.getMonthName(i, this.translation.months),\n          timestamp: dObj.getTime(),\n          isSelected: this.isSelectedMonth(dObj),\n          isDisabled: this.isDisabledMonth(dObj)\n        });\n        this.utils.setMonth(dObj, this.utils.getMonth(dObj) + 1);\n      }\n\n      return months;\n    },\n\n    /**\n     * Get year name on current page.\n     * @return {String}\n     */\n    pageYearName: function pageYearName() {\n      var yearSuffix = this.translation.yearSuffix;\n      return "".concat(this.utils.getFullYear(this.pageDate)).concat(yearSuffix);\n    },\n\n    /**\n     * Is the left hand navigation disabled\n     * @return {Boolean}\n     */\n    isLeftNavDisabled: function isLeftNavDisabled() {\n      return this.isRtl ? this.isNextYearDisabled(this.pageTimestamp) : this.isPreviousYearDisabled(this.pageTimestamp);\n    },\n\n    /**\n     * Is the right hand navigation disabled\n     * @return {Boolean}\n     */\n    isRightNavDisabled: function isRightNavDisabled() {\n      return this.isRtl ? this.isPreviousYearDisabled(this.pageTimestamp) : this.isNextYearDisabled(this.pageTimestamp);\n    }\n  },\n  methods: {\n    /**\n     * Emits a selectMonth event\n     * @param {Object} month\n     */\n    selectMonth: function selectMonth(month) {\n      if (month.isDisabled) {\n        return false;\n      }\n\n      this.$emit(\'selectMonth\', month);\n    },\n\n    /**\n     * Changes the year up or down\n     * @param {Number} incrementBy\n     */\n    changeYear: function changeYear(incrementBy) {\n      var date = this.pageDate;\n      this.utils.setFullYear(date, this.utils.getFullYear(date) + incrementBy);\n      this.$emit(\'changedYear\', date);\n    },\n\n    /**\n     * Decrements the year\n     */\n    previousYear: function previousYear() {\n      if (!this.isPreviousYearDisabled()) {\n        this.changeYear(-1);\n      }\n    },\n\n    /**\n     * Checks if the previous year is disabled or not\n     * @return {Boolean}\n     */\n    isPreviousYearDisabled: function isPreviousYearDisabled() {\n      if (!this.disabledDates || !this.disabledDates.to) {\n        return false;\n      }\n\n      return this.utils.getFullYear(this.disabledDates.to) >= this.utils.getFullYear(this.pageDate);\n    },\n\n    /**\n     * Increments the year\n     */\n    nextYear: function nextYear() {\n      if (!this.isNextYearDisabled()) {\n        this.changeYear(1);\n      }\n    },\n\n    /**\n     * Checks if the next year is disabled or not\n     * @return {Boolean}\n     */\n    isNextYearDisabled: function isNextYearDisabled() {\n      if (!this.disabledDates || !this.disabledDates.from) {\n        return false;\n      }\n\n      return this.utils.getFullYear(this.disabledDates.from) <= this.utils.getFullYear(this.pageDate);\n    },\n\n    /**\n     * Emits an event that shows the year calendar\n     */\n    showYearCalendar: function showYearCalendar() {\n      this.$emit(\'showYearCalendar\');\n    },\n\n    /**\n     * Whether the selected date is in this month\n     * @param {Date}\n     * @return {Boolean}\n     */\n    isSelectedMonth: function isSelectedMonth(date) {\n      return this.selectedDate && this.utils.getFullYear(this.selectedDate) === this.utils.getFullYear(date) && this.utils.getMonth(this.selectedDate) === this.utils.getMonth(date);\n    },\n\n    /**\n     * Whether a month is disabled\n     * @param {Date}\n     * @return {Boolean}\n     */\n    isDisabledMonth: function isDisabledMonth(date) {\n      var disabledDates = false;\n\n      if (typeof this.disabledDates === \'undefined\') {\n        return false;\n      }\n\n      if (typeof this.disabledDates.to !== \'undefined\' && this.disabledDates.to) {\n        if (this.utils.getMonth(date) < this.utils.getMonth(this.disabledDates.to) && this.utils.getFullYear(date) <= this.utils.getFullYear(this.disabledDates.to) || this.utils.getFullYear(date) < this.utils.getFullYear(this.disabledDates.to)) {\n          disabledDates = true;\n        }\n      }\n\n      if (typeof this.disabledDates.from !== \'undefined\' && this.disabledDates.from) {\n        if (this.utils.getMonth(date) > this.utils.getMonth(this.disabledDates.from) && this.utils.getFullYear(date) >= this.utils.getFullYear(this.disabledDates.from) || this.utils.getFullYear(date) > this.utils.getFullYear(this.disabledDates.from)) {\n          disabledDates = true;\n        }\n      }\n\n      if (typeof this.disabledDates.customPredictor === \'function\' && this.disabledDates.customPredictor(date)) {\n        disabledDates = true;\n      }\n\n      return disabledDates;\n    }\n  } // eslint-disable-next-line\n\n};\n\n/* script */\nconst __vue_script__$2 = script$2;\n\n/* template */\nvar __vue_render__$2 = function() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\n    "div",\n    {\n      directives: [\n        {\n          name: "show",\n          rawName: "v-show",\n          value: _vm.showMonthView,\n          expression: "showMonthView"\n        }\n      ],\n      class: [_vm.calendarClass, "vdp-datepicker__calendar"],\n      style: _vm.calendarStyle,\n      on: {\n        mousedown: function($event) {\n          $event.preventDefault();\n        }\n      }\n    },\n    [\n      _vm._t("beforeCalendarHeader"),\n      _vm._v(" "),\n      _c("header", [\n        _c(\n          "span",\n          {\n            staticClass: "prev",\n            class: { disabled: _vm.isLeftNavDisabled },\n            on: {\n              click: function($event) {\n                _vm.isRtl ? _vm.nextYear() : _vm.previousYear();\n              }\n            }\n          },\n          [_vm._v("<")]\n        ),\n        _vm._v(" "),\n        _c(\n          "span",\n          {\n            staticClass: "month__year_btn",\n            class: _vm.allowedToShowView("year") ? "up" : "",\n            on: { click: _vm.showYearCalendar }\n          },\n          [_vm._v(_vm._s(_vm.pageYearName))]\n        ),\n        _vm._v(" "),\n        _c(\n          "span",\n          {\n            staticClass: "next",\n            class: { disabled: _vm.isRightNavDisabled },\n            on: {\n              click: function($event) {\n                _vm.isRtl ? _vm.previousYear() : _vm.nextYear();\n              }\n            }\n          },\n          [_vm._v(">")]\n        )\n      ]),\n      _vm._v(" "),\n      _vm._l(_vm.months, function(month) {\n        return _c(\n          "span",\n          {\n            key: month.timestamp,\n            staticClass: "cell month",\n            class: { selected: month.isSelected, disabled: month.isDisabled },\n            on: {\n              click: function($event) {\n                $event.stopPropagation();\n                return _vm.selectMonth(month)\n              }\n            }\n          },\n          [_vm._v(_vm._s(month.month))]\n        )\n      })\n    ],\n    2\n  )\n};\nvar __vue_staticRenderFns__$2 = [];\n__vue_render__$2._withStripped = true;\n\n  /* style */\n  const __vue_inject_styles__$2 = undefined;\n  /* scoped */\n  const __vue_scope_id__$2 = undefined;\n  /* module identifier */\n  const __vue_module_identifier__$2 = undefined;\n  /* functional template */\n  const __vue_is_functional_template__$2 = false;\n  /* style inject */\n  \n  /* style inject SSR */\n  \n\n  \n  var PickerMonth = normalizeComponent_1(\n    { render: __vue_render__$2, staticRenderFns: __vue_staticRenderFns__$2 },\n    __vue_inject_styles__$2,\n    __vue_script__$2,\n    __vue_scope_id__$2,\n    __vue_is_functional_template__$2,\n    __vue_module_identifier__$2,\n    undefined,\n    undefined\n  );\n\n//\nvar script$3 = {\n  props: {\n    showYearView: Boolean,\n    selectedDate: Date,\n    pageDate: Date,\n    pageTimestamp: Number,\n    disabledDates: Object,\n    highlighted: Object,\n    calendarClass: [String, Object, Array],\n    calendarStyle: Object,\n    translation: Object,\n    isRtl: Boolean,\n    allowedToShowView: Function,\n    useUtc: Boolean\n  },\n  computed: {\n    years: function years() {\n      var d = this.pageDate;\n      var years = []; // set up a new date object to the beginning of the current \'page\'7\n\n      var dObj = this.useUtc ? new Date(Date.UTC(Math.floor(d.getUTCFullYear() / 10) * 10, d.getUTCMonth(), d.getUTCDate())) : new Date(Math.floor(d.getFullYear() / 10) * 10, d.getMonth(), d.getDate(), d.getHours(), d.getMinutes());\n\n      for (var i = 0; i < 10; i++) {\n        years.push({\n          year: this.utils.getFullYear(dObj),\n          timestamp: dObj.getTime(),\n          isSelected: this.isSelectedYear(dObj),\n          isDisabled: this.isDisabledYear(dObj)\n        });\n        this.utils.setFullYear(dObj, this.utils.getFullYear(dObj) + 1);\n      }\n\n      return years;\n    },\n\n    /**\n     * @return {String}\n     */\n    getPageDecade: function getPageDecade() {\n      var decadeStart = Math.floor(this.utils.getFullYear(this.pageDate) / 10) * 10;\n      var decadeEnd = decadeStart + 9;\n      var yearSuffix = this.translation.yearSuffix;\n      return "".concat(decadeStart, " - ").concat(decadeEnd).concat(yearSuffix);\n    },\n\n    /**\n     * Is the left hand navigation button disabled?\n     * @return {Boolean}\n     */\n    isLeftNavDisabled: function isLeftNavDisabled() {\n      return this.isRtl ? this.isNextDecadeDisabled(this.pageTimestamp) : this.isPreviousDecadeDisabled(this.pageTimestamp);\n    },\n\n    /**\n     * Is the right hand navigation button disabled?\n     * @return {Boolean}\n     */\n    isRightNavDisabled: function isRightNavDisabled() {\n      return this.isRtl ? this.isPreviousDecadeDisabled(this.pageTimestamp) : this.isNextDecadeDisabled(this.pageTimestamp);\n    }\n  },\n  data: function data() {\n    var constructedDateUtils = makeDateUtils(this.useUtc);\n    return {\n      utils: constructedDateUtils\n    };\n  },\n  methods: {\n    selectYear: function selectYear(year) {\n      if (year.isDisabled) {\n        return false;\n      }\n\n      this.$emit(\'selectYear\', year);\n    },\n    changeYear: function changeYear(incrementBy) {\n      var date = this.pageDate;\n      this.utils.setFullYear(date, this.utils.getFullYear(date) + incrementBy);\n      this.$emit(\'changedDecade\', date);\n    },\n    previousDecade: function previousDecade() {\n      if (this.isPreviousDecadeDisabled()) {\n        return false;\n      }\n\n      this.changeYear(-10);\n    },\n    isPreviousDecadeDisabled: function isPreviousDecadeDisabled() {\n      if (!this.disabledDates || !this.disabledDates.to) {\n        return false;\n      }\n\n      var disabledYear = this.utils.getFullYear(this.disabledDates.to);\n      var lastYearInPreviousPage = Math.floor(this.utils.getFullYear(this.pageDate) / 10) * 10 - 1;\n      return disabledYear > lastYearInPreviousPage;\n    },\n    nextDecade: function nextDecade() {\n      if (this.isNextDecadeDisabled()) {\n        return false;\n      }\n\n      this.changeYear(10);\n    },\n    isNextDecadeDisabled: function isNextDecadeDisabled() {\n      if (!this.disabledDates || !this.disabledDates.from) {\n        return false;\n      }\n\n      var disabledYear = this.utils.getFullYear(this.disabledDates.from);\n      var firstYearInNextPage = Math.ceil(this.utils.getFullYear(this.pageDate) / 10) * 10;\n      return disabledYear < firstYearInNextPage;\n    },\n\n    /**\n     * Whether the selected date is in this year\n     * @param {Date}\n     * @return {Boolean}\n     */\n    isSelectedYear: function isSelectedYear(date) {\n      return this.selectedDate && this.utils.getFullYear(this.selectedDate) === this.utils.getFullYear(date);\n    },\n\n    /**\n     * Whether a year is disabled\n     * @param {Date}\n     * @return {Boolean}\n     */\n    isDisabledYear: function isDisabledYear(date) {\n      var disabledDates = false;\n\n      if (typeof this.disabledDates === \'undefined\' || !this.disabledDates) {\n        return false;\n      }\n\n      if (typeof this.disabledDates.to !== \'undefined\' && this.disabledDates.to) {\n        if (this.utils.getFullYear(date) < this.utils.getFullYear(this.disabledDates.to)) {\n          disabledDates = true;\n        }\n      }\n\n      if (typeof this.disabledDates.from !== \'undefined\' && this.disabledDates.from) {\n        if (this.utils.getFullYear(date) > this.utils.getFullYear(this.disabledDates.from)) {\n          disabledDates = true;\n        }\n      }\n\n      if (typeof this.disabledDates.customPredictor === \'function\' && this.disabledDates.customPredictor(date)) {\n        disabledDates = true;\n      }\n\n      return disabledDates;\n    }\n  } // eslint-disable-next-line\n\n};\n\n/* script */\nconst __vue_script__$3 = script$3;\n\n/* template */\nvar __vue_render__$3 = function() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\n    "div",\n    {\n      directives: [\n        {\n          name: "show",\n          rawName: "v-show",\n          value: _vm.showYearView,\n          expression: "showYearView"\n        }\n      ],\n      class: [_vm.calendarClass, "vdp-datepicker__calendar"],\n      style: _vm.calendarStyle,\n      on: {\n        mousedown: function($event) {\n          $event.preventDefault();\n        }\n      }\n    },\n    [\n      _vm._t("beforeCalendarHeader"),\n      _vm._v(" "),\n      _c("header", [\n        _c(\n          "span",\n          {\n            staticClass: "prev",\n            class: { disabled: _vm.isLeftNavDisabled },\n            on: {\n              click: function($event) {\n                _vm.isRtl ? _vm.nextDecade() : _vm.previousDecade();\n              }\n            }\n          },\n          [_vm._v("<")]\n        ),\n        _vm._v(" "),\n        _c("span", [_vm._v(_vm._s(_vm.getPageDecade))]),\n        _vm._v(" "),\n        _c(\n          "span",\n          {\n            staticClass: "next",\n            class: { disabled: _vm.isRightNavDisabled },\n            on: {\n              click: function($event) {\n                _vm.isRtl ? _vm.previousDecade() : _vm.nextDecade();\n              }\n            }\n          },\n          [_vm._v(">")]\n        )\n      ]),\n      _vm._v(" "),\n      _vm._l(_vm.years, function(year) {\n        return _c(\n          "span",\n          {\n            key: year.timestamp,\n            staticClass: "cell year",\n            class: { selected: year.isSelected, disabled: year.isDisabled },\n            on: {\n              click: function($event) {\n                $event.stopPropagation();\n                return _vm.selectYear(year)\n              }\n            }\n          },\n          [_vm._v(_vm._s(year.year))]\n        )\n      })\n    ],\n    2\n  )\n};\nvar __vue_staticRenderFns__$3 = [];\n__vue_render__$3._withStripped = true;\n\n  /* style */\n  const __vue_inject_styles__$3 = undefined;\n  /* scoped */\n  const __vue_scope_id__$3 = undefined;\n  /* module identifier */\n  const __vue_module_identifier__$3 = undefined;\n  /* functional template */\n  const __vue_is_functional_template__$3 = false;\n  /* style inject */\n  \n  /* style inject SSR */\n  \n\n  \n  var PickerYear = normalizeComponent_1(\n    { render: __vue_render__$3, staticRenderFns: __vue_staticRenderFns__$3 },\n    __vue_inject_styles__$3,\n    __vue_script__$3,\n    __vue_scope_id__$3,\n    __vue_is_functional_template__$3,\n    __vue_module_identifier__$3,\n    undefined,\n    undefined\n  );\n\n//\nvar script$4 = {\n  components: {\n    DateInput: DateInput,\n    PickerDay: PickerDay,\n    PickerMonth: PickerMonth,\n    PickerYear: PickerYear\n  },\n  props: {\n    value: {\n      validator: function validator(val) {\n        return utils$1.validateDateInput(val);\n      }\n    },\n    name: String,\n    refName: String,\n    id: String,\n    format: {\n      type: [String, Function],\n      "default": \'dd MMM yyyy\'\n    },\n    language: {\n      type: Object,\n      "default": function _default() {\n        return en;\n      }\n    },\n    openDate: {\n      validator: function validator(val) {\n        return utils$1.validateDateInput(val);\n      }\n    },\n    dayCellContent: Function,\n    fullMonthName: Boolean,\n    disabledDates: Object,\n    highlighted: Object,\n    placeholder: String,\n    inline: Boolean,\n    calendarClass: [String, Object, Array],\n    inputClass: [String, Object, Array],\n    wrapperClass: [String, Object, Array],\n    mondayFirst: Boolean,\n    clearButton: Boolean,\n    clearButtonIcon: String,\n    calendarButton: Boolean,\n    calendarButtonIcon: String,\n    calendarButtonIconContent: String,\n    bootstrapStyling: Boolean,\n    initialView: String,\n    disabled: Boolean,\n    required: Boolean,\n    typeable: Boolean,\n    useUtc: Boolean,\n    minimumView: {\n      type: String,\n      "default": \'day\'\n    },\n    maximumView: {\n      type: String,\n      "default": \'year\'\n    }\n  },\n  data: function data() {\n    var startDate = this.openDate ? new Date(this.openDate) : new Date();\n    var constructedDateUtils = makeDateUtils(this.useUtc);\n    var pageTimestamp = constructedDateUtils.setDate(startDate, 1);\n    return {\n      /*\n       * Vue cannot observe changes to a Date Object so date must be stored as a timestamp\n       * This represents the first day of the current viewing month\n       * {Number}\n       */\n      pageTimestamp: pageTimestamp,\n\n      /*\n       * Selected Date\n       * {Date}\n       */\n      selectedDate: null,\n\n      /*\n       * Flags to show calendar views\n       * {Boolean}\n       */\n      showDayView: false,\n      showMonthView: false,\n      showYearView: false,\n\n      /*\n       * Positioning\n       */\n      calendarHeight: 0,\n      resetTypedDate: new Date(),\n      utils: constructedDateUtils\n    };\n  },\n  watch: {\n    value: function value(_value) {\n      this.setValue(_value);\n    },\n    openDate: function openDate() {\n      this.setPageDate();\n    },\n    initialView: function initialView() {\n      this.setInitialView();\n    }\n  },\n  computed: {\n    computedInitialView: function computedInitialView() {\n      if (!this.initialView) {\n        return this.minimumView;\n      }\n\n      return this.initialView;\n    },\n    pageDate: function pageDate() {\n      return new Date(this.pageTimestamp);\n    },\n    translation: function translation() {\n      return this.language;\n    },\n    calendarStyle: function calendarStyle() {\n      return {\n        position: this.isInline ? \'static\' : undefined\n      };\n    },\n    isOpen: function isOpen() {\n      return this.showDayView || this.showMonthView || this.showYearView;\n    },\n    isInline: function isInline() {\n      return !!this.inline;\n    },\n    isRtl: function isRtl() {\n      return this.translation.rtl === true;\n    }\n  },\n  methods: {\n    /**\n     * Called in the event that the user navigates to date pages and\n     * closes the picker without selecting a date.\n     */\n    resetDefaultPageDate: function resetDefaultPageDate() {\n      if (this.selectedDate === null) {\n        this.setPageDate();\n        return;\n      }\n\n      this.setPageDate(this.selectedDate);\n    },\n\n    /**\n     * Effectively a toggle to show/hide the calendar\n     * @return {mixed}\n     */\n    showCalendar: function showCalendar() {\n      if (this.disabled || this.isInline) {\n        return false;\n      }\n\n      if (this.isOpen) {\n        return this.close(true);\n      }\n\n      this.setInitialView();\n    },\n\n    /**\n     * Sets the initial picker page view: day, month or year\n     */\n    setInitialView: function setInitialView() {\n      var initialView = this.computedInitialView;\n\n      if (!this.allowedToShowView(initialView)) {\n        throw new Error("initialView \'".concat(this.initialView, "\' cannot be rendered based on minimum \'").concat(this.minimumView, "\' and maximum \'").concat(this.maximumView, "\'"));\n      }\n\n      switch (initialView) {\n        case \'year\':\n          this.showYearCalendar();\n          break;\n\n        case \'month\':\n          this.showMonthCalendar();\n          break;\n\n        default:\n          this.showDayCalendar();\n          break;\n      }\n    },\n\n    /**\n     * Are we allowed to show a specific picker view?\n     * @param {String} view\n     * @return {Boolean}\n     */\n    allowedToShowView: function allowedToShowView(view) {\n      var views = [\'day\', \'month\', \'year\'];\n      var minimumViewIndex = views.indexOf(this.minimumView);\n      var maximumViewIndex = views.indexOf(this.maximumView);\n      var viewIndex = views.indexOf(view);\n      return viewIndex >= minimumViewIndex && viewIndex <= maximumViewIndex;\n    },\n\n    /**\n     * Show the day picker\n     * @return {Boolean}\n     */\n    showDayCalendar: function showDayCalendar() {\n      if (!this.allowedToShowView(\'day\')) {\n        return false;\n      }\n\n      this.close();\n      this.showDayView = true;\n      return true;\n    },\n\n    /**\n     * Show the month picker\n     * @return {Boolean}\n     */\n    showMonthCalendar: function showMonthCalendar() {\n      if (!this.allowedToShowView(\'month\')) {\n        return false;\n      }\n\n      this.close();\n      this.showMonthView = true;\n      return true;\n    },\n\n    /**\n     * Show the year picker\n     * @return {Boolean}\n     */\n    showYearCalendar: function showYearCalendar() {\n      if (!this.allowedToShowView(\'year\')) {\n        return false;\n      }\n\n      this.close();\n      this.showYearView = true;\n      return true;\n    },\n\n    /**\n     * Set the selected date\n     * @param {Number} timestamp\n     */\n    setDate: function setDate(timestamp) {\n      var date = new Date(timestamp);\n      this.selectedDate = date;\n      this.setPageDate(date);\n      this.$emit(\'selected\', date);\n      this.$emit(\'input\', date);\n    },\n\n    /**\n     * Clear the selected date\n     */\n    clearDate: function clearDate() {\n      this.selectedDate = null;\n      this.setPageDate();\n      this.$emit(\'selected\', null);\n      this.$emit(\'input\', null);\n      this.$emit(\'cleared\');\n    },\n\n    /**\n     * @param {Object} date\n     */\n    selectDate: function selectDate(date) {\n      this.setDate(date.timestamp);\n\n      if (!this.isInline) {\n        this.close(true);\n      }\n\n      this.resetTypedDate = new Date();\n    },\n\n    /**\n     * @param {Object} date\n     */\n    selectDisabledDate: function selectDisabledDate(date) {\n      this.$emit(\'selectedDisabled\', date);\n    },\n\n    /**\n     * @param {Object} month\n     */\n    selectMonth: function selectMonth(month) {\n      var date = new Date(month.timestamp);\n\n      if (this.allowedToShowView(\'day\')) {\n        this.setPageDate(date);\n        this.$emit(\'changedMonth\', month);\n        this.showDayCalendar();\n      } else {\n        this.selectDate(month);\n      }\n    },\n\n    /**\n     * @param {Object} year\n     */\n    selectYear: function selectYear(year) {\n      var date = new Date(year.timestamp);\n\n      if (this.allowedToShowView(\'month\')) {\n        this.setPageDate(date);\n        this.$emit(\'changedYear\', year);\n        this.showMonthCalendar();\n      } else {\n        this.selectDate(year);\n      }\n    },\n\n    /**\n     * Set the datepicker value\n     * @param {Date|String|Number|null} date\n     */\n    setValue: function setValue(date) {\n      if (typeof date === \'string\' || typeof date === \'number\') {\n        var parsed = new Date(date);\n        date = isNaN(parsed.valueOf()) ? null : parsed;\n      }\n\n      if (!date) {\n        this.setPageDate();\n        this.selectedDate = null;\n        return;\n      }\n\n      this.selectedDate = date;\n      this.setPageDate(date);\n    },\n\n    /**\n     * Sets the date that the calendar should open on\n     */\n    setPageDate: function setPageDate(date) {\n      if (!date) {\n        if (this.openDate) {\n          date = new Date(this.openDate);\n        } else {\n          date = new Date();\n        }\n      }\n\n      this.pageTimestamp = this.utils.setDate(new Date(date), 1);\n    },\n\n    /**\n     * Handles a month change from the day picker\n     */\n    handleChangedMonthFromDayPicker: function handleChangedMonthFromDayPicker(date) {\n      this.setPageDate(date);\n      this.$emit(\'changedMonth\', date);\n    },\n\n    /**\n     * Set the date from a typedDate event\n     */\n    setTypedDate: function setTypedDate(date) {\n      this.setDate(date.getTime());\n    },\n\n    /**\n     * Close all calendar layers\n     * @param {Boolean} emitEvent - emit close event\n     */\n    close: function close(emitEvent) {\n      this.showDayView = this.showMonthView = this.showYearView = false;\n\n      if (!this.isInline) {\n        if (emitEvent) {\n          this.$emit(\'closed\');\n        }\n\n        document.removeEventListener(\'click\', this.clickOutside, false);\n      }\n    },\n\n    /**\n     * Initiate the component\n     */\n    init: function init() {\n      if (this.value) {\n        this.setValue(this.value);\n      }\n\n      if (this.isInline) {\n        this.setInitialView();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n  }\n} // eslint-disable-next-line\n;\n\nvar isOldIE = typeof navigator !== \'undefined\' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\nfunction createInjector(context) {\n  return function (id, style) {\n    return addStyle(id, style);\n  };\n}\nvar HEAD = document.head || document.getElementsByTagName(\'head\')[0];\nvar styles = {};\n\nfunction addStyle(id, css) {\n  var group = isOldIE ? css.media || \'default\' : id;\n  var style = styles[group] || (styles[group] = {\n    ids: new Set(),\n    styles: []\n  });\n\n  if (!style.ids.has(id)) {\n    style.ids.add(id);\n    var code = css.source;\n\n    if (css.map) {\n      // https://developer.chrome.com/devtools/docs/javascript-debugging\n      // this makes source maps inside style tags work properly in Chrome\n      code += \'\\n/*# sourceURL=\' + css.map.sources[0] + \' */\'; // http://stackoverflow.com/a/26603875\n\n      code += \'\\n/*# sourceMappingURL=data:application/json;base64,\' + btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) + \' */\';\n    }\n\n    if (!style.element) {\n      style.element = document.createElement(\'style\');\n      style.element.type = \'text/css\';\n      if (css.media) style.element.setAttribute(\'media\', css.media);\n      HEAD.appendChild(style.element);\n    }\n\n    if (\'styleSheet\' in style.element) {\n      style.styles.push(code);\n      style.element.styleSheet.cssText = style.styles.filter(Boolean).join(\'\\n\');\n    } else {\n      var index = style.ids.size - 1;\n      var textNode = document.createTextNode(code);\n      var nodes = style.element.childNodes;\n      if (nodes[index]) style.element.removeChild(nodes[index]);\n      if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n    }\n  }\n}\n\nvar browser = createInjector;\n\n/* script */\nconst __vue_script__$4 = script$4;\n\n/* template */\nvar __vue_render__$4 = function() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\n    "div",\n    {\n      staticClass: "vdp-datepicker",\n      class: [_vm.wrapperClass, _vm.isRtl ? "rtl" : ""]\n    },\n    [\n      _c(\n        "date-input",\n        {\n          attrs: {\n            selectedDate: _vm.selectedDate,\n            resetTypedDate: _vm.resetTypedDate,\n            format: _vm.format,\n            translation: _vm.translation,\n            inline: _vm.inline,\n            id: _vm.id,\n            name: _vm.name,\n            refName: _vm.refName,\n            openDate: _vm.openDate,\n            placeholder: _vm.placeholder,\n            inputClass: _vm.inputClass,\n            typeable: _vm.typeable,\n            clearButton: _vm.clearButton,\n            clearButtonIcon: _vm.clearButtonIcon,\n            calendarButton: _vm.calendarButton,\n            calendarButtonIcon: _vm.calendarButtonIcon,\n            calendarButtonIconContent: _vm.calendarButtonIconContent,\n            disabled: _vm.disabled,\n            required: _vm.required,\n            bootstrapStyling: _vm.bootstrapStyling,\n            "use-utc": _vm.useUtc\n          },\n          on: {\n            showCalendar: _vm.showCalendar,\n            closeCalendar: _vm.close,\n            typedDate: _vm.setTypedDate,\n            clearDate: _vm.clearDate\n          }\n        },\n        [_vm._t("afterDateInput", null, { slot: "afterDateInput" })],\n        2\n      ),\n      _vm._v(" "),\n      _vm.allowedToShowView("day")\n        ? _c(\n            "picker-day",\n            {\n              attrs: {\n                pageDate: _vm.pageDate,\n                selectedDate: _vm.selectedDate,\n                showDayView: _vm.showDayView,\n                fullMonthName: _vm.fullMonthName,\n                allowedToShowView: _vm.allowedToShowView,\n                disabledDates: _vm.disabledDates,\n                highlighted: _vm.highlighted,\n                calendarClass: _vm.calendarClass,\n                calendarStyle: _vm.calendarStyle,\n                translation: _vm.translation,\n                pageTimestamp: _vm.pageTimestamp,\n                isRtl: _vm.isRtl,\n                mondayFirst: _vm.mondayFirst,\n                dayCellContent: _vm.dayCellContent,\n                "use-utc": _vm.useUtc\n              },\n              on: {\n                changedMonth: _vm.handleChangedMonthFromDayPicker,\n                selectDate: _vm.selectDate,\n                showMonthCalendar: _vm.showMonthCalendar,\n                selectedDisabled: _vm.selectDisabledDate\n              }\n            },\n            [\n              _vm._t("beforeCalendarHeader", null, {\n                slot: "beforeCalendarHeader"\n              })\n            ],\n            2\n          )\n        : _vm._e(),\n      _vm._v(" "),\n      _vm.allowedToShowView("month")\n        ? _c(\n            "picker-month",\n            {\n              attrs: {\n                pageDate: _vm.pageDate,\n                selectedDate: _vm.selectedDate,\n                showMonthView: _vm.showMonthView,\n                allowedToShowView: _vm.allowedToShowView,\n                disabledDates: _vm.disabledDates,\n                calendarClass: _vm.calendarClass,\n                calendarStyle: _vm.calendarStyle,\n                translation: _vm.translation,\n                isRtl: _vm.isRtl,\n                "use-utc": _vm.useUtc\n              },\n              on: {\n                selectMonth: _vm.selectMonth,\n                showYearCalendar: _vm.showYearCalendar,\n                changedYear: _vm.setPageDate\n              }\n            },\n            [\n              _vm._t("beforeCalendarHeader", null, {\n                slot: "beforeCalendarHeader"\n              })\n            ],\n            2\n          )\n        : _vm._e(),\n      _vm._v(" "),\n      _vm.allowedToShowView("year")\n        ? _c(\n            "picker-year",\n            {\n              attrs: {\n                pageDate: _vm.pageDate,\n                selectedDate: _vm.selectedDate,\n                showYearView: _vm.showYearView,\n                allowedToShowView: _vm.allowedToShowView,\n                disabledDates: _vm.disabledDates,\n                calendarClass: _vm.calendarClass,\n                calendarStyle: _vm.calendarStyle,\n                translation: _vm.translation,\n                isRtl: _vm.isRtl,\n                "use-utc": _vm.useUtc\n              },\n              on: { selectYear: _vm.selectYear, changedDecade: _vm.setPageDate }\n            },\n            [\n              _vm._t("beforeCalendarHeader", null, {\n                slot: "beforeCalendarHeader"\n              })\n            ],\n            2\n          )\n        : _vm._e()\n    ],\n    1\n  )\n};\nvar __vue_staticRenderFns__$4 = [];\n__vue_render__$4._withStripped = true;\n\n  /* style */\n  const __vue_inject_styles__$4 = function (inject) {\n    if (!inject) return\n    inject("data-v-64ca2bb5_0", { source: ".rtl {\\n  direction: rtl;\\n}\\n.vdp-datepicker {\\n  position: relative;\\n  text-align: left;\\n}\\n.vdp-datepicker * {\\n  box-sizing: border-box;\\n}\\n.vdp-datepicker__calendar {\\n  position: absolute;\\n  z-index: 100;\\n  background: #fff;\\n  width: 300px;\\n  border: 1px solid #ccc;\\n}\\n.vdp-datepicker__calendar header {\\n  display: block;\\n  line-height: 40px;\\n}\\n.vdp-datepicker__calendar header span {\\n  display: inline-block;\\n  text-align: center;\\n  width: 71.42857142857143%;\\n  float: left;\\n}\\n.vdp-datepicker__calendar header .prev,\\n.vdp-datepicker__calendar header .next {\\n  width: 14.285714285714286%;\\n  float: left;\\n  text-indent: -10000px;\\n  position: relative;\\n}\\n.vdp-datepicker__calendar header .prev:after,\\n.vdp-datepicker__calendar header .next:after {\\n  content: \'\';\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  transform: translateX(-50%) translateY(-50%);\\n  border: 6px solid transparent;\\n}\\n.vdp-datepicker__calendar header .prev:after {\\n  border-right: 10px solid #000;\\n  margin-left: -5px;\\n}\\n.vdp-datepicker__calendar header .prev.disabled:after {\\n  border-right: 10px solid #ddd;\\n}\\n.vdp-datepicker__calendar header .next:after {\\n  border-left: 10px solid #000;\\n  margin-left: 5px;\\n}\\n.vdp-datepicker__calendar header .next.disabled:after {\\n  border-left: 10px solid #ddd;\\n}\\n.vdp-datepicker__calendar header .prev:not(.disabled),\\n.vdp-datepicker__calendar header .next:not(.disabled),\\n.vdp-datepicker__calendar header .up:not(.disabled) {\\n  cursor: pointer;\\n}\\n.vdp-datepicker__calendar header .prev:not(.disabled):hover,\\n.vdp-datepicker__calendar header .next:not(.disabled):hover,\\n.vdp-datepicker__calendar header .up:not(.disabled):hover {\\n  background: #eee;\\n}\\n.vdp-datepicker__calendar .disabled {\\n  color: #ddd;\\n  cursor: default;\\n}\\n.vdp-datepicker__calendar .flex-rtl {\\n  display: flex;\\n  width: inherit;\\n  flex-wrap: wrap;\\n}\\n.vdp-datepicker__calendar .cell {\\n  display: inline-block;\\n  padding: 0 5px;\\n  width: 14.285714285714286%;\\n  height: 40px;\\n  line-height: 40px;\\n  text-align: center;\\n  vertical-align: middle;\\n  border: 1px solid transparent;\\n}\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day,\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month,\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year {\\n  cursor: pointer;\\n}\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day:hover,\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month:hover,\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year:hover {\\n  border: 1px solid #4bd;\\n}\\n.vdp-datepicker__calendar .cell.selected {\\n  background: #4bd;\\n}\\n.vdp-datepicker__calendar .cell.selected:hover {\\n  background: #4bd;\\n}\\n.vdp-datepicker__calendar .cell.selected.highlighted {\\n  background: #4bd;\\n}\\n.vdp-datepicker__calendar .cell.highlighted {\\n  background: #cae5ed;\\n}\\n.vdp-datepicker__calendar .cell.highlighted.disabled {\\n  color: #a3a3a3;\\n}\\n.vdp-datepicker__calendar .cell.grey {\\n  color: #888;\\n}\\n.vdp-datepicker__calendar .cell.grey:hover {\\n  background: inherit;\\n}\\n.vdp-datepicker__calendar .cell.day-header {\\n  font-size: 75%;\\n  white-space: nowrap;\\n  cursor: inherit;\\n}\\n.vdp-datepicker__calendar .cell.day-header:hover {\\n  background: inherit;\\n}\\n.vdp-datepicker__calendar .month,\\n.vdp-datepicker__calendar .year {\\n  width: 33.333%;\\n}\\n.vdp-datepicker__clear-button,\\n.vdp-datepicker__calendar-button {\\n  cursor: pointer;\\n  font-style: normal;\\n}\\n.vdp-datepicker__clear-button.disabled,\\n.vdp-datepicker__calendar-button.disabled {\\n  color: #999;\\n  cursor: default;\\n}\\n", map: {"version":3,"sources":["Datepicker.vue"],"names":[],"mappings":"AAAA;EACE,cAAc;AAChB;AACA;EACE,kBAAkB;EAClB,gBAAgB;AAClB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,kBAAkB;EAClB,YAAY;EACZ,gBAAgB;EAChB,YAAY;EACZ,sBAAsB;AACxB;AACA;EACE,cAAc;EACd,iBAAiB;AACnB;AACA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,yBAAyB;EACzB,WAAW;AACb;AACA;;EAEE,0BAA0B;EAC1B,WAAW;EACX,qBAAqB;EACrB,kBAAkB;AACpB;AACA;;EAEE,WAAW;EACX,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,4CAA4C;EAC5C,6BAA6B;AAC/B;AACA;EACE,6BAA6B;EAC7B,iBAAiB;AACnB;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,4BAA4B;EAC5B,gBAAgB;AAClB;AACA;EACE,4BAA4B;AAC9B;AACA;;;EAGE,eAAe;AACjB;AACA;;;EAGE,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,aAAa;EACb,cAAc;EACd,eAAe;AACjB;AACA;EACE,qBAAqB;EACrB,cAAc;EACd,0BAA0B;EAC1B,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,sBAAsB;EACtB,6BAA6B;AAC/B;AACA;;;EAGE,eAAe;AACjB;AACA;;;EAGE,sBAAsB;AACxB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,cAAc;AAChB;AACA;EACE,WAAW;AACb;AACA;EACE,mBAAmB;AACrB;AACA;EACE,cAAc;EACd,mBAAmB;EACnB,eAAe;AACjB;AACA;EACE,mBAAmB;AACrB;AACA;;EAEE,cAAc;AAChB;AACA;;EAEE,eAAe;EACf,kBAAkB;AACpB;AACA;;EAEE,WAAW;EACX,eAAe;AACjB","file":"Datepicker.vue","sourcesContent":[".rtl {\\n  direction: rtl;\\n}\\n.vdp-datepicker {\\n  position: relative;\\n  text-align: left;\\n}\\n.vdp-datepicker * {\\n  box-sizing: border-box;\\n}\\n.vdp-datepicker__calendar {\\n  position: absolute;\\n  z-index: 100;\\n  background: #fff;\\n  width: 300px;\\n  border: 1px solid #ccc;\\n}\\n.vdp-datepicker__calendar header {\\n  display: block;\\n  line-height: 40px;\\n}\\n.vdp-datepicker__calendar header span {\\n  display: inline-block;\\n  text-align: center;\\n  width: 71.42857142857143%;\\n  float: left;\\n}\\n.vdp-datepicker__calendar header .prev,\\n.vdp-datepicker__calendar header .next {\\n  width: 14.285714285714286%;\\n  float: left;\\n  text-indent: -10000px;\\n  position: relative;\\n}\\n.vdp-datepicker__calendar header .prev:after,\\n.vdp-datepicker__calendar header .next:after {\\n  content: \'\';\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  transform: translateX(-50%) translateY(-50%);\\n  border: 6px solid transparent;\\n}\\n.vdp-datepicker__calendar header .prev:after {\\n  border-right: 10px solid #000;\\n  margin-left: -5px;\\n}\\n.vdp-datepicker__calendar header .prev.disabled:after {\\n  border-right: 10px solid #ddd;\\n}\\n.vdp-datepicker__calendar header .next:after {\\n  border-left: 10px solid #000;\\n  margin-left: 5px;\\n}\\n.vdp-datepicker__calendar header .next.disabled:after {\\n  border-left: 10px solid #ddd;\\n}\\n.vdp-datepicker__calendar header .prev:not(.disabled),\\n.vdp-datepicker__calendar header .next:not(.disabled),\\n.vdp-datepicker__calendar header .up:not(.disabled) {\\n  cursor: pointer;\\n}\\n.vdp-datepicker__calendar header .prev:not(.disabled):hover,\\n.vdp-datepicker__calendar header .next:not(.disabled):hover,\\n.vdp-datepicker__calendar header .up:not(.disabled):hover {\\n  background: #eee;\\n}\\n.vdp-datepicker__calendar .disabled {\\n  color: #ddd;\\n  cursor: default;\\n}\\n.vdp-datepicker__calendar .flex-rtl {\\n  display: flex;\\n  width: inherit;\\n  flex-wrap: wrap;\\n}\\n.vdp-datepicker__calendar .cell {\\n  display: inline-block;\\n  padding: 0 5px;\\n  width: 14.285714285714286%;\\n  height: 40px;\\n  line-height: 40px;\\n  text-align: center;\\n  vertical-align: middle;\\n  border: 1px solid transparent;\\n}\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day,\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month,\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year {\\n  cursor: pointer;\\n}\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).day:hover,\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).month:hover,\\n.vdp-datepicker__calendar .cell:not(.blank):not(.disabled).year:hover {\\n  border: 1px solid #4bd;\\n}\\n.vdp-datepicker__calendar .cell.selected {\\n  background: #4bd;\\n}\\n.vdp-datepicker__calendar .cell.selected:hover {\\n  background: #4bd;\\n}\\n.vdp-datepicker__calendar .cell.selected.highlighted {\\n  background: #4bd;\\n}\\n.vdp-datepicker__calendar .cell.highlighted {\\n  background: #cae5ed;\\n}\\n.vdp-datepicker__calendar .cell.highlighted.disabled {\\n  color: #a3a3a3;\\n}\\n.vdp-datepicker__calendar .cell.grey {\\n  color: #888;\\n}\\n.vdp-datepicker__calendar .cell.grey:hover {\\n  background: inherit;\\n}\\n.vdp-datepicker__calendar .cell.day-header {\\n  font-size: 75%;\\n  white-space: nowrap;\\n  cursor: inherit;\\n}\\n.vdp-datepicker__calendar .cell.day-header:hover {\\n  background: inherit;\\n}\\n.vdp-datepicker__calendar .month,\\n.vdp-datepicker__calendar .year {\\n  width: 33.333%;\\n}\\n.vdp-datepicker__clear-button,\\n.vdp-datepicker__calendar-button {\\n  cursor: pointer;\\n  font-style: normal;\\n}\\n.vdp-datepicker__clear-button.disabled,\\n.vdp-datepicker__calendar-button.disabled {\\n  color: #999;\\n  cursor: default;\\n}\\n"]}, media: undefined });\n\n  };\n  /* scoped */\n  const __vue_scope_id__$4 = undefined;\n  /* module identifier */\n  const __vue_module_identifier__$4 = undefined;\n  /* functional template */\n  const __vue_is_functional_template__$4 = false;\n  /* style inject SSR */\n  \n\n  \n  var Datepicker = normalizeComponent_1(\n    { render: __vue_render__$4, staticRenderFns: __vue_staticRenderFns__$4 },\n    __vue_inject_styles__$4,\n    __vue_script__$4,\n    __vue_scope_id__$4,\n    __vue_is_functional_template__$4,\n    __vue_module_identifier__$4,\n    browser,\n    undefined\n  );\n\n/* harmony default export */ var vuejs_datepicker_esm = (Datepicker);\n\n// EXTERNAL MODULE: ./src/contract.js\nvar contract = __webpack_require__("51bf");\n\n// EXTERNAL MODULE: ./src/allabis.js\nvar allabis = __webpack_require__("5245");\n\n// EXTERNAL MODULE: ./src/components/dao/allabis.js\nvar dao_allabis = __webpack_require__("04ef");\n\n// EXTERNAL MODULE: ./src/components/minter/veStore.js\nvar veStore = __webpack_require__("2b7d");\n\n// EXTERNAL MODULE: ./src/utils/common.js\nvar common = __webpack_require__("cf45");\n\n// EXTERNAL MODULE: ./src/components/common/gasPriceStore.js\nvar gasPriceStore = __webpack_require__("0a37");\n\n// EXTERNAL MODULE: ./src/components/common/GasPrice.vue + 4 modules\nvar GasPrice = __webpack_require__("e7e9");\n\n// EXTERNAL MODULE: ./src/utils/helpers.js\nvar helpers = __webpack_require__("2fa3");\n\n// EXTERNAL MODULE: ./node_modules/bignumber.js/bignumber.js\nvar bignumber = __webpack_require__("901e");\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/minter/VotingEscrow.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction _templateObject() {\n  var data = Object(taggedTemplateLiteral["a" /* default */])(["\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tvotingEscrows(where: { provider: \\"", "\\" }, orderBy: timestamp, orderDirection: asc) {\\n\\t\\t\\t\\t\\t\\t\\tid\\n\\t\\t\\t\\t\\t\\t\\tprovider\\n\\t\\t\\t\\t\\t\\t\\tvalue\\n\\t\\t\\t\\t\\t\\t\\tlocktime\\n\\t\\t\\t\\t\\t\\t\\ttype\\n\\t\\t\\t\\t\\t\\t\\ttotalPower\\n\\t\\t\\t\\t\\t\\t\\ttimestamp\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tdaopowers(orderBy: block, orderDirection: asc) {\\n\\t\\t\\t\\t\\t\\t    id\\n\\t\\t\\t\\t\\t\\t    block\\n\\t\\t\\t\\t\\t\\t    timestamp\\n\\t\\t\\t\\t\\t\\t\\ttotalPower\\n\\t\\t\\t\\t\\t\\t  }\\n\\t\\t\\t\\t\\t\\tvotingPower(id: \\"", "\\") {\\n\\t\\t\\t\\t\\t\\t\\tpower\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\nexporting_default()(highcharts_default.a);\nexport_data_default()(highcharts_default.a);\n\n\nstock_default()(highcharts_default.a);\nhighcharts_default.a.setOptions({\n  lang: {\n    loading: \'\'\n  }\n});\n\nvar _require = __webpack_require__("fe5c"),\n    setIntervalAsync = _require.setIntervalAsync,\n    clearIntervalAsync = _require.clearIntervalAsync;\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var VotingEscrowvue_type_script_lang_js_ = ({\n  components: {\n    Datepicker: vuejs_datepicker_esm,\n    highcharts: highcharts_vue_min["Chart"],\n    GasPrice: GasPrice["a" /* default */]\n  },\n  props: {\n    showvelock: {\n      type: Boolean,\n      "default": true\n    },\n    showchart: {\n      type: Boolean,\n      "default": true\n    }\n  },\n  data: function data() {\n    return {\n      SWRV: null,\n      swrvBalance: bignumber_default()(0),\n      votingEscrow: null,\n      lockTime: 0,\n      interval: null,\n      showModal: false,\n      showModalType: 0,\n      showConfirmMessage: false,\n      method: null,\n      wrapper: null,\n      loaded: false,\n      waitingMessage: \'\',\n      chartdata: {\n        chart: {\n          panning: true,\n          zoomType: \'x\',\n          panKey: \'ctrl\',\n          type: \'line\'\n        },\n        title: {\n          text: \'veSWRV Voting Power\'\n        },\n        rangeSelector: {\n          selected: 6\n        },\n        xAxis: {\n          //ordinal: false,\n          //type: \'datetime\',\n          labels: {\n            style: {\n              color: \'black\'\n            }\n          },\n          dateTimeLabelFormats: {\n            second: \'%Y-%m-%d<br/>%H:%M:%S\',\n            minute: \'%Y-%m-%d<br/>%H:%M\',\n            hour: \'%Y-%m-%d<br/>%H:%M\',\n            day: \'%Y<br/>%m-%d\',\n            week: \'%Y<br/>%m-%d\',\n            month: \'%Y-%m\',\n            year: \'%Y\'\n          }\n        },\n        yAxis: {\n          type: \'linear\',\n          opposite: false,\n          title: {\n            text: \'Amount locked\'\n          }\n        },\n        plotOptions: {\n          series: {\n            dataGrouping: {\n              forced: true,\n              units: [[\'day\', null] // [\'hour\', [1]],\n              //  [\'week\', [1,2,3,4,5,6,7,8,9,10]],\n              // [\'month\', [1,2,3,4,5,6,7,8]],\n              // [\'year\', [1,2,3]],\n              ]\n            },\n            events: {\n              legendItemClick: function (self) {\n                return function () {\n                  if (this.name == \'DAO Voting Power\') self.showdaopower = !this.visible;\n                  if (this.name == \'My Voting Power\') self.showmypower = !this.visible;\n                };\n              }(this)\n            }\n          },\n          line: {\n            dataLabels: {\n              enabled: true,\n              formatter: function (self) {\n                return function () {\n                  var _this = this;\n\n                  var event = self.events.find(function (e) {\n                    return e.timestamp == _this.x / 1000;\n                  });\n                  if (event !== undefined && event.type !== \'decrease\') return this.y.toFixed(0);\n                };\n              }(this)\n            }\n          }\n        },\n        tooltip: {\n          pointFormatter: function (self) {\n            return function () {\n              var _this2 = this;\n\n              var value = this.y.toFixed(2);\n\n              if (this.series.name == \'My Voting Power\') {\n                var event = self.events.find(function (e) {\n                  return e.timestamp == _this2.x / 1000;\n                }); //this is the period end\n\n                if (event === undefined) return "\\n\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\tVoting lock end\\n\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\tVoting power: 0\\n\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t    \\t\\t\\t\\t";else {\n                  var titleHTML = "\\n\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t\\t".concat(event.type == \'create_lock\' ? \'<b> Create lock </b>\' : \'\', "\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t\\t").concat(event.type == \'increase_amount\' ? \'<b> Increase amount </b>\' : \'\', "\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t\\t").concat(event.type == \'increase_unlock_time\' ? \'<b> Increase unlock time </b>\' : \'\', "\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t\\t").concat(event.type == \'withdraw\' ? \'<b> Withdraw </b>\' : \'\', "\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t");\n                  var contentHTML = "\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t\\t".concat(this.series.name, ": <b>").concat(value, "</b><br/>\\n\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t<div>Locked until: ").concat(helpers["b" /* formatDateOnlyToHuman */](event.locktime), "</div>\\n\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t");\n                  return event.type !== \'decrease\' ? titleHTML + contentHTML : contentHTML;\n                }\n              }\n\n              if (this.series.name = \'DAO Voting Power\') {\n                return "<span style=\\"color:".concat(this.color, "\\">\\u25CF</span> ").concat(this.series.name, ": <b>").concat(value, "</b><br/>");\n              }\n            };\n          }(this)\n        },\n        series: [],\n        legend: {\n          enabled: true\n        }\n      },\n      chart: null,\n      events: [],\n      daopowerdata: [],\n      chartData: [],\n      showend: false,\n      showmypower: true,\n      showdaopower: false,\n      gaugesNeedCheckpoint: null,\n      gaugesNames: {\n        //"0x7ca5b0a2910B33e9759DC7dDB0413949071D7575": \'compound\',\n        //"0xBC89cd85491d81C6AD2954E6d0362Ee29fCa8F53": \'usdt\',\n        "0xb4d0C929cD3A1FbDc6d57E7D3315cF0C4d6B4bFa": \'swusd\' //"0x69Fb7c45726cfE2baDeE8317005d3F94bE838840": \'busd\',\n        //"0x64E3C23bfc40722d3B649844055F1D51c1ac041d": \'pax\',\n        //"0xB1F2cdeC61db658F091671F5f199635aEF202CAC": \'ren\',\n        //"0xA90996896660DEcC6E997655E065b23788857849": \'susdv2\',\n        //"0x705350c4BcD35c9441419DdD5d2f097d7a55410F": \'sbtc\',\n\n      },\n      inf_approval: true,\n      SWRVLocked: null,\n      myLockedSWRV: null,\n      lockEnd: null,\n      userNeedsResetApproval: false\n    };\n  },\n  created: function created() {\n    var _this3 = this;\n\n    return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this3.$watch(function () {\n                return contract["b" /* contract */].initializedContracts;\n              }, function (val, oldval) {\n                if (val) _this3.mounted();\n              });\n\n            case 1:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (contract["b" /* contract */].multicall) {\n                _this4.mounted();\n              }\n\n            case 1:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  watch: {\n    showend: function showend(val) {\n      this.showEnd();\n    },\n    showmypower: function showmypower(val) {\n      if (val == false && !this.showdaopower) return;\n      var toggle = \'show\';\n\n      if (!val) {\n        toggle = \'hide\';\n      }\n\n      this.chart.update({\n        plotOptions: {\n          series: {\n            dataGrouping: {\n              forced: false\n            }\n          }\n        }\n      });\n      this.chart.series[0][toggle]();\n    },\n    showdaopower: function showdaopower(val) {\n      var toggle = \'show\';\n      if (!val) toggle = \'hide\';\n\n      if (toggle == \'show\') {\n        this.chart.xAxis[0].update({\n          ordinal: true\n        });\n        this.chart.update({\n          plotOptions: {\n            series: {\n              dataGrouping: {\n                forced: true\n              }\n            }\n          }\n        });\n      } else {\n        this.chart.update({\n          plotOptions: {\n            series: {\n              dataGrouping: {\n                forced: false\n              }\n            }\n          }\n        });\n      }\n\n      this.chart.series[1][toggle]();\n    }\n  },\n  computed: {\n    vecrvBalance: {\n      get: function get() {\n        return veStore["b" /* state */].vecrvBalance;\n      },\n      set: function set(val) {\n        veStore["b" /* state */].vecrvBalance = val;\n      }\n    },\n    crvBalanceText: function crvBalanceText() {\n      return this.swrvBalance.div(1e18).toFixed(2, 1);\n    },\n    vecrvBalanceText: function vecrvBalanceText() {\n      return this.vecrvBalance.div(1e18).toFixed(2, 1);\n    },\n    lockTimeText: function lockTimeText() {\n      return helpers["c" /* formatDateToHuman */](this.lockTime);\n    },\n    publicPath: function publicPath() {\n      return "";\n    },\n    disabledDates: function disabledDates() {\n      return {\n        to: new Date((this.lockTime + 604800) * 1000),\n        from: new Date(Date.now() + 126144000000)\n      };\n    },\n    openDate: function openDate() {\n      return new Date((this.lockTime + 604800) * 1000);\n    },\n    hasvecrv: function hasvecrv() {\n      return this.vecrvBalance.gt(0);\n    },\n    isInvalidAmount: function isInvalidAmount() {\n      return this.deposit <= 0 || bignumber_default()(this.deposit).gt(this.swrvBalance.div(1e18));\n    },\n    increaseLockText: function increaseLockText() {\n      return helpers["c" /* formatDateToHuman */](Date.parse(this.increaseLock) / 1000);\n    },\n    deposit: {\n      get: function get() {\n        return veStore["b" /* state */].deposit;\n      },\n      set: function set(val) {\n        veStore["b" /* state */].deposit = val;\n      }\n    },\n    increaseLock: {\n      get: function get() {\n        return veStore["b" /* state */].increaseLock;\n      },\n      set: function set(val) {\n        veStore["b" /* state */].increaseLock = val;\n      }\n    },\n    gaugesNeedCheckpointText: function gaugesNeedCheckpointText() {\n      var _this5 = this;\n\n      if (!this.gaugesNeedCheckpoint || this.gaugesNeedCheckpoint.length == 0) return \'\';\n      var checkpointNames = Object.keys(this.gaugesNames).filter(function (gauge) {\n        return _this5.gaugesNeedCheckpoint[gauge.toLowerCase()] !== undefined;\n      }).map(function (gauge) {\n        return _this5.gaugesNames[gauge];\n      }).join(\',\');\n      return checkpointNames;\n    },\n    gasPrice: function gasPrice() {\n      return gasPriceStore["a" /* state */].gasPrice;\n    },\n    gasPriceWei: function gasPriceWei() {\n      return gasPriceStore["a" /* state */].gasPriceWei;\n    },\n    CRVLockedFormat: function CRVLockedFormat() {\n      return helpers["d" /* formatNumber */](this.SWRVLocked / 1e18);\n    },\n    myLockedSWRVFormat: function myLockedSWRVFormat() {\n      return helpers["d" /* formatNumber */](this.myLockedSWRV / 1e18);\n    },\n    hasEndedLock: function hasEndedLock() {\n      return this.lockEnd > 0 && Date.now() / 1000 > this.lockEnd;\n    }\n  },\n  methods: {\n    mounted: function mounted() {\n      var _this6 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var SWRV, allowance;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this6.loaded = true;\n                _this6.chart = _this6.$refs.highcharts.chart;\n\n                _this6.chart.showLoading();\n\n                SWRV = new web3.eth.Contract(allabis["b" /* ERC20_abi */], dao_allabis["default"].SWRV_address);\n                _context3.t0 = bignumber_default.a;\n                _context3.next = 7;\n                return SWRV.methods.allowance(contract["b" /* contract */].default_account, dao_allabis["default"].votingescrow_address).call();\n\n              case 7:\n                _context3.t1 = _context3.sent;\n                allowance = (0, _context3.t0)(_context3.t1);\n\n                if (allowance.gt(0) && allowance.lte(contract["b" /* contract */].max_allowance.div(bignumber_default()(2)))) {\n                  _this6.needsToResetApproval = true;\n                  console.log(\'user needs to set approval to 0 then re-approve\');\n                }\n\n                _this6.loadBalances();\n\n                _this6.loadChart();\n\n              case 12:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    loadBalances: function loadBalances() {\n      var _this7 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var calls, aggcalls, decoded;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this7.votingEscrow = new web3.eth.Contract(dao_allabis["default"].votingescrow_abi, \'0xe5e7DdADD563018b0E692C1524b60b754FBD7f02\');\n                _this7.SWRV = new web3.eth.Contract(dao_allabis["default"].SWRV_abi, \'0xB8BAa0e4287890a5F79863aB62b7F175ceCbD433\');\n                window.votingEscrow = _this7.votingEscrow;\n                window.SWRV = _this7.SWRV;\n                calls = [[_this7.votingEscrow._address, _this7.votingEscrow.methods.balanceOf(contract["c" /* getters */].default_account()).encodeABI()], [_this7.votingEscrow._address, _this7.votingEscrow.methods.locked__end(contract["c" /* getters */].default_account()).encodeABI()], [_this7.SWRV._address, _this7.SWRV.methods.balanceOf(contract["c" /* getters */].default_account()).encodeABI()]];\n                _context4.next = 7;\n                return common["c" /* clean_and_multi_call */](calls);\n\n              case 7:\n                aggcalls = _context4.sent;\n                decoded = aggcalls[1].map(function (hex) {\n                  return web3.eth.abi.decodeParameter(\'uint256\', hex);\n                });\n                _this7.vecrvBalance = bignumber_default()(decoded[0]);\n                _this7.lockTime = +decoded[1];\n                _this7.lockEnd = +decoded[1];\n                _this7.increaseLock = new Date((_this7.lockTime + 604800) * 1000);\n\n                if (_this7.lockTime == 0) {\n                  _this7.lockTime = Date.now() / 1000;\n                  _this7.increaseLock = new Date(Date.now() + 604800 * 1000);\n                }\n\n                _this7.swrvBalance = bignumber_default()(decoded[2]);\n                _this7.deposit = _this7.swrvBalance.div(1e18).toFixed(0, 1);\n                _this7.deposit = 0;\n\n                if (_this7.swrvBalance.gt(0)) {\n                  _this7.interval = setIntervalAsync(_this7.newVotingPower, 10000);\n                }\n\n              case 18:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    resetApproval: function resetApproval() {\n      var _this8 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return common["f" /* resetApproval */](_this8.SWRV, contract["c" /* getters */].default_account(), _this8.votingEscrow._address);\n\n              case 2:\n                _this8.mounted();\n\n              case 3:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    loadChart: function loadChart() {\n      var _this9 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var QUERY, results, events, INDEXES, lastUnlockTime, lockCalls, lockAggcalls, lockDecoded, chartData, lastEvent, lastData, daopower, daopowerdata, now, lastUnlockTimeDiff, calls, i, aggcalls, decoded;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (_this9.chart.series[0]) {\n                  while (_this9.chart.series[0]) {\n                    _this9.chart.series[0].remove();\n                  }\n                }\n\n                _this9.wrapper = new esm["GraphQLWrapper"](\'https://api.thegraph.com/subgraphs/name/pengiundev/curve-votingescrow-mainnet\');\n                /*\n                let QUERY = gql`\n                \t{\n                \t\tvotingEscrows(where: { provider: "${getters.default_account().toLowerCase()}" }, orderBy: timestamp, orderDirection: asc) {\n                \t\t\tid\n                \t\t\tprovider\n                \t\t\tvalue\n                \t\t\tlocktime\n                \t\t\ttype\n                \t\t\ttotalPower\n                \t\t\ttimestamp\n                \t\t}\n                \t\tdaopowers(orderBy: block, orderDirection: asc) {\n                \t\t    id\n                \t\t    block\n                \t\t    timestamp\n                \t\t    totalPower\n                \t\t  }\n                \t\tcrvlockeds {\n                \t\t\tSWRV\n                \t\t}\n                \t\tvotingPower(id: "${contract.default_account.toLowerCase()}") {\n                \t\t\tpower\n                \t\t}\n                \t\tlastUnlockTime: userBalances(orderBy: unlock_time, orderDirection: desc, first: 1) {\n                \t\t    unlock_time\n                \t  \t}\n                \t}\n                `\n                */\n\n                QUERY = src_default()(_templateObject(), contract["c" /* getters */].default_account().toLowerCase(), contract["b" /* contract */].default_account.toLowerCase());\n                _context6.next = 5;\n                return _this9.wrapper.performQuery(QUERY);\n\n              case 5:\n                results = _context6.sent;\n                console.log(results, "THE RESULTS");\n                events = results.data.votingEscrows; // TODO: get total amount of SWRV locked with last locked timestamp\n\n                INDEXES = {\n                  MYLOCKED: 0,\n                  TOTAL_SWRV: 1\n                };\n                lastUnlockTime = 1631056212; //results.data.lastUnlockTime[0].unlock_time\n\n                if (results.data.daopowers) {\n                  lastUnlockTime = results.data.daopowers.reduce(function (p, x) {\n                    return Number(x.timestamp) > p ? Number(x.timestamp) : p;\n                  }, 0);\n                  lastUnlockTime = lastUnlockTime + 4 * 365 * 86400; // add 4 years;\n                }\n\n                lockCalls = [[_this9.votingEscrow._address, _this9.votingEscrow.methods.locked(contract["b" /* contract */].default_account).encodeABI()], [_this9.votingEscrow._address, _this9.votingEscrow.methods.supply().encodeABI()]];\n                _context6.next = 14;\n                return common["c" /* clean_and_multi_call */](lockCalls);\n\n              case 14:\n                lockAggcalls = _context6.sent;\n                lockDecoded = lockAggcalls[1].map(function (hex) {\n                  return web3.eth.abi.decodeParameter(\'uint256\', hex);\n                });\n                _this9.myLockedSWRV = +lockDecoded[INDEXES.MYLOCKED]; //results.data.votingPower.power\n\n                _this9.SWRVLocked = +lockDecoded[INDEXES.TOTAL_SWRV]; //results.data.crvlockeds[0].SWRV\n\n                if (!(_this9.showvelock && _this9.showchart)) {\n                  _context6.next = 37;\n                  break;\n                }\n\n                if (events.length) {\n                  _this9.events = events;\n                  events = events.map(function (event) {\n                    event.votingPower = _this9.calcVotingPower(event.totalPower, event.timestamp, event.locktime) * 1000;\n                    return event;\n                  });\n                  chartData = events.map(function (event, i) {\n                    return [event.timestamp * 1000, event.votingPower];\n                  });\n                  lastEvent = events[events.length - 1];\n                  lastData = [lastEvent.locktime * 1000, 0];\n                  chartData.push(lastData);\n\n                  _this9.events.push(Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, _this9.events[_this9.events.length - 1]), {}, {\n                    value: 0,\n                    votingPower: 0\n                  }));\n\n                  _this9.chartData = chartData = _this9.interpolateVotingPower(chartData);\n\n                  _this9.chart.addSeries({\n                    name: \'My Voting Power\',\n                    data: chartData.slice(0, chartData.length - 11)\n                  });\n                }\n\n                daopower = results.data.daopowers;\n                daopowerdata = daopower.map(function (e) {\n                  return [e.timestamp * 1000, e.totalPower / 1e18];\n                });\n                now = Date.now() / 1000 | 0;\n                lastUnlockTimeDiff = lastUnlockTime - now;\n                calls = [];\n                i = 0;\n\n                while (now < lastUnlockTime) {\n                  calls.push([_this9.votingEscrow._address, _this9.votingEscrow.methods.totalSupply(now).encodeABI()]);\n                  now += Math.pow(i, 4) * 86400;\n                  i++;\n                }\n\n                calls.push([_this9.votingEscrow._address, _this9.votingEscrow.methods.totalSupply(lastUnlockTime).encodeABI()]);\n                _context6.next = 30;\n                return common["c" /* clean_and_multi_call */](calls);\n\n              case 30:\n                aggcalls = _context6.sent;\n                decoded = aggcalls[1].map(function (hex, i) {\n                  return [+(\'0x\' + calls[i][1].slice(10)) * 1000, web3.eth.abi.decodeParameter(\'uint256\', hex) / 1e18];\n                });\n                daopowerdata.push.apply(daopowerdata, Object(toConsumableArray["a" /* default */])(decoded));\n                _this9.daopowerdata = daopowerdata;\n\n                _this9.chart.addSeries({\n                  name: \'DAO Voting Power\',\n                  data: daopowerdata,\n                  color: \'#0b0a57\'\n                });\n\n                if (_this9.myLockedSWRV > 0) {\n                  _this9.chart.series[1].hide();\n\n                  _this9.chart.update({\n                    plotOptions: {\n                      series: {\n                        dataGrouping: {\n                          forced: false\n                        }\n                      }\n                    }\n                  });\n                }\n\n                _this9.chart.hideLoading();\n\n              case 37:\n              case "end":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    interpolateVotingPower: function interpolateVotingPower(chartData) {\n      var _this10 = this;\n\n      var origEvents = this.events.slice();\n      console.log(origEvents, "ORIG EVENTS");\n      var newChartData = [];\n      console.log(chartData.slice(), "CHARTDATA LENGTH");\n\n      for (var j = 1; j < chartData.length; j++) {\n        var v = chartData[j];\n        var prev = chartData[j - 1]; //if(v.length == 1) continue\n\n        newChartData.push(prev);\n        var startTimestamp = prev[0];\n        var startAmount = prev[1];\n        var endTimestamp = v[0];\n        var endAmount = v[1];\n        var diff = endTimestamp - startTimestamp;\n        var diffAmount = endAmount - startAmount;\n        var amountLocked = origEvents[j - 1].totalPower;\n        var numPoints = 10;\n\n        if (chartData.length > 1) {\n          var _loop = function _loop(i) {\n            console.log(origEvents[j - 1].totalPower, i, "TOTAL POWER");\n            var currentTimestamp = startTimestamp + i * (diff / numPoints);\n            console.log(amountLocked, currentTimestamp, _this10.events[j - 1].locktime * 1000, "AMOUNTS");\n\n            var amount = _this10.calcVotingPower(amountLocked, currentTimestamp, _this10.events[j - 1].locktime * 1000);\n\n            console.log(amount, "THE AMOUNT");\n\n            if (_this10.events.find(function (e) {\n              return e.timestamp == currentTimestamp / 1000;\n            }) === undefined) {\n              _this10.events.splice(j, 0, {\n                type: \'decrease\',\n                timestamp: currentTimestamp / 1000,\n                locktime: _this10.events[j].locktime\n              });\n            } //console.log(amount, "THE AMOUNT")\n\n\n            newChartData.push([currentTimestamp, amount]);\n          };\n\n          for (var i = 0; i < numPoints; i++) {\n            _loop(i);\n          }\n        }\n\n        newChartData.push(v);\n      }\n\n      newChartData.push(chartData[chartData.length - 1]);\n      return newChartData;\n    },\n    calcVotingPower: function calcVotingPower(amount, time, locktime) {\n      return amount / 1e18 * ((locktime - time) / 1000) / (86400 * 365) / 4;\n    },\n    showEnd: function showEnd() {\n      this.showdaopower = false;\n      var chartData = this.chartData.slice();\n\n      if (!this.showend) {\n        chartData = chartData.slice(0, chartData.length - 11);\n        this.chart.xAxis[0].update({\n          ordinal: true\n        });\n      }\n\n      this.chart.series[0].setData(chartData, true, false);\n\n      if (this.showend) {\n        this.chart.rangeSelector.clickButton(6, false, false);\n        this.chart.xAxis[0].update({\n          ordinal: false\n        });\n      }\n    },\n    setMaxBalance: function setMaxBalance() {\n      this.deposit = this.swrvBalance.div(1e18).toString();\n    },\n    checkpoint: function checkpoint() {\n      var _arguments = arguments,\n          _this11 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var doCheckpoint, gauges, balanceOfCall, balancesCalls, aggBalancesCalls, decodedBalances, gaugesNeedCheckpoint, _loop2, _i, _Object$keys;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                doCheckpoint = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : false;\n                gauges = ["0x7ca5b0a2910B33e9759DC7dDB0413949071D7575", "0xBC89cd85491d81C6AD2954E6d0362Ee29fCa8F53", "0xb4d0C929cD3A1FbDc6d57E7D3315cF0C4d6B4bFa", "0x69Fb7c45726cfE2baDeE8317005d3F94bE838840", "0x64E3C23bfc40722d3B649844055F1D51c1ac041d", "0xB1F2cdeC61db658F091671F5f199635aEF202CAC", "0xA90996896660DEcC6E997655E065b23788857849", "0x705350c4BcD35c9441419DdD5d2f097d7a55410F"];\n                balanceOfCall = \'0x70a08231000000000000000000000000\';\n                balancesCalls = gauges.map(function (gauge) {\n                  return [gauge, balanceOfCall + contract["b" /* contract */].default_account.slice(2)];\n                });\n                console.log("XXX VOTING ESCROW 1");\n                _context8.next = 7;\n                return common["c" /* clean_and_multi_call */](balancesCalls);\n\n              case 7:\n                aggBalancesCalls = _context8.sent;\n                decodedBalances = aggBalancesCalls[1].map(function (hex) {\n                  return web3.eth.abi.decodeParameter(\'uint256\', hex);\n                });\n                gaugesNeedCheckpoint = {};\n                decodedBalances.forEach(function (balance, i) {\n                  return gaugesNeedCheckpoint[gauges[i].toLowerCase()] = bignumber_default()(balance);\n                });\n                console.log(gaugesNeedCheckpoint, "GAUGES NEED CHECKPOINT");\n                _this11.gaugesNeedCheckpoint = gaugesNeedCheckpoint;\n\n                if (!doCheckpoint) {\n                  _context8.next = 21;\n                  break;\n                }\n\n                _loop2 = /*#__PURE__*/regeneratorRuntime.mark(function _loop2() {\n                  var gauge, gaugeContract, gaugeAddress, _notifyNotification, dismiss;\n\n                  return regeneratorRuntime.wrap(function _loop2$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          gauge = _Object$keys[_i];\n                          console.log(gauge, _this11.gaugesNames);\n                          gaugeContract = new web3.eth.Contract(dao_allabis["default"].liquiditygauge_abi, gauge);\n                          gaugeAddress = Object.keys(_this11.gaugesNames).find(function (address) {\n                            return address.toLowerCase() == gauge.toLowerCase();\n                          });\n                          _notifyNotification = Object(init["c" /* notifyNotification */])("Please confirm checkpointing from ".concat(_this11.gaugesNames[gaugeAddress], " gauge")), dismiss = _notifyNotification.dismiss;\n                          _this11.waitingMessage = "Please confirm checkpointing from ".concat(_this11.gaugesNames[gaugeAddress], " gauge");\n                          _context7.next = 8;\n                          return new Promise(function (resolve, reject) {\n                            gaugeContract.methods.user_checkpoint(contract["b" /* contract */].default_account).send({\n                              from: contract["b" /* contract */].default_account,\n                              gasPrice: _this11.gasPriceWei,\n                              gas: 400000\n                            }).once(\'transactionHash\', function (hash) {\n                              resolve();\n                              dismiss();\n                              Object(init["b" /* notifyHandler */])(hash);\n                              _this11.waitingMessage = "WAITING FOR TRANSACTION TO CONFIRM: NO FURTHER ACTION NEEDED";\n                            })["finally"](function () {\n                              _this11.waitingMessage = \'\';\n                            });\n                          });\n\n                        case 8:\n                        case "end":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _loop2);\n                });\n                _i = 0, _Object$keys = Object.keys(gaugesNeedCheckpoint);\n\n              case 16:\n                if (!(_i < _Object$keys.length)) {\n                  _context8.next = 21;\n                  break;\n                }\n\n                return _context8.delegateYield(_loop2(), "t0", 18);\n\n              case 18:\n                _i++;\n                _context8.next = 16;\n                break;\n\n              case 21:\n              case "end":\n                return _context8.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    increaseAmount: function increaseAmount() {\n      var _this12 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var deposit, _notifyNotification2, dismiss;\n\n        return regeneratorRuntime.wrap(function _callee9$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _this12.showConfirmMessage = true;\n                deposit = bignumber_default()(_this12.deposit).times(1e18);\n                if (deposit.gt(_this12.swrvBalance)) deposit = _this12.swrvBalance;\n                _context10.next = 5;\n                return common["a" /* approveAmount */](_this12.SWRV, deposit, contract["c" /* getters */].default_account(), _this12.votingEscrow._address, _this12.inf_approval);\n\n              case 5:\n                _notifyNotification2 = Object(init["c" /* notifyNotification */])("Please confirm increasing amount of lock"), dismiss = _notifyNotification2.dismiss;\n                _this12.waitingMessage = "Please confirm increasing amount of lock";\n                _context10.next = 9;\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(resolve, reject) {\n                    return regeneratorRuntime.wrap(function _callee8$(_context9) {\n                      while (1) {\n                        switch (_context9.prev = _context9.next) {\n                          case 0:\n                            _context9.next = 2;\n                            return _this12.votingEscrow.methods.increase_amount(deposit.toFixed(0, 1)).send({\n                              from: contract["c" /* getters */].default_account(),\n                              gasPrice: _this12.gasPriceWei,\n                              gas: 600000\n                            }).once(\'transactionHash\', function (hash) {\n                              resolve();\n                              dismiss();\n                              Object(init["b" /* notifyHandler */])(hash);\n                              _this12.waitingMessage = "WAITING FOR TRANSACTION TO CONFIRM: NO FURTHER ACTION NEEDED";\n\n                              _this12.checkpoint(true);\n                            }).on(\'error\', function (err) {\n                              return reject(err);\n                            }).on(\'receipt\', function () {\n                              _this12.mounted();\n                            })["finally"](function () {\n                              console.log(\'transaction receipt received\');\n\n                              _this12.mounted();\n\n                              _this12.waitingMessage = \'\';\n                              _this12.showConfirmMessage = false;\n                              _this12.showModal = false;\n                            });\n\n                          case 2:\n                          case "end":\n                            return _context9.stop();\n                        }\n                      }\n                    }, _callee8);\n                  }));\n\n                  return function (_x, _x2) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 9:\n              case "end":\n                return _context10.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    },\n    submitIncreaseLock: function submitIncreaseLock() {\n      var _this13 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n        var lockTime, _notifyNotification3, dismiss;\n\n        return regeneratorRuntime.wrap(function _callee11$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _this13.showConfirmMessage = true;\n                lockTime = bignumber_default()(Date.parse(_this13.increaseLock) / 1000).toFixed(0, 1);\n                _notifyNotification3 = Object(init["c" /* notifyNotification */])(\'Please confirm increasing lock time\'), dismiss = _notifyNotification3.dismiss;\n                _this13.waitingMessage = \'Please confirm increasing lock time\';\n                _context12.next = 6;\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref2 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(resolve, reject) {\n                    return regeneratorRuntime.wrap(function _callee10$(_context11) {\n                      while (1) {\n                        switch (_context11.prev = _context11.next) {\n                          case 0:\n                            _context11.next = 2;\n                            return _this13.votingEscrow.methods.increase_unlock_time(lockTime).send({\n                              from: contract["c" /* getters */].default_account(),\n                              gasPrice: _this13.gasPriceWei,\n                              gas: 600000\n                            }).once(\'transactionHash\', function (hash) {\n                              resolve();\n                              dismiss();\n                              Object(init["b" /* notifyHandler */])(hash);\n                              _this13.waitingMessage = "WAITING FOR TRANSACTION TO CONFIRM: NO FURTHER ACTION NEEDED";\n\n                              _this13.checkpoint(true);\n                            }).on(\'error\', function (err) {\n                              return reject(err);\n                            }).on(\'receipt\', function () {\n                              console.log(\'transaction receipt received\');\n\n                              _this13.mounted();\n                            })["finally"](function () {\n                              _this13.waitingMessage = "Updating display values, please wait";\n\n                              _this13.mounted();\n\n                              _this13.waitingMessage = \'\';\n                              _this13.showConfirmMessage = false;\n                              _this13.showModal = false;\n                            });\n\n                          case 2:\n                          case "end":\n                            return _context11.stop();\n                        }\n                      }\n                    }, _callee10);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 6:\n              case "end":\n                return _context12.stop();\n            }\n          }\n        }, _callee11);\n      }))();\n    },\n    createLock: function createLock() {\n      var _this14 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n        var deposit, lockTime, _notifyNotification4, dismiss;\n\n        return regeneratorRuntime.wrap(function _callee13$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _this14.showConfirmMessage = true;\n                deposit = bignumber_default()(_this14.deposit).times(1e18);\n                if (deposit.gt(_this14.swrvBalance)) deposit = _this14.swrvBalance;\n                _context14.next = 5;\n                return common["a" /* approveAmount */](_this14.SWRV, deposit, contract["c" /* getters */].default_account(), _this14.votingEscrow._address, _this14.inf_approval);\n\n              case 5:\n                lockTime = bignumber_default()(Date.parse(_this14.increaseLock) / 1000).toFixed(0, 1);\n                _notifyNotification4 = Object(init["c" /* notifyNotification */])(\'Please confirm creating lock\'), dismiss = _notifyNotification4.dismiss;\n                _this14.waitingMessage = \'Please confirm increasing lock time\';\n                _context14.next = 10;\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref3 = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(resolve, reject) {\n                    return regeneratorRuntime.wrap(function _callee12$(_context13) {\n                      while (1) {\n                        switch (_context13.prev = _context13.next) {\n                          case 0:\n                            _context13.next = 2;\n                            return _this14.votingEscrow.methods.create_lock(deposit.toFixed(0, 1), lockTime).send({\n                              from: contract["c" /* getters */].default_account(),\n                              gasPrice: _this14.gasPriceWei,\n                              gas: 600000\n                            }).once(\'transactionHash\', function (hash) {\n                              resolve();\n                              dismiss();\n                              Object(init["b" /* notifyHandler */])(hash);\n                              _this14.waitingMessage = "WAITING FOR TRANSACTION TO CONFIRM: NO FURTHER ACTION NEEDED";\n\n                              _this14.checkpoint(true);\n                            }).on(\'error\', function (err) {\n                              return reject(err);\n                            }).on(\'receipt\', function () {\n                              console.log(\'transaction receipt received\');\n                            })["finally"](function () {\n                              _this14.waitingMessage = "Updating display values, please wait";\n\n                              _this14.mounted();\n\n                              _this14.waitingMessage = \'\';\n                              _this14.showConfirmMessage = false;\n                              _this14.showModal = false;\n                            });\n\n                          case 2:\n                          case "end":\n                            return _context13.stop();\n                        }\n                      }\n                    }, _callee12);\n                  }));\n\n                  return function (_x5, _x6) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 10:\n              case "end":\n                return _context14.stop();\n            }\n          }\n        }, _callee13);\n      }))();\n    },\n    withdraw: function withdraw() {\n      var _this15 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n        return regeneratorRuntime.wrap(function _callee14$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return _this15.votingEscrow.methods.withdraw().send({\n                  from: contract["b" /* contract */].default_account,\n                  gasPrice: _this15.gasPriceWei,\n                  gas: 400000\n                });\n\n              case 2:\n              case "end":\n                return _context15.stop();\n            }\n          }\n        }, _callee14);\n      }))();\n    },\n    confirmModal: function confirmModal(method) {\n      var _this16 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n        return regeneratorRuntime.wrap(function _callee15$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _this16.method = method;\n                if (method == \'createLock\') _this16.showModalType = 0;\n                if (method == \'increaseAmount\') _this16.showModalType = 1;\n                if (method == \'submitIncreaseLock\') _this16.showModalType = 2;\n                if (method == \'resetApproval\') _this16.showModalType = 3;\n                _context16.next = 7;\n                return _this16.checkpoint();\n\n              case 7:\n                _this16.showModal = true;\n\n              case 8:\n              case "end":\n                return _context16.stop();\n            }\n          }\n        }, _callee15);\n      }))();\n    },\n    submitModal: function submitModal(method) {\n      var _this17 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n        return regeneratorRuntime.wrap(function _callee16$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _this17[_this17.method]();\n\n              case 1:\n              case "end":\n                return _context17.stop();\n            }\n          }\n        }, _callee16);\n      }))();\n    },\n    newVotingPower: function newVotingPower() {\n      return veStore["a" /* newVotingPower */]().toFixed(2, 0);\n    },\n    getEventType: function getEventType(event) {\n      if (event.type.startsWith(\'0x65fc3873\')) return \'create_lock\';\n      if (event.type.startsWith(\'0x4957677c\')) return \'increase_amount\';\n      if (event.type.startsWith(\'increase_unlock_time\')) return \'increase_unlock_time\';\n    },\n    lockButton: function lockButton(period, type) {\n      //0 increase lock\n      //1 create lock\n      var start = this.lockTime;\n      var newtime = this.lockTime + period;\n      this.increaseLock = new Date(newtime * 1000);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.interval && clearIntervalAsync(this.interval);\n  }\n});\n// CONCATENATED MODULE: ./src/components/minter/VotingEscrow.vue?vue&type=script&lang=js&\n /* harmony default export */ var minter_VotingEscrowvue_type_script_lang_js_ = (VotingEscrowvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./src/components/minter/VotingEscrow.vue?vue&type=style&index=0&id=2f28084e&scoped=true&lang=css&\nvar VotingEscrowvue_type_style_index_0_id_2f28084e_scoped_true_lang_css_ = __webpack_require__("0155");\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("2877");\n\n// CONCATENATED MODULE: ./src/components/minter/VotingEscrow.vue\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  minter_VotingEscrowvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "2f28084e",\n  null\n  \n)\n\n/* harmony default export */ var VotingEscrow = __webpack_exports__["default"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///79ab\n')},a434:function(module,exports,__webpack_require__){"use strict";eval('\nvar $ = __webpack_require__("23e7");\nvar toAbsoluteIndex = __webpack_require__("23cb");\nvar toInteger = __webpack_require__("a691");\nvar toLength = __webpack_require__("50c4");\nvar toObject = __webpack_require__("7b0b");\nvar arraySpeciesCreate = __webpack_require__("65f0");\nvar createProperty = __webpack_require__("8418");\nvar arrayMethodHasSpeciesSupport = __webpack_require__("1dde");\nvar arrayMethodUsesToLength = __webpack_require__("ae40");\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport(\'splice\');\nvar USES_TO_LENGTH = arrayMethodUsesToLength(\'splice\', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = \'Maximum allowed length exceeded\';\n\n// `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: \'Array\', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcz9hNDM0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsUUFBUSxtQkFBTyxDQUFDLE1BQXFCO0FBQ3JDLHNCQUFzQixtQkFBTyxDQUFDLE1BQWdDO0FBQzlELGdCQUFnQixtQkFBTyxDQUFDLE1BQXlCO0FBQ2pELGVBQWUsbUJBQU8sQ0FBQyxNQUF3QjtBQUMvQyxlQUFlLG1CQUFPLENBQUMsTUFBd0I7QUFDL0MseUJBQXlCLG1CQUFPLENBQUMsTUFBbUM7QUFDcEUscUJBQXFCLG1CQUFPLENBQUMsTUFBOEI7QUFDM0QsbUNBQW1DLG1CQUFPLENBQUMsTUFBK0M7QUFDMUYsOEJBQThCLG1CQUFPLENBQUMsTUFBMEM7O0FBRWhGO0FBQ0Esd0RBQXdELDhCQUE4Qjs7QUFFdEY7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRyxnRkFBZ0Y7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx1QkFBdUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiw2QkFBNkI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwyQ0FBMkM7QUFDOUQsS0FBSztBQUNMLHVDQUF1QyxpQkFBaUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxpQkFBaUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiYTQzNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbnRlZ2VyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tb2JqZWN0Jyk7XG52YXIgYXJyYXlTcGVjaWVzQ3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LXNwZWNpZXMtY3JlYXRlJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5Jyk7XG52YXIgYXJyYXlNZXRob2RIYXNTcGVjaWVzU3VwcG9ydCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1tZXRob2QtaGFzLXNwZWNpZXMtc3VwcG9ydCcpO1xudmFyIGFycmF5TWV0aG9kVXNlc1RvTGVuZ3RoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LW1ldGhvZC11c2VzLXRvLWxlbmd0aCcpO1xuXG52YXIgSEFTX1NQRUNJRVNfU1VQUE9SVCA9IGFycmF5TWV0aG9kSGFzU3BlY2llc1N1cHBvcnQoJ3NwbGljZScpO1xudmFyIFVTRVNfVE9fTEVOR1RIID0gYXJyYXlNZXRob2RVc2VzVG9MZW5ndGgoJ3NwbGljZScsIHsgQUNDRVNTT1JTOiB0cnVlLCAwOiAwLCAxOiAyIH0pO1xuXG52YXIgbWF4ID0gTWF0aC5tYXg7XG52YXIgbWluID0gTWF0aC5taW47XG52YXIgTUFYX1NBRkVfSU5URUdFUiA9IDB4MUZGRkZGRkZGRkZGRkY7XG52YXIgTUFYSU1VTV9BTExPV0VEX0xFTkdUSF9FWENFRURFRCA9ICdNYXhpbXVtIGFsbG93ZWQgbGVuZ3RoIGV4Y2VlZGVkJztcblxuLy8gYEFycmF5LnByb3RvdHlwZS5zcGxpY2VgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLnNwbGljZVxuLy8gd2l0aCBhZGRpbmcgc3VwcG9ydCBvZiBAQHNwZWNpZXNcbiQoeyB0YXJnZXQ6ICdBcnJheScsIHByb3RvOiB0cnVlLCBmb3JjZWQ6ICFIQVNfU1BFQ0lFU19TVVBQT1JUIHx8ICFVU0VTX1RPX0xFTkdUSCB9LCB7XG4gIHNwbGljZTogZnVuY3Rpb24gc3BsaWNlKHN0YXJ0LCBkZWxldGVDb3VudCAvKiAsIC4uLml0ZW1zICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgICB2YXIgbGVuID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgIHZhciBhY3R1YWxTdGFydCA9IHRvQWJzb2x1dGVJbmRleChzdGFydCwgbGVuKTtcbiAgICB2YXIgYXJndW1lbnRzTGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgaW5zZXJ0Q291bnQsIGFjdHVhbERlbGV0ZUNvdW50LCBBLCBrLCBmcm9tLCB0bztcbiAgICBpZiAoYXJndW1lbnRzTGVuZ3RoID09PSAwKSB7XG4gICAgICBpbnNlcnRDb3VudCA9IGFjdHVhbERlbGV0ZUNvdW50ID0gMDtcbiAgICB9IGVsc2UgaWYgKGFyZ3VtZW50c0xlbmd0aCA9PT0gMSkge1xuICAgICAgaW5zZXJ0Q291bnQgPSAwO1xuICAgICAgYWN0dWFsRGVsZXRlQ291bnQgPSBsZW4gLSBhY3R1YWxTdGFydDtcbiAgICB9IGVsc2Uge1xuICAgICAgaW5zZXJ0Q291bnQgPSBhcmd1bWVudHNMZW5ndGggLSAyO1xuICAgICAgYWN0dWFsRGVsZXRlQ291bnQgPSBtaW4obWF4KHRvSW50ZWdlcihkZWxldGVDb3VudCksIDApLCBsZW4gLSBhY3R1YWxTdGFydCk7XG4gICAgfVxuICAgIGlmIChsZW4gKyBpbnNlcnRDb3VudCAtIGFjdHVhbERlbGV0ZUNvdW50ID4gTUFYX1NBRkVfSU5URUdFUikge1xuICAgICAgdGhyb3cgVHlwZUVycm9yKE1BWElNVU1fQUxMT1dFRF9MRU5HVEhfRVhDRUVERUQpO1xuICAgIH1cbiAgICBBID0gYXJyYXlTcGVjaWVzQ3JlYXRlKE8sIGFjdHVhbERlbGV0ZUNvdW50KTtcbiAgICBmb3IgKGsgPSAwOyBrIDwgYWN0dWFsRGVsZXRlQ291bnQ7IGsrKykge1xuICAgICAgZnJvbSA9IGFjdHVhbFN0YXJ0ICsgaztcbiAgICAgIGlmIChmcm9tIGluIE8pIGNyZWF0ZVByb3BlcnR5KEEsIGssIE9bZnJvbV0pO1xuICAgIH1cbiAgICBBLmxlbmd0aCA9IGFjdHVhbERlbGV0ZUNvdW50O1xuICAgIGlmIChpbnNlcnRDb3VudCA8IGFjdHVhbERlbGV0ZUNvdW50KSB7XG4gICAgICBmb3IgKGsgPSBhY3R1YWxTdGFydDsgayA8IGxlbiAtIGFjdHVhbERlbGV0ZUNvdW50OyBrKyspIHtcbiAgICAgICAgZnJvbSA9IGsgKyBhY3R1YWxEZWxldGVDb3VudDtcbiAgICAgICAgdG8gPSBrICsgaW5zZXJ0Q291bnQ7XG4gICAgICAgIGlmIChmcm9tIGluIE8pIE9bdG9dID0gT1tmcm9tXTtcbiAgICAgICAgZWxzZSBkZWxldGUgT1t0b107XG4gICAgICB9XG4gICAgICBmb3IgKGsgPSBsZW47IGsgPiBsZW4gLSBhY3R1YWxEZWxldGVDb3VudCArIGluc2VydENvdW50OyBrLS0pIGRlbGV0ZSBPW2sgLSAxXTtcbiAgICB9IGVsc2UgaWYgKGluc2VydENvdW50ID4gYWN0dWFsRGVsZXRlQ291bnQpIHtcbiAgICAgIGZvciAoayA9IGxlbiAtIGFjdHVhbERlbGV0ZUNvdW50OyBrID4gYWN0dWFsU3RhcnQ7IGstLSkge1xuICAgICAgICBmcm9tID0gayArIGFjdHVhbERlbGV0ZUNvdW50IC0gMTtcbiAgICAgICAgdG8gPSBrICsgaW5zZXJ0Q291bnQgLSAxO1xuICAgICAgICBpZiAoZnJvbSBpbiBPKSBPW3RvXSA9IE9bZnJvbV07XG4gICAgICAgIGVsc2UgZGVsZXRlIE9bdG9dO1xuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGsgPSAwOyBrIDwgaW5zZXJ0Q291bnQ7IGsrKykge1xuICAgICAgT1trICsgYWN0dWFsU3RhcnRdID0gYXJndW1lbnRzW2sgKyAyXTtcbiAgICB9XG4gICAgTy5sZW5ndGggPSBsZW4gLSBhY3R1YWxEZWxldGVDb3VudCArIGluc2VydENvdW50O1xuICAgIHJldHVybiBBO1xuICB9XG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///a434\n')},c6c4:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GasPrice_vue_vue_type_style_index_0_id_9b7139ae_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("6b41");\n/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GasPrice_vue_vue_type_style_index_0_id_9b7139ae_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GasPrice_vue_vue_type_style_index_0_id_9b7139ae_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* unused harmony reexport * */\n /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_GasPrice_vue_vue_type_style_index_0_id_9b7139ae_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9jb21tb24vR2FzUHJpY2UudnVlPzM4OWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQXllLENBQWdCLHFnQkFBRyxFQUFDIiwiZmlsZSI6ImM2YzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcz8/cmVmLS02LW9uZU9mLTEtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS02LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0dhc1ByaWNlLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTliNzEzOWFlJnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcz8/cmVmLS02LW9uZU9mLTEtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS02LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0dhc1ByaWNlLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTliNzEzOWFlJnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///c6c4\n')},d3f3:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9taW50ZXIvVm90aW5nRXNjcm93LnZ1ZT9iOGU1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImQzZjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///d3f3\n")},e7e9:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2faedd3d-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/common/GasPrice.vue?vue&type=template&id=9b7139ae&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',[_c(\'p\',{directives:[{name:"show",rawName:"v-show",value:(_vm.errorMessage),expression:"errorMessage"}],staticClass:"simple-error pulse"},[_vm._v(" "+_vm._s(_vm.errorMessage)+" ")]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.gasPriceMedium),expression:"gasPriceMedium"}],attrs:{"id":"gas_price"}},[_c(\'span\',[_vm._v("Gas price:")]),_c(\'input\',{attrs:{"id":"gasstandard","type":"radio","name":"gas"},domProps:{"value":_vm.gasPriceMedium},on:{"click":function($event){_vm.customGasDisabled = true; _vm.gasPrice = _vm.gasPriceMedium}}}),_c(\'label\',{attrs:{"for":"gasstandard"}},[_vm._v(_vm._s(Math.round(_vm.gasPriceMedium))+" Standard")]),_c(\'input\',{attrs:{"id":"gasfast","type":"radio","name":"gas","checked":""},domProps:{"value":_vm.gasPriceFast},on:{"click":function($event){_vm.customGasDisabled = true; _vm.gasPrice = _vm.gasPriceFast}}}),_c(\'label\',{attrs:{"for":"gasfast"}},[_vm._v(_vm._s(Math.round(_vm.gasPriceFast))+" Fast")]),_c(\'input\',{attrs:{"id":"gasinstant","type":"radio","name":"gas"},domProps:{"value":_vm.gasPriceFastest},on:{"click":function($event){_vm.customGasDisabled = true; _vm.gasPrice = _vm.gasPriceFastest}}}),_c(\'label\',{attrs:{"for":"gasinstant"}},[_vm._v(_vm._s(Math.round(_vm.gasPriceFastest))+" Instant")]),_c(\'input\',{attrs:{"id":"custom_gas","type":"radio","name":"gas","value":"-"},on:{"click":function($event){_vm.customGasDisabled = false; _vm.gasPrice = _vm.gasPriceSlow}}}),_c(\'label\',{attrs:{"for":"custom_gas"},on:{"click":function($event){_vm.customGasDisabled = false; _vm.gasPrice = _vm.gasPriceSlow}}},[_c(\'input\',{attrs:{"type":"text","id":"custom_gas_input","disabled":_vm.customGasDisabled,"name":"custom_gas_input"},domProps:{"value":_vm.customGasPriceInput},on:{"input":function($event){_vm.gasPrice = $event.target.value}}}),_c(\'span\',{directives:[{name:"show",rawName:"v-show",value:(_vm.customGasPriceInput == _vm.gasPriceSlow),expression:"customGasPriceInput == gasPriceSlow"}]},[_vm._v(" Slow")]),_c(\'span\',{directives:[{name:"show",rawName:"v-show",value:(_vm.customGasPriceInput && _vm.customGasPriceInput < _vm.gasPriceSlow),expression:"customGasPriceInput && customGasPriceInput < gasPriceSlow"}],staticClass:"gastoolow"},[_vm._m(0)])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'span\',{staticClass:"tooltip"},[_vm._v(" Low "),_c(\'span\',{staticClass:"tooltiptext"},[_vm._v(" Too low gas price. Your transaction may be dropped. ")])])}]\n\n\n// CONCATENATED MODULE: ./src/components/common/GasPrice.vue?vue&type=template&id=9b7139ae&scoped=true&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.to-fixed.js\nvar es_number_to_fixed = __webpack_require__("b680");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__("d3b7");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.timers.js\nvar web_timers = __webpack_require__("4795");\n\n// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__("96cf");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__("1da1");\n\n// EXTERNAL MODULE: ./src/components/common/gasPriceStore.js\nvar gasPriceStore = __webpack_require__("0a37");\n\n// EXTERNAL MODULE: ./src/components/common/errorStore.js\nvar errorStore = __webpack_require__("0c7c");\n\n// EXTERNAL MODULE: ./src/utils/helpers.js\nvar helpers = __webpack_require__("2fa3");\n\n// EXTERNAL MODULE: ./node_modules/set-interval-async/dynamic/index.mjs\nvar dynamic = __webpack_require__("fe5c");\n\n// EXTERNAL MODULE: ./node_modules/bignumber.js/bignumber.js\nvar bignumber = __webpack_require__("901e");\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/common/GasPrice.vue?vue&type=script&lang=js&\n\n\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n/* harmony default export */ var GasPricevue_type_script_lang_js_ = ({\n  data: function data() {\n    return {\n      customGasDisabled: true\n    };\n  },\n  computed: {\n    gasPriceSlow: function gasPriceSlow() {\n      return gasPriceStore["a" /* state */].gasPriceInfo && gasPriceStore["a" /* state */].gasPriceInfo.low || 15;\n    },\n    gasPriceMedium: function gasPriceMedium() {\n      return gasPriceStore["a" /* state */].gasPriceInfo && gasPriceStore["a" /* state */].gasPriceInfo.standard || 20;\n    },\n    gasPriceFast: function gasPriceFast() {\n      return gasPriceStore["a" /* state */].gasPriceInfo && gasPriceStore["a" /* state */].gasPriceInfo.fast || 25;\n    },\n    gasPriceFastest: function gasPriceFastest() {\n      return gasPriceStore["a" /* state */].gasPriceInfo && gasPriceStore["a" /* state */].gasPriceInfo.instant || 30;\n    },\n    gasPrice: {\n      get: function get() {\n        return gasPriceStore["a" /* state */].gasPrice;\n      },\n      set: function set(val) {\n        gasPriceStore["a" /* state */].gasPrice = val;\n      }\n    },\n    customGasPriceInput: function customGasPriceInput() {\n      if (this.customGasDisabled) return this.gasPriceSlow;\n      return this.gasPrice;\n    },\n    errorMessage: function errorMessage() {\n      setTimeout(function () {\n        return errorStore["b" /* state */].txError = null;\n      }, 2200);\n      return errorStore["b" /* state */].txError;\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              !gasPriceStore["a" /* state */].fetched && _this.getGasPrice();\n              gasPriceStore["a" /* state */].gasPriceInterval && Object(dynamic["clearIntervalAsync"])(gasPriceStore["a" /* state */].gasPriceInterval);\n\n              if (!gasPriceStore["a" /* state */].gasPriceInterval || gasPriceStore["a" /* state */].gasPriceInterval.stopped) {\n                gasPriceStore["a" /* state */].gasPriceInterval = Object(dynamic["setIntervalAsync"])(function () {\n                  return _this.getGasPrice();\n                }, 10000);\n              }\n\n              _this.$watch(function () {\n                return gasPriceStore["a" /* state */].gasPrice;\n              }, function (val) {\n                gasPriceStore["a" /* state */].gasPriceWei = bignumber_default()(val).times(1e9).toFixed(0, 1);\n              }, {\n                immediate: true\n              });\n\n            case 4:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    getGasPrice: function getGasPrice() {\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var gasPriceInfo, _gasPriceInfo, gasPrice;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Object(helpers["h" /* retry */])(fetch(\'https://gasprice.poa.network/\'));\n\n              case 3:\n                gasPriceInfo = _context2.sent;\n                _context2.next = 6;\n                return gasPriceInfo.json();\n\n              case 6:\n                gasPriceInfo = _context2.sent;\n                gasPriceInfo.low = gasPriceInfo.slow;\n                gasPriceStore["a" /* state */].gasPriceInfo = gasPriceInfo;\n\n                if (!(gasPriceStore["a" /* state */].gasPriceInfo.fast > 1000)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                throw new Error(\'too high!\');\n\n              case 11:\n                _context2.next = 39;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2["catch"](0);\n                _context2.prev = 15;\n                _context2.next = 18;\n                return Object(helpers["h" /* retry */])(fetch(\'https://fees.upvest.co/estimate_eth_fees\'));\n\n              case 18:\n                _gasPriceInfo = _context2.sent;\n                _context2.next = 21;\n                return _gasPriceInfo.json();\n\n              case 21:\n                _gasPriceInfo = _context2.sent;\n                gasPriceStore["a" /* state */].gasPriceInfo = _gasPriceInfo.estimates;\n                gasPriceStore["a" /* state */].gasPriceInfo.low = gasPriceStore["a" /* state */].gasPriceInfo.slow;\n                gasPriceStore["a" /* state */].gasPriceInfo.standard = gasPriceStore["a" /* state */].gasPriceInfo.medium;\n                gasPriceStore["a" /* state */].gasPriceInfo.fast = gasPriceStore["a" /* state */].gasPriceInfo.fast;\n                gasPriceStore["a" /* state */].gasPriceInfo.instant = gasPriceStore["a" /* state */].gasPriceInfo.fastest;\n\n                if (!(gasPriceStore["a" /* state */].gasPriceInfo.fast > 1000)) {\n                  _context2.next = 29;\n                  break;\n                }\n\n                throw new Error(\'too high!\');\n\n              case 29:\n                _context2.next = 39;\n                break;\n\n              case 31:\n                _context2.prev = 31;\n                _context2.t1 = _context2["catch"](15);\n                console.error(_context2.t1);\n                _context2.next = 36;\n                return web3.eth.getGasPrice();\n\n              case 36:\n                _context2.t2 = _context2.sent;\n                gasPrice = _context2.t2 / 1e9;\n                gasPriceStore["a" /* state */].gasPriceInfo = {\n                  low: gasPrice - 2,\n                  standard: gasPrice,\n                  fast: gasPrice + 2,\n                  instant: gasPrice + 4\n                };\n\n              case 39:\n                if (!gasPriceStore["a" /* state */].fetched) {\n                  gasPriceStore["a" /* state */].gasPrice = gasPriceStore["a" /* state */].gasPriceInfo.fast;\n                  gasPriceStore["a" /* state */].fetched = true;\n                }\n\n              case 40:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 13], [15, 31]]);\n      }))();\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/components/common/GasPrice.vue?vue&type=script&lang=js&\n /* harmony default export */ var common_GasPricevue_type_script_lang_js_ = (GasPricevue_type_script_lang_js_); \n// EXTERNAL MODULE: ./src/components/common/GasPrice.vue?vue&type=style&index=0&id=9b7139ae&scoped=true&lang=css&\nvar GasPricevue_type_style_index_0_id_9b7139ae_scoped_true_lang_css_ = __webpack_require__("c6c4");\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("2877");\n\n// CONCATENATED MODULE: ./src/components/common/GasPrice.vue\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  common_GasPricevue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "9b7139ae",\n  null\n  \n)\n\n/* harmony default export */ var GasPrice = __webpack_exports__["a"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///e7e9\n')},fe5c:function(__webpack_module__,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SetIntervalAsyncError", function() { return SetIntervalAsyncError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearIntervalAsync", function() { return clearIntervalAsync; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setIntervalAsync", function() { return setIntervalAsync; });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("3bdc");\n\n\n/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\nconst MAX_INTERVAL_MS = Math.pow(2, 31) - 1;\n/**\n * Stops an execution cycle started by setIntervalAsync.<br>\n * Any ongoing function executions will run until completion,\n * but all future ones will be cancelled.\n *\n * @param {SetIntervalAsyncTimer} timer\n * @returns {Promise}\n *          A promise which resolves when all pending executions have finished.\n */\n\nfunction clearIntervalAsync(_x) {\n  return _clearIntervalAsync.apply(this, arguments);\n}\n\nfunction _clearIntervalAsync() {\n  _clearIntervalAsync = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__(function* (timer) {\n    timer.stopped = true;\n\n    for (var _i = 0, _Object$values = Object.values(timer.timeouts); _i < _Object$values.length; _i++) {\n      const timeout = _Object$values[_i];\n      clearTimeout(timeout);\n    }\n\n    const noop = () => {};\n\n    const promises = Object.values(timer.promises).map(promise => {\n      promise.catch(noop);\n    });\n    const noopInterval = setInterval(noop, MAX_INTERVAL_MS);\n    yield Promise.all(promises);\n    clearInterval(noopInterval);\n  });\n  return _clearIntervalAsync.apply(this, arguments);\n}\n\n/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\n\n/**\n * Error thrown by setIntervalAsync when invalid arguments are provided.\n */\nclass SetIntervalAsyncError extends Error {}\n\nObject.defineProperty(SetIntervalAsyncError.prototype, \'name\', {\n  value: \'SetIntervalAsyncError\'\n});\n\n/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\nconst MIN_INTERVAL_MS = 10;\n/**\n * @private\n *\n * @param {function} handler - Handler function to be executed in intervals.<br>\n *                             May be asynchronous.\n */\n\nfunction validateHandler(handler) {\n  if (!(typeof handler === \'function\')) {\n    throw new SetIntervalAsyncError(\'Invalid argument: "handler". Expected a function.\');\n  }\n}\n/**\n * @private\n *\n * @param {number} interval - Interval in milliseconds. Must be at least 10 ms.\n */\n\nfunction validateInterval(interval) {\n  if (!(typeof interval === \'number\' && MIN_INTERVAL_MS <= interval)) {\n    throw new SetIntervalAsyncError(`Invalid argument: "interval". Expected a number greater than or equal to ${MIN_INTERVAL_MS}.`);\n  }\n}\n\n/**\n * Copyright (c) 2019 Emilio Almansi. All rights reserved.\n * This work is licensed under the terms of the MIT license.\n * For a copy, see the file LICENSE in the root directory.\n */\n\n/**\n * Timer object returned by setIntervalAsync.<br>\n * Can be used together with {@link clearIntervalAsync} to stop execution.\n */\nclass SetIntervalAsyncTimer {\n  constructor() {\n    this.stopped = false;\n    this.id = 0;\n    this.timeouts = {};\n    this.promises = {};\n  }\n\n}\n\n/**\n * Attempts to execute the given handler at regular intervals, while preventing<br>\n * multiple concurrent executions. The handler will never be executed concurrently<br>\n * more than once in any given moment. If the running time of any execution exceeds<br>\n * the desired interval, the following execution will be scheduled as soon as<br>\n * possible; ie. immediately after the previous execution concludes.\n *\n * @param {function} handler - Handler function to be executed in intervals.<br>\n *                             May be asynchronous.\n * @param {number} interval - Interval in milliseconds. Must be at least 10 ms.\n * @param {...*} args - Any number of arguments to pass on to the handler.\n * @returns {SetIntervalAsyncTimer}\n *          A timer object which can be used to stop execution with {@link clearIntervalAsync}.\n *\n * @alias [Dynamic] setIntervalAsync\n */\n\nfunction setIntervalAsync(handler, interval, ...args) {\n  validateHandler(handler);\n  validateInterval(interval);\n  const timer = new SetIntervalAsyncTimer();\n  const id = timer.id;\n  timer.timeouts[id] = setTimeout(timeoutHandler, interval, timer, handler, interval, ...args);\n  return timer;\n}\n\nfunction timeoutHandler(timer, handler, interval, ...args) {\n  const id = timer.id;\n  timer.promises[id] = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__(function* () {\n    const startTime = new Date();\n\n    try {\n      yield handler(...args);\n    } catch (err) {\n      console.error(err);\n    }\n\n    const endTime = new Date();\n\n    if (!timer.stopped) {\n      const executionTime = endTime - startTime;\n      const timeout = interval > executionTime ? interval - executionTime : 0;\n      timer.timeouts[id + 1] = setTimeout(timeoutHandler, timeout, timer, handler, interval, ...args);\n    }\n\n    delete timer.timeouts[id];\n    delete timer.promises[id];\n  })();\n  timer.id = id + 1;\n}\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///fe5c\n')}}]);