(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-07073e14","chunk-28591123"],{"027e":function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9taW50ZXIvR2F1Z2VzLnZ1ZT85NzYyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjAyN2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///027e\n")},"0481":function(module,exports,__webpack_require__){"use strict";eval('\nvar $ = __webpack_require__("23e7");\nvar flattenIntoArray = __webpack_require__("a2bf");\nvar toObject = __webpack_require__("7b0b");\nvar toLength = __webpack_require__("50c4");\nvar toInteger = __webpack_require__("a691");\nvar arraySpeciesCreate = __webpack_require__("65f0");\n\n// `Array.prototype.flat` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: \'Array\', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZsYXQuanM/MDQ4MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLFFBQVEsbUJBQU8sQ0FBQyxNQUFxQjtBQUNyQyx1QkFBdUIsbUJBQU8sQ0FBQyxNQUFpQztBQUNoRSxlQUFlLG1CQUFPLENBQUMsTUFBd0I7QUFDL0MsZUFBZSxtQkFBTyxDQUFDLE1BQXdCO0FBQy9DLGdCQUFnQixtQkFBTyxDQUFDLE1BQXlCO0FBQ2pELHlCQUF5QixtQkFBTyxDQUFDLE1BQW1DOztBQUVwRTtBQUNBO0FBQ0EsR0FBRywrQkFBK0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiMDQ4MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGZsYXR0ZW5JbnRvQXJyYXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmxhdHRlbi1pbnRvLWFycmF5Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWludGVnZXInKTtcbnZhciBhcnJheVNwZWNpZXNDcmVhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jcmVhdGUnKTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS5mbGF0YCBtZXRob2Rcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLWZsYXRNYXBcbiQoeyB0YXJnZXQ6ICdBcnJheScsIHByb3RvOiB0cnVlIH0sIHtcbiAgZmxhdDogZnVuY3Rpb24gZmxhdCgvKiBkZXB0aEFyZyA9IDEgKi8pIHtcbiAgICB2YXIgZGVwdGhBcmcgPSBhcmd1bWVudHMubGVuZ3RoID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkO1xuICAgIHZhciBPID0gdG9PYmplY3QodGhpcyk7XG4gICAgdmFyIHNvdXJjZUxlbiA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICB2YXIgQSA9IGFycmF5U3BlY2llc0NyZWF0ZShPLCAwKTtcbiAgICBBLmxlbmd0aCA9IGZsYXR0ZW5JbnRvQXJyYXkoQSwgTywgTywgc291cmNlTGVuLCAwLCBkZXB0aEFyZyA9PT0gdW5kZWZpbmVkID8gMSA6IHRvSW50ZWdlcihkZXB0aEFyZykpO1xuICAgIHJldHVybiBBO1xuICB9XG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0481\n')},"07ac":function(module,exports,__webpack_require__){eval('var $ = __webpack_require__("23e7");\nvar $values = __webpack_require__("6f53").values;\n\n// `Object.values` method\n// https://tc39.github.io/ecma262/#sec-object.values\n$({ target: \'Object\', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC52YWx1ZXMuanM/MDdhYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxRQUFRLG1CQUFPLENBQUMsTUFBcUI7QUFDckMsY0FBYyxtQkFBTyxDQUFDLE1BQThCOztBQUVwRDtBQUNBO0FBQ0EsR0FBRywrQkFBK0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIwN2FjLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgJHZhbHVlcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtdG8tYXJyYXknKS52YWx1ZXM7XG5cbi8vIGBPYmplY3QudmFsdWVzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLW9iamVjdC52YWx1ZXNcbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlIH0sIHtcbiAgdmFsdWVzOiBmdW5jdGlvbiB2YWx1ZXMoTykge1xuICAgIHJldHVybiAkdmFsdWVzKE8pO1xuICB9XG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///07ac\n')},"2ca0":function(module,exports,__webpack_require__){"use strict";eval('\nvar $ = __webpack_require__("23e7");\nvar getOwnPropertyDescriptor = __webpack_require__("06cf").f;\nvar toLength = __webpack_require__("50c4");\nvar notARegExp = __webpack_require__("5a34");\nvar requireObjectCoercible = __webpack_require__("1d80");\nvar correctIsRegExpLogic = __webpack_require__("ab13");\nvar IS_PURE = __webpack_require__("c430");\n\nvar nativeStartsWith = \'\'.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic(\'startsWith\');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, \'startsWith\');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.startswith\n$({ target: \'String\', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return nativeStartsWith\n      ? nativeStartsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aC5qcz8yY2EwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsUUFBUSxtQkFBTyxDQUFDLE1BQXFCO0FBQ3JDLCtCQUErQixtQkFBTyxDQUFDLE1BQWlEO0FBQ3hGLGVBQWUsbUJBQU8sQ0FBQyxNQUF3QjtBQUMvQyxpQkFBaUIsbUJBQU8sQ0FBQyxNQUEyQjtBQUNwRCw2QkFBNkIsbUJBQU8sQ0FBQyxNQUF1QztBQUM1RSwyQkFBMkIsbUJBQU8sQ0FBQyxNQUFzQztBQUN6RSxjQUFjLG1CQUFPLENBQUMsTUFBc0I7O0FBRTVDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLEdBQUcsdUZBQXVGO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiMmNhMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJykuZjtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1sZW5ndGgnKTtcbnZhciBub3RBUmVnRXhwID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL25vdC1hLXJlZ2V4cCcpO1xudmFyIHJlcXVpcmVPYmplY3RDb2VyY2libGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVxdWlyZS1vYmplY3QtY29lcmNpYmxlJyk7XG52YXIgY29ycmVjdElzUmVnRXhwTG9naWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY29ycmVjdC1pcy1yZWdleHAtbG9naWMnKTtcbnZhciBJU19QVVJFID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXB1cmUnKTtcblxudmFyIG5hdGl2ZVN0YXJ0c1dpdGggPSAnJy5zdGFydHNXaXRoO1xudmFyIG1pbiA9IE1hdGgubWluO1xuXG52YXIgQ09SUkVDVF9JU19SRUdFWFBfTE9HSUMgPSBjb3JyZWN0SXNSZWdFeHBMb2dpYygnc3RhcnRzV2l0aCcpO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvcHVsbC83MDJcbnZhciBNRE5fUE9MWUZJTExfQlVHID0gIUlTX1BVUkUgJiYgIUNPUlJFQ1RfSVNfUkVHRVhQX0xPR0lDICYmICEhZnVuY3Rpb24gKCkge1xuICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihTdHJpbmcucHJvdG90eXBlLCAnc3RhcnRzV2l0aCcpO1xuICByZXR1cm4gZGVzY3JpcHRvciAmJiAhZGVzY3JpcHRvci53cml0YWJsZTtcbn0oKTtcblxuLy8gYFN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aGAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnN0YXJ0c3dpdGhcbiQoeyB0YXJnZXQ6ICdTdHJpbmcnLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiAhTUROX1BPTFlGSUxMX0JVRyAmJiAhQ09SUkVDVF9JU19SRUdFWFBfTE9HSUMgfSwge1xuICBzdGFydHNXaXRoOiBmdW5jdGlvbiBzdGFydHNXaXRoKHNlYXJjaFN0cmluZyAvKiAsIHBvc2l0aW9uID0gMCAqLykge1xuICAgIHZhciB0aGF0ID0gU3RyaW5nKHJlcXVpcmVPYmplY3RDb2VyY2libGUodGhpcykpO1xuICAgIG5vdEFSZWdFeHAoc2VhcmNoU3RyaW5nKTtcbiAgICB2YXIgaW5kZXggPSB0b0xlbmd0aChtaW4oYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIHRoYXQubGVuZ3RoKSk7XG4gICAgdmFyIHNlYXJjaCA9IFN0cmluZyhzZWFyY2hTdHJpbmcpO1xuICAgIHJldHVybiBuYXRpdmVTdGFydHNXaXRoXG4gICAgICA/IG5hdGl2ZVN0YXJ0c1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGluZGV4KVxuICAgICAgOiB0aGF0LnNsaWNlKGluZGV4LCBpbmRleCArIHNlYXJjaC5sZW5ndGgpID09PSBzZWFyY2g7XG4gIH1cbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2ca0\n')},4069:function(module,exports,__webpack_require__){eval("// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = __webpack_require__(\"44d2\");\n\naddToUnscopables('flat');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnVuc2NvcGFibGVzLmZsYXQuanM/NDA2OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsdUJBQXVCLG1CQUFPLENBQUMsTUFBaUM7O0FBRWhFIiwiZmlsZSI6IjQwNjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0aGlzIG1ldGhvZCB3YXMgYWRkZWQgdG8gdW5zY29wYWJsZXMgYWZ0ZXIgaW1wbGVtZW50YXRpb25cbi8vIGluIHBvcHVsYXIgZW5naW5lcywgc28gaXQncyBtb3ZlZCB0byBhIHNlcGFyYXRlIG1vZHVsZVxudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYWRkLXRvLXVuc2NvcGFibGVzJyk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2ZsYXQnKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4069\n")},"586e":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2faedd3d-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/minter/Gauges.vue?vue&type=template&id=74c927c0&scoped=true&\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',[_c(\'div\',{staticClass:"window white"},[_c(\'voting-escrow\',{attrs:{"showchart":false}})],1),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.loading),expression:"loading"}],staticClass:"window white"},[_c(\'span\',{staticClass:"loading matrix"})]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.totalBalance == 0 && _vm.totalGaugeBalance == 0),expression:"totalBalance == 0 && totalGaugeBalance == 0"}],staticClass:"window white"},[_c(\'div\',{staticClass:"info-message gentle-message"},[_vm._v(" You don\'t have any Swerve pool LP tokens ")])]),_vm._l((_vm.mypools),function(pool,i){return _c(\'gauge\',{key:i,attrs:{"i":i}})}),_c(\'div\',{staticClass:"window white"},[_c(\'gas-price\')],1)],2)}\nvar staticRenderFns = []\n\n\n// CONCATENATED MODULE: ./src/components/minter/Gauges.vue?vue&type=template&id=74c927c0&scoped=true&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.fill.js\nvar es_array_fill = __webpack_require__("cb29");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js\nvar es_array_filter = __webpack_require__("4de4");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__("caad");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js\nvar es_array_map = __webpack_require__("d81d");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.reduce.js\nvar es_array_reduce = __webpack_require__("13d5");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js\nvar es_function_name = __webpack_require__("b0c0");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.to-fixed.js\nvar es_number_to_fixed = __webpack_require__("b680");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__("d3b7");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules\nvar toConsumableArray = __webpack_require__("2909");\n\n// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__("96cf");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__("1da1");\n\n// EXTERNAL MODULE: ./src/contract.js\nvar contract = __webpack_require__("51bf");\n\n// EXTERNAL MODULE: ./src/init.js\nvar init = __webpack_require__("d99e");\n\n// EXTERNAL MODULE: ./src/allabis.js\nvar allabis = __webpack_require__("5245");\n\n// EXTERNAL MODULE: ./src/components/dao/allabis.js\nvar dao_allabis = __webpack_require__("04ef");\n\n// EXTERNAL MODULE: ./node_modules/highcharts/highcharts.js\nvar highcharts = __webpack_require__("ea7f");\nvar highcharts_default = /*#__PURE__*/__webpack_require__.n(highcharts);\n\n// EXTERNAL MODULE: ./node_modules/highcharts/modules/exporting.js\nvar exporting = __webpack_require__("0319");\nvar exporting_default = /*#__PURE__*/__webpack_require__.n(exporting);\n\n// EXTERNAL MODULE: ./node_modules/highcharts/modules/export-data.js\nvar export_data = __webpack_require__("d68a");\nvar export_data_default = /*#__PURE__*/__webpack_require__.n(export_data);\n\n// EXTERNAL MODULE: ./node_modules/highcharts-vue/dist/highcharts-vue.min.js\nvar highcharts_vue_min = __webpack_require__("4452");\n\n// EXTERNAL MODULE: ./src/components/minter/gaugeStore.js + 1 modules\nvar gaugeStore = __webpack_require__("770d");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2faedd3d-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/minter/Gauge.vue?vue&type=template&id=1bc60686&scoped=true&\nvar Gaugevue_type_template_id_1bc60686_scoped_true_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.gauge.name != \'usdt\'),expression:"gauge.name != \'usdt\'"}],staticClass:"window white"},[_c(\'fieldset\',[_c(\'legend\',[_vm._v(" "+_vm._s(_vm.gauge.name)+" "+_vm._s(_vm.gauge.typeName)+" gauge "),_c(\'b\',[_c(\'img\',{staticClass:"icon small",attrs:{"src":_vm.publicPath + \'logo.png\'}}),_vm._v(" SWRV APY:")]),_vm._v(" "+_vm._s(_vm._f("formatNumber")(_vm.apy,2))+"% ")]),_c(\'div\',{staticClass:"pool-info"},[_c(\'div\',{staticClass:"gaugeRelativeWeight"},[_vm._v(" Gauge relative weight: "+_vm._s(_vm.gaugeRelativeWeight.toFixed(2))+"% ")]),_c(\'div\',{staticClass:"mintedCRVFrom"},[_vm._v(" Minted SWRV from this gauge: "+_vm._s(_vm.mintedFormat)+" ")]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.displayBoostRate !== null && !isNaN(_vm.boost)),expression:"displayBoostRate !== null && !isNaN(boost)"}],staticClass:"boost"},[_vm._v(" Boost: "+_vm._s(_vm._f("formatNumber")(_vm.displayBoostRate,2))+"x ")]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.realBoostRate !== null && !isNaN(_vm.realBoostRate)),expression:"realBoostRate !== null && !isNaN(realBoostRate)"}],staticClass:"boost"},[_vm._v(" My APY: "+_vm._s(_vm._f("formatNumber")(_vm.realBoostRate * _vm.apy,2))+"% ")])]),_c(\'div\',{class:{\'pools\': true, \'justifySpaceAround\': _vm.gaugeBalance > 0}},[_c(\'div\',{staticClass:"flex-break"}),_c(\'div\',{staticClass:"pool"},[_c(\'p\',{directives:[{name:"show",rawName:"v-show",value:([\'susdv2\',\'sbtc\'].includes(_vm.gauge.name) && _vm.stakedBalance > 0),expression:"[\'susdv2\',\'sbtc\'].includes(gauge.name) && stakedBalance > 0"}],staticClass:"info-message gentle-message"},[_c(\'a\',{attrs:{"href":\'https://swerve.fi/\'+_vm.gauge.name+\'/withdraw\'}},[_vm._v("Unstake rewards")])]),_c(\'div\',{staticClass:"poolBalance"},[_vm._v("Balance: "),_c(\'span\',{staticClass:"hoverpointer",on:{"click":_vm.setMaxPool}},[_vm._v(_vm._s(_vm.poolBalanceFormat))]),_vm._v(" "+_vm._s(_vm.gauge.name)+" LP token")]),_c(\'div\',{staticClass:"input"},[_c(\'label\',{attrs:{"for":"deposit"}},[_vm._v("Amount:")]),_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.depositAmount),expression:"depositAmount"}],attrs:{"id":"deposit","type":"text"},domProps:{"value":(_vm.depositAmount)},on:{"input":function($event){if($event.target.composing){ return; }_vm.depositAmount=$event.target.value}}})]),_c(\'div\',{staticClass:"range"},[_c(\'div\',{staticClass:"label"},[_c(\'label\',{attrs:{"for":"zoom"}},[_vm._v(_vm._s(_vm.depositSlider)+"%")])]),_c(\'div\',[_c(\'input\',{attrs:{"type":"range","min":"0","max":"100","step":"1","id":"zoom"},domProps:{"value":_vm.depositSlider},on:{"input":_vm.onDepositSlider}})])]),_c(\'div\',[_c(\'p\',[_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.inf_approval),expression:"inf_approval"}],attrs:{"id":\'inf-approval-\'+_vm.gauge.name,"type":"checkbox","name":"inf-approval"},domProps:{"checked":Array.isArray(_vm.inf_approval)?_vm._i(_vm.inf_approval,null)>-1:(_vm.inf_approval)},on:{"change":function($event){var $$a=_vm.inf_approval,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.inf_approval=$$a.concat([$$v]))}else{$$i>-1&&(_vm.inf_approval=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.inf_approval=$$c}}}}),_c(\'label\',{staticClass:"inf-approval-label",attrs:{"for":\'inf-approval-\'+_vm.gauge.name}},[_vm._v("Infinite approval "),_vm._m(0)])]),_c(\'div\',[_c(\'button\',{staticClass:"simplebutton",on:{"click":_vm.deposit}},[_vm._v(" Deposit "),_c(\'span\',{directives:[{name:"show",rawName:"v-show",value:([\'susdv2\', \'sbtc\'].includes(_vm.gauge.name)),expression:"[\'susdv2\', \'sbtc\'].includes(gauge.name)"}]},[_vm._v(" and stake")])])])])]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.gaugeBalance > 0),expression:"gaugeBalance > 0"}],staticClass:"gauge"},[_c(\'div\',{staticClass:"gaugeBalance"},[_vm._v("Balance: "),_c(\'span\',{staticClass:"hoverpointer",on:{"click":_vm.setMaxGauge}},[_vm._v(_vm._s(_vm.gaugeBalanceFormat))]),_vm._v(" in gauge")]),_c(\'div\',{staticClass:"input"},[_c(\'label\',{attrs:{"for":"withdraw"}},[_vm._v("Amount:")]),_c(\'input\',{directives:[{name:"model",rawName:"v-model",value:(_vm.withdrawAmount),expression:"withdrawAmount"}],attrs:{"id":"withdraw","type":"text"},domProps:{"value":(_vm.withdrawAmount)},on:{"input":function($event){if($event.target.composing){ return; }_vm.withdrawAmount=$event.target.value}}})]),_c(\'div\',{staticClass:"range"},[_c(\'div\',{staticClass:"label"},[_c(\'label\',{attrs:{"for":"zoom"}},[_vm._v(_vm._s(_vm.withdrawSlider)+"%")])]),_c(\'div\',[_c(\'input\',{attrs:{"type":"range","min":"0","max":"100","step":"1","id":"zoom"},domProps:{"value":_vm.withdrawSlider},on:{"input":_vm.onWithdrawSlider}})])]),_c(\'button\',{on:{"click":_vm.withdraw}},[_vm._v("Withdraw")])]),_c(\'div\',{staticClass:"flex-break"}),_c(\'div\',{staticClass:"claimButtons"},[_c(\'button\',{directives:[{name:"show",rawName:"v-show",value:(_vm.claimableTokens > 0),expression:"claimableTokens > 0"}],staticClass:"claimtokens",on:{"click":_vm.claim}},[_vm._v("Claim "+_vm._s(_vm.claimableTokensFormat)+" SWRV")]),_c(\'button\',{directives:[{name:"show",rawName:"v-show",value:(_vm.claimableReward > 0),expression:"claimableReward > 0"}],staticClass:"claimrewards",on:{"click":_vm.claimRewards}},[_vm._v(" Claim "+_vm._s(_vm.claimableRewardFormat)+" "),_c(\'span\',{directives:[{name:"show",rawName:"v-show",value:(_vm.gauge.name == \'susdv2\'),expression:"gauge.name == \'susdv2\'"}]},[_vm._v("SNX")]),_c(\'span\',{directives:[{name:"show",rawName:"v-show",value:(_vm.gauge.name == \'sbtc\'),expression:"gauge.name == \'sbtc\'"}]},[_vm._v("BPT")])])]),_c(\'div\',{directives:[{name:"show",rawName:"v-show",value:(_vm.waitingMessage),expression:"waitingMessage"}],staticClass:"info-message gentle-message waiting-message"},[_c(\'span\',{domProps:{"innerHTML":_vm._s(_vm.waitingMessage)}}),_c(\'span\',{staticClass:"loading line"})])])])])}\nvar Gaugevue_type_template_id_1bc60686_scoped_true_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'span\',{staticClass:"tooltip"},[_vm._v("[?] "),_c(\'span\',{staticClass:"tooltiptext long"},[_vm._v(" Preapprove the contract to to be able to spend any amount of your coins. You will not need to approve again. ")])])}]\n\n\n// CONCATENATED MODULE: ./src/components/minter/Gauge.vue?vue&type=template&id=1bc60686&scoped=true&\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js\nvar es_array_slice = __webpack_require__("fb6a");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.now.js\nvar es_date_now = __webpack_require__("6eba");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-string.js\nvar es_date_to_string = __webpack_require__("0d03");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.timers.js\nvar web_timers = __webpack_require__("4795");\n\n// EXTERNAL MODULE: ./src/utils/common.js\nvar common = __webpack_require__("cf45");\n\n// EXTERNAL MODULE: ./src/components/minter/veStore.js\nvar veStore = __webpack_require__("2b7d");\n\n// EXTERNAL MODULE: ./node_modules/bignumber.js/bignumber.js\nvar bignumber = __webpack_require__("901e");\nvar bignumber_default = /*#__PURE__*/__webpack_require__.n(bignumber);\n\n// EXTERNAL MODULE: ./src/utils/helpers.js\nvar helpers = __webpack_require__("2fa3");\n\n// EXTERNAL MODULE: ./src/components/common/gasPriceStore.js\nvar gasPriceStore = __webpack_require__("0a37");\n\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/minter/Gauge.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n\n\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n\nvar staking = [\'0x77C6E4a580c0dCE4E5c7a17d0bc077188a83A059\', \'0x075b1bb99792c9E1041bA13afEf80C91a1e70fB3\'].map(function (a) {\n  return a.toLowerCase();\n});\n\n/* harmony default export */ var Gaugevue_type_script_lang_js_ = ({\n  props: [\'i\'],\n  data: function data() {\n    return {\n      depositAmount: 0,\n      withdrawAmount: 0,\n      gaugeContract: null,\n      depositSlider: 100,\n      withdrawSlider: 100,\n      claimableTokens: null,\n      claimableReward: null,\n      claimedRewards: null,\n      minted: null,\n      boost: null,\n      loaded: false,\n      promise: helpers["g" /* makeCancelable */](Promise.resolve()),\n      stakedBalance: 0,\n      inf_approval: true,\n      BOOST_WARMUP: 2 * 7 * 86400,\n      WARMUP: true,\n      waitingMessage: \'\',\n      swrveApy: null,\n      swrvDisplayBoostRate: null,\n      swrvRealBoostRate: null\n    };\n  },\n  computed: {\n    displayBoostRate: function displayBoostRate() {\n      return this.swrvDisplayBoostRate;\n    },\n    realBoostRate: function realBoostRate() {\n      return this.swrvRealBoostRate;\n    },\n    gauge: function gauge() {\n      return gaugeStore["b" /* state */].mypools[this.i];\n    },\n    gaugeBalance: function gaugeBalance() {\n      return +this.gauge.gaugeBalance;\n    },\n    poolBalanceFormat: function poolBalanceFormat() {\n      return this.toFixed(this.gauge.balance / 1e18);\n    },\n    gaugeBalanceFormat: function gaugeBalanceFormat() {\n      return (this.gauge.gaugeBalance / 1e18).toFixed(2);\n    },\n    apy: function apy() {\n      return this.swrveApy; // gaugeStore.state.APYs[this.gauge.name]\n    },\n    gaugeRelativeWeight: function gaugeRelativeWeight() {\n      // gauge_relative_weight comes in as undefined after 1, todo: track down\n      return (this.gauge.gauge_relative_weight || 1) * 100;\n    },\n    claimableTokensFormat: function claimableTokensFormat() {\n      return (this.claimableTokens / 1e18).toFixed(2);\n    },\n    mintedFormat: function mintedFormat() {\n      return (this.minted / 1e18).toFixed(2);\n    },\n    triggerUpdateLimit: function triggerUpdateLimit() {\n      return this.depositAmount, veStore["b" /* state */].deposit, veStore["b" /* state */].increaseLock, this.WARMUP, Date.now();\n    },\n    gasPrice: function gasPrice() {\n      return gasPriceStore["a" /* state */].gasPrice;\n    },\n    gasPriceWei: function gasPriceWei() {\n      return gasPriceStore["a" /* state */].gasPriceWei;\n    },\n    publicPath: function publicPath() {\n      return "";\n    },\n    claimedRewardsFormat: function claimedRewardsFormat() {\n      return this.totalClaimableCRV;\n    },\n    claimableRewardFormat: function claimableRewardFormat() {\n      return (this.totalClaimableCRV / 1e18).toFixed(2);\n    }\n  },\n  watch: {\n    totalClaimableCRV: function totalClaimableCRV() {\n      return gaugeStore["b" /* state */].totalClaimableCRV;\n    },\n    depositAmount: function depositAmount(val) {\n      var depositVal = val * 100 / (this.gauge.balance / 1e18) || 0;\n      this.depositSlider = Math.min(depositVal, 100).toFixed(0);\n    },\n    withdrawAmount: function withdrawAmount(val) {\n      var withdrawVal = val * 100 / (this.gauge.gaugeBalance / 1e18) || 0;\n      this.withdrawSlider = Math.min(withdrawVal, 100).toFixed(0);\n    },\n    triggerUpdateLimit: function triggerUpdateLimit() {\n      var _this = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var newLimit;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (_this.loaded) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt("return");\n\n              case 2:\n                _this.promise.cancel();\n\n                _this.promise = helpers["g" /* makeCancelable */](_this.update_liquidity_limit(_this.depositAmount, veStore["a" /* newVotingPower */]()));\n                _context.next = 6;\n                return _this.promise;\n\n              case 6:\n                newLimit = _context.sent;\n                _this.boost = newLimit[1];\n\n              case 8:\n              case "end":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    this.mounted();\n  },\n  methods: {\n    formatNumber: function formatNumber(number) {\n      var dec = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      return helpers["d" /* formatNumber */](number, dec);\n    },\n    mounted: function mounted() {\n      var _this2 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var curveRewards, allowance, boostRates;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return gaugeStore["a" /* getState */]();\n\n              case 2:\n                _this2.depositAmount = _this2.poolBalanceFormat;\n                _this2.withdrawAmount = _this2.gaugeBalanceFormat;\n                _this2.gaugeContract = new contract["b" /* contract */].web3.eth.Contract(dao_allabis["default"].liquiditygauge_abi, _this2.gauge.gauge);\n                _this2.swap_token = new contract["b" /* contract */].web3.eth.Contract(allabis["b" /* ERC20_abi */], _this2.gauge.swap_token);\n                setTimeout(function () {\n                  return _this2.loaded = true;\n                }, 1000); //this.claimableTokens = await this.gaugeContract.methods.claimable_tokens(contract.default_account).call()\n\n                _this2.claimableTokens = _this2.gauge.claimable_tokens;\n                gaugeStore["b" /* state */].totalClaimableCRV += +_this2.claimableTokens;\n\n                if (![\'susdv2\', \'sbtc\'].includes(_this2.gauge.name)) {\n                  _context2.next = 21;\n                  break;\n                }\n\n                curveRewards = new web3.eth.Contract(allabis["d" /* default */][_this2.gauge.name].sCurveRewards_abi, allabis["d" /* default */][_this2.gauge.name].sCurveRewards_address);\n                _context2.next = 13;\n                return curveRewards.methods.balanceOf(contract["b" /* contract */].default_account).call();\n\n              case 13:\n                _this2.stakedBalance = _context2.sent;\n                _context2.next = 16;\n                return _this2.gaugeContract.methods.claimable_reward(contract["b" /* contract */].default_account).call();\n\n              case 16:\n                _this2.claimableReward = _context2.sent;\n                _context2.next = 19;\n                return _this2.gaugeContract.methods.claimed_rewards_for(contract["b" /* contract */].default_account).call();\n\n              case 19:\n                _this2.claimedRewards = _context2.sent;\n                _this2.claimableReward -= _this2.claimedRewards;\n\n              case 21:\n                //this.minted = await gaugeStore.state.minter.methods.minted(contract.default_account, this.gauge.gauge).call()\n                _this2.minted = _this2.gauge.minted;\n                gaugeStore["b" /* state */].totalMintedCRV += +_this2.minted;\n                _context2.t0 = bignumber_default.a;\n                _context2.next = 26;\n                return _this2.swap_token.methods.allowance(contract["b" /* contract */].default_account, _this2.gauge.gauge).call();\n\n              case 26:\n                _context2.t1 = _context2.sent;\n                allowance = (0, _context2.t0)(_context2.t1);\n                if (allowance.lte(contract["b" /* contract */].max_allowance.div(bignumber_default()(2)))) _this2.inf_approval = true; // calculate apy\n\n                _context2.next = 31;\n                return common["b" /* calculateSwrvApy */]();\n\n              case 31:\n                _this2.swrveApy = _context2.sent;\n                _context2.next = 34;\n                return common["d" /* getUserBoostValue */]();\n\n              case 34:\n                boostRates = _context2.sent;\n                _this2.swrvDisplayBoostRate = boostRates ? boostRates[0] : 0;\n                _this2.swrvRealBoostRate = boostRates ? boostRates[1] : 0;\n\n              case 37:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    deposit: function deposit() {\n      var _this3 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var deposit, balance, gas, _notifyNotification, dismiss;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                deposit = bignumber_default()(_this3.depositAmount).times(1e18);\n                _context3.t0 = bignumber_default.a;\n                _context3.next = 4;\n                return _this3.swap_token.methods.balanceOf(contract["b" /* contract */].default_account).call();\n\n              case 4:\n                _context3.t1 = _context3.sent;\n                balance = (0, _context3.t0)(_context3.t1);\n                if (deposit.gt(bignumber_default()(_this3.gauge.balance))) deposit = balance;\n                gas = 500000;\n                _context3.next = 10;\n                return common["a" /* approveAmount */](_this3.swap_token, deposit, contract["b" /* contract */].default_account, _this3.gauge.gauge, _this3.inf_approval);\n\n              case 10:\n                _notifyNotification = Object(init["c" /* notifyNotification */])("Please confirm depositing into ".concat(_this3.gauge.name, " gauge")), dismiss = _notifyNotification.dismiss;\n                _this3.waitingMessage = "Please confirm depositing into ".concat(_this3.gauge.name, " gauge");\n                _context3.next = 14;\n                return _this3.gaugeContract.methods.deposit(deposit.toFixed(0, 1)).send({\n                  from: contract["b" /* contract */].default_account,\n                  gasPrice: _this3.gasPriceWei,\n                  gas: gas\n                }).once(\'transactionHash\', function (hash) {\n                  dismiss();\n                  Object(init["b" /* notifyHandler */])(hash);\n                  _this3.waitingMessage = "WAITING FOR TRANSACTION TO CONFIRM: NO FURTHER ACTION NEEDED";\n                })["finally"](function () {\n                  _this3.waitingMessage = \'\';\n\n                  _this3.updateStakeValues();\n                });\n\n              case 14:\n                _this3.updateBalances();\n\n              case 15:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    withdraw: function withdraw() {\n      var _this4 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var withdraw, balance, gas, _notifyNotification2, dismiss;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                withdraw = bignumber_default()(_this4.withdrawAmount).times(1e18);\n                _context4.t0 = bignumber_default.a;\n                _context4.next = 4;\n                return _this4.gaugeContract.methods.balanceOf(contract["b" /* contract */].default_account).call();\n\n              case 4:\n                _context4.t1 = _context4.sent;\n                balance = (0, _context4.t0)(_context4.t1);\n                if (withdraw.gt(balance)) withdraw = balance;\n                gas = 1000000;\n                _context4.prev = 8;\n                _context4.next = 11;\n                return _this4.gaugeContract.methods.withdraw(withdraw.toFixed(0, 1)).estimateGas();\n\n              case 11:\n                gas = _context4.sent;\n                _context4.next = 17;\n                break;\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t2 = _context4["catch"](8);\n                console.error(_context4.t2);\n\n              case 17:\n                _notifyNotification2 = Object(init["c" /* notifyNotification */])("Please confirm withdrawing from ".concat(_this4.gauge.name, " gauge")), dismiss = _notifyNotification2.dismiss;\n                _this4.waitingMessage = "Please confirm withdrawing from ".concat(_this4.gauge.name, " gauge");\n                _context4.next = 21;\n                return _this4.gaugeContract.methods.withdraw(withdraw.toFixed(0, 1)).send({\n                  from: contract["b" /* contract */].default_account,\n                  gasPrice: _this4.gasPriceWei,\n                  gas: gas * 1.5 | 0\n                }).once(\'transactionHash\', function (hash) {\n                  dismiss();\n                  Object(init["b" /* notifyHandler */])(hash);\n                  _this4.waitingMessage = "WAITING FOR TRANSACTION TO CONFIRM: NO FURTHER ACTION NEEDED";\n                })["finally"](function () {\n                  _this4.waitingMessage = \'\';\n\n                  _this4.updateStakeValues();\n                });\n\n              case 21:\n                _this4.updateBalances();\n\n              case 22:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[8, 14]]);\n      }))();\n    },\n    updateBalances: function updateBalances() {\n      var _this5 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var calls, aggcalls, decoded;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                calls = [//balanceOf\n                [_this5.gauge.swap_token, \'0x70a08231000000000000000000000000\' + contract["b" /* contract */].default_account.slice(2)], [_this5.gaugeContract._address, _this5.gaugeContract.methods.balanceOf(contract["b" /* contract */].default_account).encodeABI()]];\n                console.log("XXX GAUGE 1");\n                _context5.next = 4;\n                return common["c" /* clean_and_multi_call */](calls);\n\n              case 4:\n                aggcalls = _context5.sent;\n                decoded = aggcalls[1].map(function (hex) {\n                  return web3.eth.abi.decodeParameter(\'uint256\', hex);\n                });\n                gaugeStore["b" /* state */].mypools[_this5.i].balance = decoded[0];\n                gaugeStore["b" /* state */].mypools[_this5.i].gaugeBalance = decoded[1];\n\n              case 8:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    toFixed: function toFixed(num) {\n      if (num == \'\' || num == undefined || +num == 0) return \'0.00\';\n      if (!bignumber_default.a.isBigNumber(num)) num = +num;\n      if ([\'ren\', \'sbtc\'].includes(this.gauge.name)) return num.toFixed(8);\n      return num.toFixed(2);\n    },\n    setMaxPool: function setMaxPool() {\n      this.depositAmount = this.gauge.balance / 1e18;\n    },\n    setMaxGauge: function setMaxGauge() {\n      this.withdrawAmount = this.gauge.gaugeBalance / 1e18;\n    },\n    onDepositSlider: function onDepositSlider(event) {\n      var val = event.target.value;\n      this.depositSlider = val;\n      this.depositAmount = this.toFixed(this.gauge.balance / 1e18 * val / 100);\n    },\n    onWithdrawSlider: function onWithdrawSlider(event) {\n      var val = event.target.value;\n      this.withdrawSlider = val;\n      this.withdrawAmount = this.toFixed(this.gauge.gaugeBalance / 1e18 * val / 100);\n    },\n    update_liquidity_limit: function update_liquidity_limit() {\n      var _arguments = arguments,\n          _this6 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var new_l, new_voting_balance, l, example_gauge, calls, aggcalls, decoded, voting_balance, voting_total, period_timestamp, working_balances, working_supply, L, TOKENLESS_PRODUCTION, BOOST_WARMUP, lim, old_bal, noboost_lim, noboost_supply, _working_supply;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                new_l = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : null;\n                new_voting_balance = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : null;\n                l = +_this6.gauge.gaugeBalance;\n                if (new_l) l = new_l * 1e18;\n                example_gauge = new contract["b" /* contract */].web3.eth.Contract(dao_allabis["default"].liquiditygauge_abi, _this6.gauge.gauge);\n                calls = [[gaugeStore["b" /* state */].votingEscrow._address, gaugeStore["b" /* state */].votingEscrow.methods.balanceOf(contract["b" /* contract */].default_account).encodeABI()], [gaugeStore["b" /* state */].votingEscrow._address, gaugeStore["b" /* state */].votingEscrow.methods.totalSupply().encodeABI()], [_this6.gauge.gauge, example_gauge.methods.period_timestamp(0).encodeABI()], [_this6.gauge.gauge, example_gauge.methods.working_balances(contract["b" /* contract */].default_account).encodeABI()], [_this6.gauge.gauge, example_gauge.methods.working_supply().encodeABI()], [_this6.gauge.gauge, example_gauge.methods.totalSupply().encodeABI()]];\n                _context6.next = 8;\n                return common["c" /* clean_and_multi_call */](calls);\n\n              case 8:\n                aggcalls = _context6.sent;\n                decoded = aggcalls[1].map(function (hex) {\n                  return web3.eth.abi.decodeParameter(\'uint256\', hex);\n                });\n                voting_balance = +decoded[0];\n                voting_total = +decoded[1] - +voting_balance;\n                period_timestamp = +decoded[2];\n                working_balances = +decoded[3];\n                working_supply = +decoded[4];\n                L = +decoded[5] + l;\n\n                if (new_voting_balance) {\n                  voting_balance = new_voting_balance * 1e18;\n                }\n\n                voting_total += voting_balance;\n                TOKENLESS_PRODUCTION = 40;\n                BOOST_WARMUP = _this6.BOOST_WARMUP;\n                if (!_this6.WARMUP) BOOST_WARMUP = 0;\n                lim = l * TOKENLESS_PRODUCTION / 100;\n                if (voting_total > 0 && Date.now() / 1000 > period_timestamp + BOOST_WARMUP) lim += L * voting_balance / voting_total * (100 - TOKENLESS_PRODUCTION) / 100;\n                lim = Math.min(l, lim);\n                old_bal = working_balances;\n                noboost_lim = TOKENLESS_PRODUCTION * l / 100;\n                noboost_supply = working_supply + noboost_lim - old_bal;\n                _working_supply = working_supply + lim - old_bal;\n                return _context6.abrupt("return", [_working_supply, lim / _working_supply / (noboost_lim / noboost_supply)]);\n\n              case 29:\n              case "end":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    updateStakeValues: function updateStakeValues() {\n      var _this7 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _this7.mounted();\n\n              case 1:\n              case "end":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    claim: function claim() {\n      var _this8 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        var gas, _notifyNotification3, dismiss;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return gaugeStore["b" /* state */].minter.methods.mint(_this8.gauge.gauge).estimateGas();\n\n              case 2:\n                gas = _context8.sent;\n                if ([\'susdv2\', \'sbtc\'].includes(_this8.gauge.name)) gas = 1000000;\n                _notifyNotification3 = Object(init["c" /* notifyNotification */])("Please confirm claiming SWRV from ".concat(_this8.gauge.name, " gauge")), dismiss = _notifyNotification3.dismiss;\n                _this8.waitingMessage = "Please confirm claiming SWRV from ".concat(_this8.gauge.name, " gauge");\n                _context8.next = 8;\n                return gaugeStore["b" /* state */].minter.methods.mint(_this8.gauge.gauge).send({\n                  from: contract["b" /* contract */].default_account,\n                  gas: gas * 1.5 | 0\n                }).once(\'transactionHash\', function (hash) {\n                  dismiss();\n                  Object(init["b" /* notifyHandler */])(hash);\n                  _this8.waitingMessage = "WAITING FOR TRANSACTION TO CONFIRM: NO FURTHER ACTION NEEDED";\n                })["finally"](function () {\n                  _this8.waitingMessage = \'\';\n\n                  _this8.updateStakeValues();\n                });\n\n              case 8:\n              case "end":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    },\n    claimRewards: function claimRewards() {\n      var _this9 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n        var gas, _notifyNotification4, dismiss;\n\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return _this9.gaugeContract.methods.claim_rewards(contract["b" /* contract */].default_account).estimateGas();\n\n              case 2:\n                gas = _context9.sent;\n                // if([\'susdv2\', \'sbtc\'].includes(this.gauge.name))\n                // \tgas = 1000000\n                _notifyNotification4 = Object(init["c" /* notifyNotification */])("Please confirm claiming ".concat(_this9.gauge.name == \'susdv2\' ? \'SNX\' : \'BPT\')), dismiss = _notifyNotification4.dismiss;\n                _this9.waitingMessage = "Please confirm claiming transaction";\n                _context9.next = 7;\n                return _this9.gaugeContract.methods.claim_rewards(contract["b" /* contract */].default_account).send({\n                  from: contract["b" /* contract */].default_account,\n                  gas: 500000\n                }).once(\'transactionHash\', function (hash) {\n                  dismiss();\n                  Object(init["b" /* notifyHandler */])(hash);\n                  _this9.waitingMessage = "WAITING FOR TRANSACTION TO CONFIRM: NO FURTHER ACTION NEEDED";\n                })["finally"](function () {\n                  _this9.waitingMessage = \'\';\n\n                  _this9.updateStakeValues();\n                });\n\n              case 7:\n              case "end":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/components/minter/Gauge.vue?vue&type=script&lang=js&\n /* harmony default export */ var minter_Gaugevue_type_script_lang_js_ = (Gaugevue_type_script_lang_js_); \n// EXTERNAL MODULE: ./src/components/minter/Gauge.vue?vue&type=style&index=0&id=1bc60686&scoped=true&lang=css&\nvar Gaugevue_type_style_index_0_id_1bc60686_scoped_true_lang_css_ = __webpack_require__("c44e");\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__("2877");\n\n// CONCATENATED MODULE: ./src/components/minter/Gauge.vue\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  minter_Gaugevue_type_script_lang_js_,\n  Gaugevue_type_template_id_1bc60686_scoped_true_render,\n  Gaugevue_type_template_id_1bc60686_scoped_true_staticRenderFns,\n  false,\n  null,\n  "1bc60686",\n  null\n  \n)\n\n/* harmony default export */ var Gauge = (component.exports);\n// EXTERNAL MODULE: ./src/components/minter/VotingEscrow.vue + 5 modules\nvar VotingEscrow = __webpack_require__("79ab");\n\n// EXTERNAL MODULE: ./src/components/common/GasPrice.vue + 4 modules\nvar GasPrice = __webpack_require__("e7e9");\n\n// CONCATENATED MODULE: ./src/components/common/priceStore.js\n\n\n\n\nvar state = {\n  btcPrice: null\n};\nfunction getBTCPrice() {\n  return _getBTCPrice.apply(this, arguments);\n}\n\nfunction _getBTCPrice() {\n  _getBTCPrice = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var req, res;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return helpers["h" /* retry */](fetch("https://api.coinpaprika.com/v1/tickers/btc-bitcoin"), 300);\n\n          case 2:\n            req = _context.sent;\n            _context.next = 5;\n            return req.json();\n\n          case 5:\n            res = _context.sent;\n            state.btcPrice = res.quotes.USD.price;\n            return _context.abrupt("return", res.quotes.USD.price);\n\n          case 8:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getBTCPrice.apply(this, arguments);\n}\n// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/minter/Gauges.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n\n\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\nexporting_default()(highcharts_default.a);\nexport_data_default()(highcharts_default.a);\n\nhighcharts_default.a.setOptions({\n  lang: {\n    loading: \'\'\n  }\n});\n\n\n\n\n\n\n/* harmony default export */ var Gaugesvue_type_script_lang_js_ = ({\n  components: {\n    Gauge: Gauge,\n    VotingEscrow: VotingEscrow["default"],\n    Highcharts: highcharts_vue_min["Chart"],\n    GasPrice: GasPrice["a" /* default */]\n  },\n  data: function data() {\n    return {\n      pools: [],\n      mypools: [],\n      piechartdata: {\n        chart: {\n          plotBackgroundColor: null,\n          plotBorderWidth: null,\n          plotShadow: false,\n          type: \'pie\'\n        },\n        title: {\n          text: \'Gauge allocation\'\n        },\n        tooltip: {\n          pointFormat: \'{series.name}: <b>{point.percentage:.1f}%</b>\'\n        },\n        accessibility: {\n          point: {\n            valueSuffix: \'%\'\n          }\n        },\n        plotOptions: {\n          pie: {\n            allowPointSelect: true,\n            cursor: \'pointer\',\n            dataLabels: {\n              enabled: true // formatter: (function(self) {\n              // \treturn function(point) { \n              // \t\treturn `<b>${this.key}</b>: \n              // \t\t${helpers.formatNumber(self.allPools[this.key], 0)}$\n              // \t\t(${this.percentage.toFixed(2)}%)`\n              // \t}\n              // })(this),\n\n            }\n          }\n        },\n        series: []\n      },\n      piechart: null,\n      showChart: true,\n      loading: true,\n      waitingMessage: \'\'\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.$watch(function () {\n                return contract["b" /* contract */].default_account && contract["b" /* contract */].multicall;\n              }, function (val, oldval) {\n                //if(val != null && oldval != null)\n                _this.mounted();\n              });\n\n            case 1:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (contract["b" /* contract */].default_account && contract["b" /* contract */].multicall) _this2.mounted();\n\n            case 1:\n            case "end":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  computed: {\n    totalClaimableCRV: function totalClaimableCRV() {\n      return gaugeStore["b" /* state */].totalClaimableCRV;\n    },\n    totalClaimableCRVFormat: function totalClaimableCRVFormat() {\n      return (gaugeStore["b" /* state */].totalClaimableCRV / 1e18).toFixed(2);\n    },\n    totalMintedCRV: function totalMintedCRV() {\n      return gaugeStore["b" /* state */].totalMintedCRV;\n    },\n    totalMintedCRVFormat: function totalMintedCRVFormat() {\n      return (this.totalMintedCRV / 1e18).toFixed(2);\n    },\n    totalBalance: function totalBalance() {\n      return gaugeStore["b" /* state */].totalBalance;\n    },\n    totalGaugeBalance: function totalGaugeBalance() {\n      return gaugeStore["b" /* state */].totalGaugeBalance;\n    },\n    gasPrice: function gasPrice() {\n      return gasPriceStore["a" /* state */].gasPrice;\n    },\n    gasPriceWei: function gasPriceWei() {\n      return gasPriceStore["a" /* state */].gasPriceWei;\n    }\n  },\n  methods: {\n    mounted: function mounted() {\n      var _this3 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var btcPrice, total;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                gaugeStore["b" /* state */].totalClaimableCRV = null; //this.piechart = this.$refs.piecharts.chart\n                //this.piechart.showLoading()\n\n                _context3.next = 3;\n                return gaugeStore["a" /* getState */]();\n\n              case 3:\n                _this3.loading = false;\n                _this3.pools = gaugeStore["b" /* state */].pools;\n                _this3.mypools = gaugeStore["b" /* state */].mypools;\n                _context3.next = 8;\n                return getBTCPrice();\n\n              case 8:\n                btcPrice = _context3.sent;\n                total = _this3.mypools.reduce(function (a, b, i) {\n                  var balance = +b.gaugeBalance;\n                  if ([\'ren\', \'sbtc\'].includes(_this3.mypools[i].name)) balance *= btcPrice;\n                  return +a + balance;\n                }, 0);\n\n                if (!(total == 0)) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                _this3.showChart = false;\n                return _context3.abrupt("return");\n\n              case 13:\n              case "end":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    updateStakeValues: function updateStakeValues() {\n      var _this4 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this4.mounted();\n\n              case 1:\n              case "end":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    claim: function claim() {\n      var _this5 = this;\n\n      return Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var gauges, fillarray, gas, _notifyNotification, dismiss;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                gauges = gaugeStore["b" /* state */].mypools.filter(function (gauge) {\n                  return +gauge.claimable_tokens > 0;\n                }).map(function (gauge) {\n                  return gauge.gauge;\n                });\n                fillarray = new Array(8 - gauges.length).fill(\'0x0000000000000000000000000000000000000000\');\n                gauges.push.apply(gauges, Object(toConsumableArray["a" /* default */])(fillarray));\n                _context5.next = 5;\n                return gaugeStore["b" /* state */].minter.methods.mint_many(gauges).estimateGas();\n\n              case 5:\n                gas = _context5.sent;\n                _notifyNotification = Object(init["c" /* notifyNotification */])("Please confirm claiming SWRV from all gauges you\'ve deposited to"), dismiss = _notifyNotification.dismiss;\n                _this5.waitingMessage = "PLEASE CONFIRM CLAIMING SWRV FROM ALL GAUGES YOU\'VE DEPOSITED TO";\n                _context5.next = 10;\n                return gaugeStore["b" /* state */].minter.methods.mint_many(gauges).send({\n                  from: contract["b" /* contract */].default_account,\n                  gasPrice: _this5.gasPriceWei,\n                  gas: gas * 1.5 | 0\n                }).once(\'transactionHash\', function (hash) {\n                  dismiss();\n                  Object(init["b" /* notifyHandler */])(hash);\n                  _this5.waitingMessage = "WAITING FOR TRANSACTION TO CONFIRM: NO FURTHER ACTION NEEDED";\n                })["finally"](function () {\n                  _this5.waitingMessage = \'\';\n\n                  _this5.updateStakeValues();\n                });\n\n              case 10:\n              case "end":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  }\n});\n// CONCATENATED MODULE: ./src/components/minter/Gauges.vue?vue&type=script&lang=js&\n /* harmony default export */ var minter_Gaugesvue_type_script_lang_js_ = (Gaugesvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./src/components/minter/Gauges.vue?vue&type=style&index=0&id=74c927c0&scoped=true&lang=css&\nvar Gaugesvue_type_style_index_0_id_74c927c0_scoped_true_lang_css_ = __webpack_require__("d798");\n\n// CONCATENATED MODULE: ./src/components/minter/Gauges.vue\n\n\n\n\n\n\n/* normalize component */\n\nvar Gauges_component = Object(componentNormalizer["a" /* default */])(\n  minter_Gaugesvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  "74c927c0",\n  null\n  \n)\n\n/* harmony default export */ var Gauges = __webpack_exports__["default"] = (Gauges_component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///586e\n')},"5db7":function(module,exports,__webpack_require__){"use strict";eval('\nvar $ = __webpack_require__("23e7");\nvar flattenIntoArray = __webpack_require__("a2bf");\nvar toObject = __webpack_require__("7b0b");\nvar toLength = __webpack_require__("50c4");\nvar aFunction = __webpack_require__("1c0b");\nvar arraySpeciesCreate = __webpack_require__("65f0");\n\n// `Array.prototype.flatMap` method\n// https://github.com/tc39/proposal-flatMap\n$({ target: \'Array\', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZsYXQtbWFwLmpzPzVkYjciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixRQUFRLG1CQUFPLENBQUMsTUFBcUI7QUFDckMsdUJBQXVCLG1CQUFPLENBQUMsTUFBaUM7QUFDaEUsZUFBZSxtQkFBTyxDQUFDLE1BQXdCO0FBQy9DLGVBQWUsbUJBQU8sQ0FBQyxNQUF3QjtBQUMvQyxnQkFBZ0IsbUJBQU8sQ0FBQyxNQUF5QjtBQUNqRCx5QkFBeUIsbUJBQU8sQ0FBQyxNQUFtQzs7QUFFcEU7QUFDQTtBQUNBLEdBQUcsK0JBQStCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiNWRiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGZsYXR0ZW5JbnRvQXJyYXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmxhdHRlbi1pbnRvLWFycmF5Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtZnVuY3Rpb24nKTtcbnZhciBhcnJheVNwZWNpZXNDcmVhdGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jcmVhdGUnKTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS5mbGF0TWFwYCBtZXRob2Rcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLWZsYXRNYXBcbiQoeyB0YXJnZXQ6ICdBcnJheScsIHByb3RvOiB0cnVlIH0sIHtcbiAgZmxhdE1hcDogZnVuY3Rpb24gZmxhdE1hcChjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHZhciBPID0gdG9PYmplY3QodGhpcyk7XG4gICAgdmFyIHNvdXJjZUxlbiA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICB2YXIgQTtcbiAgICBhRnVuY3Rpb24oY2FsbGJhY2tmbik7XG4gICAgQSA9IGFycmF5U3BlY2llc0NyZWF0ZShPLCAwKTtcbiAgICBBLmxlbmd0aCA9IGZsYXR0ZW5JbnRvQXJyYXkoQSwgTywgTywgc291cmNlTGVuLCAwLCAxLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgcmV0dXJuIEE7XG4gIH1cbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5db7\n')},"73d9":function(module,exports,__webpack_require__){eval("// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = __webpack_require__(\"44d2\");\n\naddToUnscopables('flatMap');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnVuc2NvcGFibGVzLmZsYXQtbWFwLmpzPzczZDkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBLHVCQUF1QixtQkFBTyxDQUFDLE1BQWlDOztBQUVoRSIsImZpbGUiOiI3M2Q5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdGhpcyBtZXRob2Qgd2FzIGFkZGVkIHRvIHVuc2NvcGFibGVzIGFmdGVyIGltcGxlbWVudGF0aW9uXG4vLyBpbiBwb3B1bGFyIGVuZ2luZXMsIHNvIGl0J3MgbW92ZWQgdG8gYSBzZXBhcmF0ZSBtb2R1bGVcbnZhciBhZGRUb1Vuc2NvcGFibGVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FkZC10by11bnNjb3BhYmxlcycpO1xuXG5hZGRUb1Vuc2NvcGFibGVzKCdmbGF0TWFwJyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///73d9\n")},"770d":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ gaugeStore_state; });\n__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ getState; });\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js\nvar es_array_concat = __webpack_require__("99af");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js\nvar es_array_filter = __webpack_require__("4de4");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.find.js\nvar es_array_find = __webpack_require__("7db0");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.flat.js\nvar es_array_flat = __webpack_require__("0481");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.flat-map.js\nvar es_array_flat_map = __webpack_require__("5db7");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js\nvar es_array_for_each = __webpack_require__("4160");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js\nvar es_array_from = __webpack_require__("a630");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js\nvar es_array_includes = __webpack_require__("caad");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js\nvar es_array_map = __webpack_require__("d81d");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.reduce.js\nvar es_array_reduce = __webpack_require__("13d5");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js\nvar es_array_slice = __webpack_require__("fb6a");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.unscopables.flat.js\nvar es_array_unscopables_flat = __webpack_require__("4069");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.unscopables.flat-map.js\nvar es_array_unscopables_flat_map = __webpack_require__("73d9");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js\nvar es_function_name = __webpack_require__("b0c0");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__("d3b7");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.values.js\nvar es_object_values = __webpack_require__("07ac");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.set.js\nvar es_set = __webpack_require__("6062");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js\nvar es_string_iterator = __webpack_require__("3ca3");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js\nvar web_dom_collections_for_each = __webpack_require__("159b");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js\nvar web_dom_collections_iterator = __webpack_require__("ddb0");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\nvar objectSpread2 = __webpack_require__("5530");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules\nvar toConsumableArray = __webpack_require__("2909");\n\n// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js\nvar runtime = __webpack_require__("96cf");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__("1da1");\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js\nvar vue_runtime_esm = __webpack_require__("2b0e");\n\n// EXTERNAL MODULE: ./src/contract.js\nvar contract = __webpack_require__("51bf");\n\n// EXTERNAL MODULE: ./src/allabis.js\nvar allabis = __webpack_require__("5245");\n\n// EXTERNAL MODULE: ./src/components/dao/allabis.js\nvar dao_allabis = __webpack_require__("04ef");\n\n// EXTERNAL MODULE: ./src/utils/common.js\nvar common = __webpack_require__("cf45");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.is-array.js\nvar es_array_is_array = __webpack_require__("277d");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-string.js\nvar es_date_to_string = __webpack_require__("0d03");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.entries.js\nvar es_object_entries = __webpack_require__("4fad");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.from-entries.js\nvar es_object_from_entries = __webpack_require__("c1f9");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js\nvar es_regexp_exec = __webpack_require__("ac1f");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js\nvar es_string_includes = __webpack_require__("2532");\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js\nvar es_string_split = __webpack_require__("1276");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\nvar createForOfIteratorHelper = __webpack_require__("b85c");\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules\nvar slicedToArray = __webpack_require__("3835");\n\n// CONCATENATED MODULE: ./src/components/common/volumeStore.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar initState = function initState() {\n  return {\n    compound: [],\n    usdt: [],\n    y: [],\n    busd: [],\n    susd: [],\n    pax: [],\n    tbtc: [],\n    ren: [],\n    sbtc: []\n  };\n};\n\nvar state = vue_runtime_esm["a" /* default */].observable({\n  volumes: Object(objectSpread2["a" /* default */])({}, Object.fromEntries(Object.entries(initState()).map(function (_ref) {\n    var _ref2 = Object(slicedToArray["a" /* default */])(_ref, 2),\n        key = _ref2[0],\n        el = _ref2[1];\n\n    return [key, [-1, -1]];\n  }))),\n  volumeData: {\n    5: Object(objectSpread2["a" /* default */])({}, initState()),\n    30: Object(objectSpread2["a" /* default */])({}, initState()),\n    1440: Object(objectSpread2["a" /* default */])({}, initState())\n  },\n  allVolume: Object(objectSpread2["a" /* default */])({}, initState())\n});\nfunction findClosestPrice(timestamp, data) {\n  var result = data.find(function (d) {\n    return Date.parse(d.timestamp) / 1000 - timestamp > 0;\n  });\n  if (result === undefined) return data[data.length - 1].price;\n  return result.price;\n}\nfunction fetchVolumeData(_x) {\n  return _fetchVolumeData.apply(this, arguments);\n}\n\nfunction _fetchVolumeData() {\n  _fetchVolumeData = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee(pools) {\n    var refresh,\n        period,\n        requests,\n        jsons,\n        btcPrices,\n        _iterator,\n        _step,\n        _step$value,\n        i,\n        data,\n        pool,\n        _args = arguments;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            refresh = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;\n            period = _args.length > 2 && _args[2] !== undefined ? _args[2] : 5;\n            if (!Array.isArray(pools)) pools = [pools];\n            pools = pools.map(function (p) {\n              return p == \'swusd\' ? \'swusd\' : p == \'susdv2\' ? \'susd\' : p == \'ren2\' ? \'ren\' : p == \'rens\' ? \'sbtc\' : p;\n            });\n            if (!refresh) pools = pools.filter(function (pool) {\n              return !state.volumeData[period][pool].length;\n            }); //pools = pools.filter(pool => ![\'tbtc\'].includes(pool))\n\n            requests = pools.map(function (p) {\n              if (p == \'ren\') p = \'ren2\';\n              if (p == \'sbtc\') p = \'rens\';\n              return fetch("".concat(window.domain, "/raw-stats/").concat(p, "-").concat(period, "m.json"));\n            }); //will work for 17 days on 5 minutes chart\n\n            if (pools.includes(\'tbtc\') || pools.includes(\'ren\') || pools.includes(\'sbtc\')) requests.push(fetch("\\n\\t\\t\\thttps://api.coinpaprika.com/v1/tickers/btc-bitcoin/historical?start=1589587198&interval=".concat(period == \'1440\' ? \'1d\' : period + \'m\', "&limit=5000")));\n            _context.next = 9;\n            return Promise.all(requests);\n\n          case 9:\n            requests = _context.sent;\n            _context.next = 12;\n            return Promise.all(requests.map(function (r) {\n              return r.json();\n            }));\n\n          case 12:\n            jsons = _context.sent;\n            btcPrices = jsons[jsons.length - 1];\n            if (pools.includes(\'tbtc\') || pools.includes(\'ren\')) jsons = jsons.slice(0, -1);\n            _iterator = Object(createForOfIteratorHelper["a" /* default */])(jsons.entries());\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                _step$value = Object(slicedToArray["a" /* default */])(_step.value, 2), i = _step$value[0], data = _step$value[1];\n                pool = pools[i];\n\n                if ([\'tbtc\', \'ren\', \'sbtc\'].includes(pool)) {\n                  data = data.map(function (d) {\n                    d.volume = Object.fromEntries(Object.entries(d.volume).map(function (_ref3) {\n                      var _ref4 = Object(slicedToArray["a" /* default */])(_ref3, 2),\n                          k = _ref4[0],\n                          v = _ref4[1];\n\n                      return [k, v.map(function (vol) {\n                        return vol * findClosestPrice(d.timestamp, btcPrices);\n                      })];\n                    }));\n                    return d;\n                  });\n                }\n\n                state.volumeData[period][pool] = data;\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n          case 17:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchVolumeData.apply(this, arguments);\n}\n\nfunction getVolumes(_x2) {\n  return _getVolumes.apply(this, arguments);\n}\n\nfunction _getVolumes() {\n  _getVolumes = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(pools) {\n    var refresh,\n        req,\n        _yield$Promise$all,\n        _yield$Promise$all2,\n        stats,\n        btcPrice,\n        _i,\n        _Object$entries,\n        _Object$entries$_i,\n        pool,\n        volume,\n        _volume,\n        _args2 = arguments;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            refresh = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : false;\n            if (!Array.isArray(pools)) pools = [pools];\n            pools = pools.map(function (p) {\n              return p == \'swusd\' ? \'swusd\' : p == \'susdv2\' ? \'susd\' : p == \'ren\' ? \'ren2\' : p == \'sbtc\' ? \'rens\' : p;\n            });\n\n            if (!(Object.values(state.volumes).filter(function (v) {\n              return v[0] != -1;\n            }).length == pools.length && !refresh)) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt("return");\n\n          case 5:\n            _context2.next = 7;\n            return Promise.all([fetch("".concat(window.domain, "/raw-stats/apys.json")), fetch("https://api.coinpaprika.com/v1/tickers/btc-bitcoin")]);\n\n          case 7:\n            req = _context2.sent;\n            _context2.next = 10;\n            return Promise.all(req.map(function (r) {\n              return r.json();\n            }));\n\n          case 10:\n            _yield$Promise$all = _context2.sent;\n            _yield$Promise$all2 = Object(slicedToArray["a" /* default */])(_yield$Promise$all, 2);\n            stats = _yield$Promise$all2[0];\n            btcPrice = _yield$Promise$all2[1];\n            btcPrice = btcPrice.quotes.USD.price;\n\n            for (_i = 0, _Object$entries = Object.entries(state.volumes); _i < _Object$entries.length; _i++) {\n              _Object$entries$_i = Object(slicedToArray["a" /* default */])(_Object$entries[_i], 2), pool = _Object$entries$_i[0], volume = _Object$entries$_i[1];\n\n              if (volume[0] == -1) {\n                _volume = pool == \'ren\' ? stats.volume.ren2 : pool == \'sbtc\' ? stats.volume.rens : stats.volume[pool];\n                if ([\'tbtc\', \'ren\', \'sbtc\'].includes(pool)) _volume *= btcPrice;\n                vue_runtime_esm["a" /* default */].set(state.volumes[pool], 0, _volume || 0);\n                vue_runtime_esm["a" /* default */].set(state.volumes[pool], 1, pool == \'ren\' ? stats.volume.ren2 : pool == \'sbtc\' ? stats.volume.rens : stats.volume[pool]);\n              }\n            }\n\n          case 16:\n          case "end":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getVolumes.apply(this, arguments);\n}\n\nfunction getDailyVolume(_x3) {\n  return _getDailyVolume.apply(this, arguments);\n}\n\nfunction _getDailyVolume() {\n  _getDailyVolume = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(pool) {\n    var refresh,\n        interval,\n        json,\n        _iterator2,\n        _step2,\n        data,\n        _args3 = arguments;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            refresh = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : false;\n            interval = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 30;\n            pool = pool == \'swusd\' ? \'swusd\' : pool == \'susdv2\' ? \'susd\' : pool;\n\n            if (!(state.allVolume[pool].length && !refresh)) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt("return");\n\n          case 5:\n            _context3.next = 7;\n            return fetchVolumeData(pool, refresh, interval);\n\n          case 7:\n            json = state.volumeData[interval][pool];\n            state.volumeData[pool] = json;\n            _iterator2 = Object(createForOfIteratorHelper["a" /* default */])(json);\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                data = _step2.value;\n                state.allVolume[pool].push([data.timestamp * 1000, Object.entries(data.volume).map(function (_ref5) {\n                  var _ref6 = Object(slicedToArray["a" /* default */])(_ref5, 2),\n                      k = _ref6[0],\n                      v = _ref6[1];\n\n                  var precisions = allabis["d" /* default */][pool == \'susd\' ? \'susdv2\' : pool].coin_precisions[k.split(\'-\')[0]];\n                  return v[0] / precisions;\n                }).reduce(function (a, b) {\n                  return a + b;\n                }, 0)]);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n          case 11:\n          case "end":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getDailyVolume.apply(this, arguments);\n}\n\nfunction getLendingAPY(_x4) {\n  return _getLendingAPY.apply(this, arguments);\n}\n\nfunction _getLendingAPY() {\n  _getLendingAPY = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(pool) {\n    var refresh,\n        interval,\n        lendingrates,\n        _loop,\n        j,\n        _args4 = arguments;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            refresh = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : false;\n            interval = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : 30;\n            pool = pool == \'swusd\' ? \'swusd\' : pool == \'susdv2\' ? \'susd\' : pool;\n\n            if (state.volumeData[interval][pool].length) {\n              _context4.next = 6;\n              break;\n            }\n\n            _context4.next = 6;\n            return fetchVolumeData(pool, refresh, interval);\n\n          case 6:\n            lendingrates = [];\n\n            _loop = function _loop(j) {\n              var json = state.volumeData[interval][pool];\n              var data = json[j];\n              var prevdata = json[j - 1];\n              var balances = data.balances.map(function (b, bi) {\n                return b /= allabis["d" /* default */][pool == \'susd\' ? \'susdv2\' : pool].coin_precisions[bi];\n              });\n              var apdrate = data.rates.map(function (rate, k) {\n                return rate / prevdata.rates[k] - 1;\n              });\n              var balancesp = balances.map(function (b, bi) {\n                return b *= apdrate[bi];\n              });\n              var sump = balancesp.reduce(function (a, b) {\n                return a + b;\n              }, 0);\n              var sumbalances = balances.reduce(function (a, b) {\n                return a + b;\n              }, 0);\n              var apd = sump / sumbalances;\n              var daylen = data.timestamp - prevdata.timestamp;\n              var apdy = Math.pow(1 + apd, 365 * 86400 / daylen);\n              lendingrates.push([data.timestamp * 1000, (apdy - 1) * 100]);\n            };\n\n            for (j = 1; j < state.volumeData[interval][pool].length; j++) {\n              _loop(j);\n            }\n\n            return _context4.abrupt("return", lendingrates);\n\n          case 10:\n          case "end":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getLendingAPY.apply(this, arguments);\n}\n\nfunction totalVolume() {\n  return Object.values(state.volumes).reduce(function (a, b) {\n    return a + b[0];\n  }, 0);\n}\n// EXTERNAL MODULE: ./src/utils/helpers.js\nvar helpers = __webpack_require__("2fa3");\n\n// CONCATENATED MODULE: ./src/components/minter/gaugeStore.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar swap_abi = allabis["d" /* default */].susdv2.swap_abi;\n\n\n\nvar gaugeStore_state = vue_runtime_esm["a" /* default */].observable({\n  gaugeController: null,\n  n_gauges: 0,\n  pools: [],\n  mypools: [],\n  votingEscrow: null,\n  minter: null,\n  totalClaimableCRV: null,\n  totalMintedCRV: null,\n  totalBalance: null,\n  totalGaugeBalance: null,\n  APYs: {}\n});\nfunction getState() {\n  return _getState.apply(this, arguments);\n}\n\nfunction _getState() {\n  _getState = Object(asyncToGenerator["a" /* default */])( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var swap_token, calls, aggcalls, decodedGauges, decodedBalances, example_gauge, calls1, aggcalls1, gaugeTypes, gaugeTypesNames, decodedGaugeLP, gaugeBalances, pools, prices, btcPrice, CRVprice, weightCalls, aggCallsWeights, decodedWeights, ratesCalls, aggRates, decodedRate, gaugeRates, workingSupplies, example_pool, virtualPriceCalls, aggVirtualPrices, decodedVirtualPrices, weightData;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            gaugeStore_state.pools = {\n              swusd: {\n                swap: \'0x329239599afB305DA0A2eC69c58F8a6697F9F88d\',\n                swap_token: \'0x77C6E4a580c0dCE4E5c7a17d0bc077188a83A059\',\n                name: \'swusd\'\n              }\n            };\n            gaugeStore_state.gaugeController = new contract["b" /* contract */].web3.eth.Contract(dao_allabis["default"].gaugecontroller_abi, \'0x0C4d90ca69104B4cb937fB21c8533c29554AE32c\');\n            gaugeStore_state.votingEscrow = new contract["b" /* contract */].web3.eth.Contract(dao_allabis["default"].votingescrow_abi, \'0xe5e7DdADD563018b0E692C1524b60b754FBD7f02\');\n            gaugeStore_state.minter = new contract["b" /* contract */].web3.eth.Contract(dao_allabis["default"].minter_abi, \'0x2c988c3974AD7E604E276AE0294a7228DEf67974\');\n            _context.next = 6;\n            return gaugeStore_state.gaugeController.methods.n_gauges().call();\n\n          case 6:\n            gaugeStore_state.n_gauges = +_context.sent;\n            swap_token = new contract["b" /* contract */].web3.eth.Contract(allabis["b" /* ERC20_abi */], gaugeStore_state.pools.swusd.swap_token);\n            calls = Array.from(Array(gaugeStore_state.n_gauges), function (_, i) {\n              return [gaugeStore_state.gaugeController._address, gaugeStore_state.gaugeController.methods.gauges(i).encodeABI()];\n            });\n            calls = calls.concat(Object.values(gaugeStore_state.pools).map(function (v) {\n              return v.swap_token;\n            }).map(function (v) {\n              return [v, swap_token.methods.balanceOf(contract["b" /* contract */].default_account).encodeABI()];\n            }));\n            _context.next = 12;\n            return common["c" /* clean_and_multi_call */](calls);\n\n          case 12:\n            aggcalls = _context.sent;\n            decodedGauges = aggcalls[1].slice(0, gaugeStore_state.n_gauges).map(function (hex) {\n              return web3.eth.abi.decodeParameter(\'address\', hex);\n            });\n            decodedBalances = aggcalls[1].slice(gaugeStore_state.n_gauges).map(function (hex, i) {\n              return {\n                swap_token: calls[gaugeStore_state.n_gauges + i][0],\n                balance: web3.eth.abi.decodeParameter(\'uint256\', hex)\n              };\n            });\n            example_gauge = new contract["b" /* contract */].web3.eth.Contract(dao_allabis["default"].liquiditygauge_abi, decodedGauges[0]);\n            calls1 = decodedGauges.flatMap(function (gauge) {\n              return [[gauge, example_gauge.methods.lp_token().encodeABI()], [gaugeStore_state.gaugeController._address, gaugeStore_state.gaugeController.methods.gauge_types(gauge).encodeABI()], [gauge, example_gauge.methods.balanceOf(contract["b" /* contract */].default_account).encodeABI()], [gauge, example_gauge.methods.claimable_tokens(contract["b" /* contract */].default_account).encodeABI()], [gaugeStore_state.minter._address, gaugeStore_state.minter.methods.minted(contract["b" /* contract */].default_account, gauge).encodeABI()]];\n            });\n            _context.next = 19;\n            return common["c" /* clean_and_multi_call */](calls1);\n\n          case 19:\n            aggcalls1 = _context.sent;\n            gaugeTypes = aggcalls1[1].filter(function (_, i) {\n              return i % 5 == 1;\n            }).map(function (hex) {\n              return +web3.eth.abi.decodeParameter(\'uint256\', hex);\n            });\n            gaugeTypes = Object(toConsumableArray["a" /* default */])(new Set(gaugeTypes));\n            calls = gaugeTypes.map(function (type) {\n              return [gaugeStore_state.gaugeController._address, gaugeStore_state.gaugeController.methods.gauge_type_names(type).encodeABI()];\n            });\n            _context.next = 25;\n            return common["c" /* clean_and_multi_call */](calls);\n\n          case 25:\n            aggcalls = _context.sent;\n            gaugeTypesNames = aggcalls[1].map(function (hex, i) {\n              return {\n                type: gaugeTypes[i],\n                name: web3.eth.abi.decodeParameter(\'string\', hex)\n              };\n            });\n            decodedGaugeLP = aggcalls1[1].filter(function (_, i) {\n              return i % 5 == 0;\n            }).map(function (hex, i) {\n              return {\n                gauge: decodedGauges[i],\n                swap_token: web3.eth.abi.decodeParameter(\'address\', hex),\n                type: web3.eth.abi.decodeParameter(\'uint256\', aggcalls1[1][i * 5 + 1]),\n                typeName: Object.values(gaugeTypesNames).find(function (v) {\n                  return v.type == +web3.eth.abi.decodeParameter(\'uint256\', aggcalls1[1][i * 5 + 1]);\n                }).name,\n                claimable_tokens: web3.eth.abi.decodeParameter(\'uint256\', aggcalls1[1][i * 5 + 3]),\n                minted: web3.eth.abi.decodeParameter(\'uint256\', aggcalls1[1][i * 5 + 4])\n              };\n            });\n            Object.values(decodedGaugeLP).forEach(function (gauge, i) {\n              var poolgauge = Object.values(gaugeStore_state.pools).find(function (pool) {\n                return pool.swap_token.toLowerCase() == gauge.swap_token.toLowerCase();\n              });\n              poolgauge.gauge = gauge.gauge;\n              poolgauge.type = gauge.type;\n              poolgauge.typeName = gauge.typeName;\n              poolgauge.claimable_tokens = gauge.claimable_tokens;\n              poolgauge.minted = gauge.minted;\n            });\n            gaugeBalances = aggcalls1[1].filter(function (_, i) {\n              return i % 5 == 2;\n            }).map(function (hex, i) {\n              return {\n                gauge: calls1[i * 5 + 2][0],\n                balance: web3.eth.abi.decodeParameter(\'uint256\', hex)\n              };\n            });\n            gaugeStore_state.mypools = decodedBalances.map(function (v) {\n              var poolInfo = Object.values(gaugeStore_state.pools).find(function (pool) {\n                return pool.swap_token.toLowerCase() == v.swap_token.toLowerCase();\n              });\n              return Object(objectSpread2["a" /* default */])(Object(objectSpread2["a" /* default */])({}, poolInfo), {}, {\n                balance: v.balance,\n                origBalance: v.balance,\n                gaugeBalance: gaugeBalances.find(function (pool) {\n                  return pool.gauge.toLowerCase() == poolInfo.gauge.toLowerCase();\n                }).balance\n              });\n            });\n            pools = [\'swusd\'];\n            _context.next = 34;\n            return fetch(\'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,curve-dao-token&vs_currencies=usd\');\n\n          case 34:\n            prices = _context.sent;\n            _context.next = 37;\n            return prices.json();\n\n          case 37:\n            prices = _context.sent;\n            btcPrice = prices.bitcoin.usd;\n            CRVprice = prices[\'curve-dao-token\'].usd;\n            weightCalls = decodedGauges.map(function (gauge) {\n              return [gaugeStore_state.gaugeController._address, gaugeStore_state.gaugeController.methods.gauge_relative_weight(gauge).encodeABI()];\n            });\n            _context.next = 43;\n            return common["c" /* clean_and_multi_call */](weightCalls);\n\n          case 43:\n            aggCallsWeights = _context.sent;\n            decodedWeights = aggCallsWeights[1].map(function (hex, i) {\n              return [weightCalls[i][0], web3.eth.abi.decodeParameter(\'uint256\', hex) / 1e18];\n            });\n            ratesCalls = decodedGauges.map(function (gauge) {\n              return [[gauge, example_gauge.methods.inflation_rate().encodeABI()], [gauge, example_gauge.methods.working_supply().encodeABI()]];\n            });\n            _context.next = 48;\n            return common["c" /* clean_and_multi_call */](ratesCalls.flat());\n\n          case 48:\n            aggRates = _context.sent;\n            decodedRate = aggRates[1].map(function (hex) {\n              return web3.eth.abi.decodeParameter(\'uint256\', hex);\n            });\n            gaugeRates = decodedRate.filter(function (_, i) {\n              return i % 2 == 0;\n            }).map(function (v) {\n              return v / 1e18;\n            });\n            workingSupplies = decodedRate.filter(function (_, i) {\n              return i % 2 == 1;\n            }).map(function (v) {\n              return v / 1e18;\n            });\n            example_pool = new web3.eth.Contract(swap_abi, \'0x329239599afB305DA0A2eC69c58F8a6697F9F88d\');\n            virtualPriceCalls = Object.values(gaugeStore_state.pools).map(function (v) {\n              return [v.swap, example_pool.methods.get_virtual_price().encodeABI()];\n            });\n            _context.next = 56;\n            return common["c" /* clean_and_multi_call */](virtualPriceCalls);\n\n          case 56:\n            aggVirtualPrices = _context.sent;\n            decodedVirtualPrices = aggVirtualPrices[1].map(function (hex, i) {\n              return [virtualPriceCalls[i][0], web3.eth.abi.decodeParameter(\'uint256\', hex) / 1e18];\n            });\n            weightData = decodedWeights.map(function (w, i) {\n              var pool = gaugeStore_state.mypools.find(function (v) {\n                return v.gauge.toLowerCase() == \'0x\' + weightCalls[i][1].slice(34).toLowerCase();\n              }).name;\n              var swap_address = gaugeStore_state.pools[pool].swap;\n              var virtual_price = decodedVirtualPrices.find(function (v) {\n                return v[0].toLowerCase() == swap_address.toLowerCase();\n              })[1];\n              var _working_supply = workingSupplies[i];\n              if ([\'ren\', \'sbtc\'].includes(pool)) _working_supply *= btcPrice;\n              var rate = gaugeRates[i] * w[1] * 31536000 / _working_supply * 0.4 / virtual_price;\n              var apy = rate * CRVprice * 100;\n              if (isNaN(apy)) apy = 0;\n              gaugeStore_state.mypools.find(function (v) {\n                return v.name == pool;\n              }).gauge_relative_weight = w[1];\n              vue_runtime_esm["a" /* default */].set(gaugeStore_state.APYs, pool, apy);\n            });\n            gaugeStore_state.totalBalance = gaugeStore_state.mypools.reduce(function (a, b) {\n              return +a + +b.balance;\n            }, 0);\n            gaugeStore_state.totalGaugeBalance = gaugeStore_state.mypools.reduce(function (a, b) {\n              return +a + +b.gaugeBalance;\n            }, 0);\n\n          case 61:\n          case "end":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getState.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///770d\n')},a2bf:function(module,exports,__webpack_require__){"use strict";eval('\nvar isArray = __webpack_require__("e8b5");\nvar toLength = __webpack_require__("50c4");\nvar bind = __webpack_require__("0366");\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError(\'Exceed the acceptable array length\');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZmxhdHRlbi1pbnRvLWFycmF5LmpzP2EyYmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixjQUFjLG1CQUFPLENBQUMsTUFBdUI7QUFDN0MsZUFBZSxtQkFBTyxDQUFDLE1BQXdCO0FBQy9DLFdBQVcsbUJBQU8sQ0FBQyxNQUFvQzs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiJhMmJmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtYXJyYXknKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1sZW5ndGgnKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dCcpO1xuXG4vLyBgRmxhdHRlbkludG9BcnJheWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLWZsYXRNYXAvI3NlYy1GbGF0dGVuSW50b0FycmF5XG52YXIgZmxhdHRlbkludG9BcnJheSA9IGZ1bmN0aW9uICh0YXJnZXQsIG9yaWdpbmFsLCBzb3VyY2UsIHNvdXJjZUxlbiwgc3RhcnQsIGRlcHRoLCBtYXBwZXIsIHRoaXNBcmcpIHtcbiAgdmFyIHRhcmdldEluZGV4ID0gc3RhcnQ7XG4gIHZhciBzb3VyY2VJbmRleCA9IDA7XG4gIHZhciBtYXBGbiA9IG1hcHBlciA/IGJpbmQobWFwcGVyLCB0aGlzQXJnLCAzKSA6IGZhbHNlO1xuICB2YXIgZWxlbWVudDtcblxuICB3aGlsZSAoc291cmNlSW5kZXggPCBzb3VyY2VMZW4pIHtcbiAgICBpZiAoc291cmNlSW5kZXggaW4gc291cmNlKSB7XG4gICAgICBlbGVtZW50ID0gbWFwRm4gPyBtYXBGbihzb3VyY2Vbc291cmNlSW5kZXhdLCBzb3VyY2VJbmRleCwgb3JpZ2luYWwpIDogc291cmNlW3NvdXJjZUluZGV4XTtcblxuICAgICAgaWYgKGRlcHRoID4gMCAmJiBpc0FycmF5KGVsZW1lbnQpKSB7XG4gICAgICAgIHRhcmdldEluZGV4ID0gZmxhdHRlbkludG9BcnJheSh0YXJnZXQsIG9yaWdpbmFsLCBlbGVtZW50LCB0b0xlbmd0aChlbGVtZW50Lmxlbmd0aCksIHRhcmdldEluZGV4LCBkZXB0aCAtIDEpIC0gMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICh0YXJnZXRJbmRleCA+PSAweDFGRkZGRkZGRkZGRkZGKSB0aHJvdyBUeXBlRXJyb3IoJ0V4Y2VlZCB0aGUgYWNjZXB0YWJsZSBhcnJheSBsZW5ndGgnKTtcbiAgICAgICAgdGFyZ2V0W3RhcmdldEluZGV4XSA9IGVsZW1lbnQ7XG4gICAgICB9XG5cbiAgICAgIHRhcmdldEluZGV4Kys7XG4gICAgfVxuICAgIHNvdXJjZUluZGV4Kys7XG4gIH1cbiAgcmV0dXJuIHRhcmdldEluZGV4O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmbGF0dGVuSW50b0FycmF5O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///a2bf\n')},a9e3:function(module,exports,__webpack_require__){"use strict";eval('\nvar DESCRIPTORS = __webpack_require__("83ab");\nvar global = __webpack_require__("da84");\nvar isForced = __webpack_require__("94ca");\nvar redefine = __webpack_require__("6eeb");\nvar has = __webpack_require__("5135");\nvar classof = __webpack_require__("c6b6");\nvar inheritIfRequired = __webpack_require__("7156");\nvar toPrimitive = __webpack_require__("c04e");\nvar fails = __webpack_require__("d039");\nvar create = __webpack_require__("7c73");\nvar getOwnPropertyNames = __webpack_require__("241c").f;\nvar getOwnPropertyDescriptor = __webpack_require__("06cf").f;\nvar defineProperty = __webpack_require__("9bf2").f;\nvar trim = __webpack_require__("58a8").trim;\n\nvar NUMBER = \'Number\';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.github.io/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == \'string\' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number(\'+0x1\') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.github.io/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(\' 0o1\') || !NativeNumber(\'0b1\') || NativeNumber(\'+0x1\'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    \'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,\' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    \'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,\' +\n    \'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger\'\n  ).split(\',\'), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcz9hOWUzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLG1CQUFPLENBQUMsTUFBMEI7QUFDcEQsYUFBYSxtQkFBTyxDQUFDLE1BQXFCO0FBQzFDLGVBQWUsbUJBQU8sQ0FBQyxNQUF3QjtBQUMvQyxlQUFlLG1CQUFPLENBQUMsTUFBdUI7QUFDOUMsVUFBVSxtQkFBTyxDQUFDLE1BQWtCO0FBQ3BDLGNBQWMsbUJBQU8sQ0FBQyxNQUEwQjtBQUNoRCx3QkFBd0IsbUJBQU8sQ0FBQyxNQUFrQztBQUNsRSxrQkFBa0IsbUJBQU8sQ0FBQyxNQUEyQjtBQUNyRCxZQUFZLG1CQUFPLENBQUMsTUFBb0I7QUFDeEMsYUFBYSxtQkFBTyxDQUFDLE1BQTRCO0FBQ2pELDBCQUEwQixtQkFBTyxDQUFDLE1BQTRDO0FBQzlFLCtCQUErQixtQkFBTyxDQUFDLE1BQWlEO0FBQ3hGLHFCQUFxQixtQkFBTyxDQUFDLE1BQXFDO0FBQ2xFLFdBQVcsbUJBQU8sQ0FBQyxNQUEwQjs7QUFFN0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0Q7QUFDcEQsS0FBSztBQUNMO0FBQ0Esb0NBQW9DLGNBQWMsT0FBTztBQUN6RCxxQ0FBcUMsY0FBYyxPQUFPO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGdCQUFnQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLHFDQUFxQyxFQUFFO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsaUJBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiYTllMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBpc0ZvcmNlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1mb3JjZWQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWRlZmluZScpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMnKTtcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3Jyk7XG52YXIgaW5oZXJpdElmUmVxdWlyZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXByaW1pdGl2ZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1jcmVhdGUnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzJykuZjtcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpLmY7XG52YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpLmY7XG52YXIgdHJpbSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zdHJpbmctdHJpbScpLnRyaW07XG5cbnZhciBOVU1CRVIgPSAnTnVtYmVyJztcbnZhciBOYXRpdmVOdW1iZXIgPSBnbG9iYWxbTlVNQkVSXTtcbnZhciBOdW1iZXJQcm90b3R5cGUgPSBOYXRpdmVOdW1iZXIucHJvdG90eXBlO1xuXG4vLyBPcGVyYSB+MTIgaGFzIGJyb2tlbiBPYmplY3QjdG9TdHJpbmdcbnZhciBCUk9LRU5fQ0xBU1NPRiA9IGNsYXNzb2YoY3JlYXRlKE51bWJlclByb3RvdHlwZSkpID09IE5VTUJFUjtcblxuLy8gYFRvTnVtYmVyYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXRvbnVtYmVyXG52YXIgdG9OdW1iZXIgPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgdmFyIGl0ID0gdG9QcmltaXRpdmUoYXJndW1lbnQsIGZhbHNlKTtcbiAgdmFyIGZpcnN0LCB0aGlyZCwgcmFkaXgsIG1heENvZGUsIGRpZ2l0cywgbGVuZ3RoLCBpbmRleCwgY29kZTtcbiAgaWYgKHR5cGVvZiBpdCA9PSAnc3RyaW5nJyAmJiBpdC5sZW5ndGggPiAyKSB7XG4gICAgaXQgPSB0cmltKGl0KTtcbiAgICBmaXJzdCA9IGl0LmNoYXJDb2RlQXQoMCk7XG4gICAgaWYgKGZpcnN0ID09PSA0MyB8fCBmaXJzdCA9PT0gNDUpIHtcbiAgICAgIHRoaXJkID0gaXQuY2hhckNvZGVBdCgyKTtcbiAgICAgIGlmICh0aGlyZCA9PT0gODggfHwgdGhpcmQgPT09IDEyMCkgcmV0dXJuIE5hTjsgLy8gTnVtYmVyKCcrMHgxJykgc2hvdWxkIGJlIE5hTiwgb2xkIFY4IGZpeFxuICAgIH0gZWxzZSBpZiAoZmlyc3QgPT09IDQ4KSB7XG4gICAgICBzd2l0Y2ggKGl0LmNoYXJDb2RlQXQoMSkpIHtcbiAgICAgICAgY2FzZSA2NjogY2FzZSA5ODogcmFkaXggPSAyOyBtYXhDb2RlID0gNDk7IGJyZWFrOyAvLyBmYXN0IGVxdWFsIG9mIC9eMGJbMDFdKyQvaVxuICAgICAgICBjYXNlIDc5OiBjYXNlIDExMTogcmFkaXggPSA4OyBtYXhDb2RlID0gNTU7IGJyZWFrOyAvLyBmYXN0IGVxdWFsIG9mIC9eMG9bMC03XSskL2lcbiAgICAgICAgZGVmYXVsdDogcmV0dXJuICtpdDtcbiAgICAgIH1cbiAgICAgIGRpZ2l0cyA9IGl0LnNsaWNlKDIpO1xuICAgICAgbGVuZ3RoID0gZGlnaXRzLmxlbmd0aDtcbiAgICAgIGZvciAoaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICBjb2RlID0gZGlnaXRzLmNoYXJDb2RlQXQoaW5kZXgpO1xuICAgICAgICAvLyBwYXJzZUludCBwYXJzZXMgYSBzdHJpbmcgdG8gYSBmaXJzdCB1bmF2YWlsYWJsZSBzeW1ib2xcbiAgICAgICAgLy8gYnV0IFRvTnVtYmVyIHNob3VsZCByZXR1cm4gTmFOIGlmIGEgc3RyaW5nIGNvbnRhaW5zIHVuYXZhaWxhYmxlIHN5bWJvbHNcbiAgICAgICAgaWYgKGNvZGUgPCA0OCB8fCBjb2RlID4gbWF4Q29kZSkgcmV0dXJuIE5hTjtcbiAgICAgIH0gcmV0dXJuIHBhcnNlSW50KGRpZ2l0cywgcmFkaXgpO1xuICAgIH1cbiAgfSByZXR1cm4gK2l0O1xufTtcblxuLy8gYE51bWJlcmAgY29uc3RydWN0b3Jcbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLW51bWJlci1jb25zdHJ1Y3RvclxuaWYgKGlzRm9yY2VkKE5VTUJFUiwgIU5hdGl2ZU51bWJlcignIDBvMScpIHx8ICFOYXRpdmVOdW1iZXIoJzBiMScpIHx8IE5hdGl2ZU51bWJlcignKzB4MScpKSkge1xuICB2YXIgTnVtYmVyV3JhcHBlciA9IGZ1bmN0aW9uIE51bWJlcih2YWx1ZSkge1xuICAgIHZhciBpdCA9IGFyZ3VtZW50cy5sZW5ndGggPCAxID8gMCA6IHZhbHVlO1xuICAgIHZhciBkdW1teSA9IHRoaXM7XG4gICAgcmV0dXJuIGR1bW15IGluc3RhbmNlb2YgTnVtYmVyV3JhcHBlclxuICAgICAgLy8gY2hlY2sgb24gMS4uY29uc3RydWN0b3IoZm9vKSBjYXNlXG4gICAgICAmJiAoQlJPS0VOX0NMQVNTT0YgPyBmYWlscyhmdW5jdGlvbiAoKSB7IE51bWJlclByb3RvdHlwZS52YWx1ZU9mLmNhbGwoZHVtbXkpOyB9KSA6IGNsYXNzb2YoZHVtbXkpICE9IE5VTUJFUilcbiAgICAgICAgPyBpbmhlcml0SWZSZXF1aXJlZChuZXcgTmF0aXZlTnVtYmVyKHRvTnVtYmVyKGl0KSksIGR1bW15LCBOdW1iZXJXcmFwcGVyKSA6IHRvTnVtYmVyKGl0KTtcbiAgfTtcbiAgZm9yICh2YXIga2V5cyA9IERFU0NSSVBUT1JTID8gZ2V0T3duUHJvcGVydHlOYW1lcyhOYXRpdmVOdW1iZXIpIDogKFxuICAgIC8vIEVTMzpcbiAgICAnTUFYX1ZBTFVFLE1JTl9WQUxVRSxOYU4sTkVHQVRJVkVfSU5GSU5JVFksUE9TSVRJVkVfSU5GSU5JVFksJyArXG4gICAgLy8gRVMyMDE1IChpbiBjYXNlLCBpZiBtb2R1bGVzIHdpdGggRVMyMDE1IE51bWJlciBzdGF0aWNzIHJlcXVpcmVkIGJlZm9yZSk6XG4gICAgJ0VQU0lMT04saXNGaW5pdGUsaXNJbnRlZ2VyLGlzTmFOLGlzU2FmZUludGVnZXIsTUFYX1NBRkVfSU5URUdFUiwnICtcbiAgICAnTUlOX1NBRkVfSU5URUdFUixwYXJzZUZsb2F0LHBhcnNlSW50LGlzSW50ZWdlcidcbiAgKS5zcGxpdCgnLCcpLCBqID0gMCwga2V5OyBrZXlzLmxlbmd0aCA+IGo7IGorKykge1xuICAgIGlmIChoYXMoTmF0aXZlTnVtYmVyLCBrZXkgPSBrZXlzW2pdKSAmJiAhaGFzKE51bWJlcldyYXBwZXIsIGtleSkpIHtcbiAgICAgIGRlZmluZVByb3BlcnR5KE51bWJlcldyYXBwZXIsIGtleSwgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE5hdGl2ZU51bWJlciwga2V5KSk7XG4gICAgfVxuICB9XG4gIE51bWJlcldyYXBwZXIucHJvdG90eXBlID0gTnVtYmVyUHJvdG90eXBlO1xuICBOdW1iZXJQcm90b3R5cGUuY29uc3RydWN0b3IgPSBOdW1iZXJXcmFwcGVyO1xuICByZWRlZmluZShnbG9iYWwsIE5VTUJFUiwgTnVtYmVyV3JhcHBlcik7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///a9e3\n')},ad61:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9taW50ZXIvR2F1Z2UudnVlP2VjMGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiYWQ2MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///ad61\n")},c44e:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Gauge_vue_vue_type_style_index_0_id_1bc60686_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("ad61");\n/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Gauge_vue_vue_type_style_index_0_id_1bc60686_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Gauge_vue_vue_type_style_index_0_id_1bc60686_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* unused harmony reexport * */\n /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Gauge_vue_vue_type_style_index_0_id_1bc60686_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9taW50ZXIvR2F1Z2UudnVlPzczMjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQXNlLENBQWdCLGtnQkFBRyxFQUFDIiwiZmlsZSI6ImM0NGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcz8/cmVmLS02LW9uZU9mLTEtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS02LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0dhdWdlLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTFiYzYwNjg2JnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9taW5pLWNzcy1leHRyYWN0LXBsdWdpbi9kaXN0L2xvYWRlci5qcz8/cmVmLS02LW9uZU9mLTEtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS02LW9uZU9mLTEtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy9zdHlsZVBvc3RMb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY2FjaGUtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTAtMCEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0dhdWdlLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTFiYzYwNjg2JnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///c44e\n')},d798:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Gauges_vue_vue_type_style_index_0_id_74c927c0_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("027e");\n/* harmony import */ var _node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Gauges_vue_vue_type_style_index_0_id_74c927c0_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Gauges_vue_vue_type_style_index_0_id_74c927c0_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* unused harmony reexport * */\n /* unused harmony default export */ var _unused_webpack_default_export = (_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Gauges_vue_vue_type_style_index_0_id_74c927c0_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9taW50ZXIvR2F1Z2VzLnZ1ZT9kYTE5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUF1ZSxDQUFnQixtZ0JBQUcsRUFBQyIsImZpbGUiOiJkNzk4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4vZGlzdC9sb2FkZXIuanM/P3JlZi0tNi1vbmVPZi0xLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNi1vbmVPZi0xLTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NhY2hlLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS0wLTAhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9HYXVnZXMudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NzRjOTI3YzAmc2NvcGVkPXRydWUmbGFuZz1jc3MmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzPz9yZWYtLTYtb25lT2YtMS0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTYtb25lT2YtMS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jYWNoZS1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tMC0wIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vR2F1Z2VzLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTc0YzkyN2MwJnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///d798\n')}}]);