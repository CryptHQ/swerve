(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-10e7db40"],{"69d5":function(module,exports,__webpack_require__){"use strict";eval("// Copyright 2014 Google Inc. All rights reserved\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file or at\n// https://developers.google.com/open-source/licenses/bsd\n\n/**\n * @fileoverview The U2F api.\n */\n\n\n\n/** Namespace for the U2F api.\n * @type {Object}\n */\nvar u2f = u2f || {};\n\nmodule.exports = u2f; // Adaptation for u2f-api package\n\n/**\n * The U2F extension id\n * @type {string}\n * @const\n */\nu2f.EXTENSION_ID = 'kmendfapggjehodndflmmgagdbamhnfd';\n\n/**\n * Message types for messsages to/from the extension\n * @const\n * @enum {string}\n */\nu2f.MessageTypes = {\n  'U2F_REGISTER_REQUEST': 'u2f_register_request',\n  'U2F_SIGN_REQUEST': 'u2f_sign_request',\n  'U2F_REGISTER_RESPONSE': 'u2f_register_response',\n  'U2F_SIGN_RESPONSE': 'u2f_sign_response'\n};\n\n/**\n * Response status codes\n * @const\n * @enum {number}\n */\nu2f.ErrorCodes = {\n  'OK': 0,\n  'OTHER_ERROR': 1,\n  'BAD_REQUEST': 2,\n  'CONFIGURATION_UNSUPPORTED': 3,\n  'DEVICE_INELIGIBLE': 4,\n  'TIMEOUT': 5\n};\n\n/**\n * A message type for registration requests\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   signRequests: Array.<u2f.SignRequest>,\n *   registerRequests: ?Array.<u2f.RegisterRequest>,\n *   timeoutSeconds: ?number,\n *   requestId: ?number\n * }}\n */\nu2f.Request;\n\n/**\n * A message for registration responses\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   responseData: (u2f.Error | u2f.RegisterResponse | u2f.SignResponse),\n *   requestId: ?number\n * }}\n */\nu2f.Response;\n\n/**\n * An error object for responses\n * @typedef {{\n *   errorCode: u2f.ErrorCodes,\n *   errorMessage: ?string\n * }}\n */\nu2f.Error;\n\n/**\n * Data object for a single sign request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   keyHandle: string,\n *   appId: string\n * }}\n */\nu2f.SignRequest;\n\n/**\n * Data object for a sign response.\n * @typedef {{\n *   keyHandle: string,\n *   signatureData: string,\n *   clientData: string\n * }}\n */\nu2f.SignResponse;\n\n/**\n * Data object for a registration request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   appId: string\n * }}\n */\nu2f.RegisterRequest;\n\n/**\n * Data object for a registration response.\n * @typedef {{\n *   registrationData: string,\n *   clientData: string\n * }}\n */\nu2f.RegisterResponse;\n\n\n// Low level MessagePort API support\n\n/**\n * Call MessagePort disconnect\n */\nu2f.disconnect = function() {\n  if (u2f.port_ && u2f.port_.port_) {\n    u2f.port_.port_.disconnect();\n    u2f.port_ = null;\n  }\n};\n\n/**\n * Sets up a MessagePort to the U2F extension using the\n * available mechanisms.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n */\nu2f.getMessagePort = function(callback) {\n  if (typeof chrome != 'undefined' && chrome.runtime) {\n    // The actual message here does not matter, but we need to get a reply\n    // for the callback to run. Thus, send an empty signature request\n    // in order to get a failure response.\n    var msg = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: []\n    };\n    chrome.runtime.sendMessage(u2f.EXTENSION_ID, msg, function() {\n      if (!chrome.runtime.lastError) {\n        // We are on a whitelisted origin and can talk directly\n        // with the extension.\n        u2f.getChromeRuntimePort_(callback);\n      } else {\n        // chrome.runtime was available, but we couldn't message\n        // the extension directly, use iframe\n        u2f.getIframePort_(callback);\n      }\n    });\n  } else {\n    // chrome.runtime was not available at all, which is normal\n    // when this origin doesn't have access to any extensions.\n    u2f.getIframePort_(callback);\n  }\n};\n\n/**\n * Connects directly to the extension via chrome.runtime.connect\n * @param {function(u2f.WrappedChromeRuntimePort_)} callback\n * @private\n */\nu2f.getChromeRuntimePort_ = function(callback) {\n  var port = chrome.runtime.connect(u2f.EXTENSION_ID,\n    {'includeTlsChannelId': true});\n  setTimeout(function() {\n    callback(null, new u2f.WrappedChromeRuntimePort_(port));\n  }, 0);\n};\n\n/**\n * A wrapper for chrome.runtime.Port that is compatible with MessagePort.\n * @param {Port} port\n * @constructor\n * @private\n */\nu2f.WrappedChromeRuntimePort_ = function(port) {\n  this.port_ = port;\n};\n\n/**\n * Posts a message on the underlying channel.\n * @param {Object} message\n */\nu2f.WrappedChromeRuntimePort_.prototype.postMessage = function(message) {\n  this.port_.postMessage(message);\n};\n\n/**\n * Emulates the HTML 5 addEventListener interface. Works only for the\n * onmessage event, which is hooked up to the chrome.runtime.Port.onMessage.\n * @param {string} eventName\n * @param {function({data: Object})} handler\n */\nu2f.WrappedChromeRuntimePort_.prototype.addEventListener =\n    function(eventName, handler) {\n  var name = eventName.toLowerCase();\n  if (name == 'message' || name == 'onmessage') {\n    this.port_.onMessage.addListener(function(message) {\n      // Emulate a minimal MessageEvent object\n      handler({'data': message});\n    });\n  } else {\n    console.error('WrappedChromeRuntimePort only supports onMessage');\n  }\n};\n\n/**\n * Sets up an embedded trampoline iframe, sourced from the extension.\n * @param {function(MessagePort)} callback\n * @private\n */\nu2f.getIframePort_ = function(callback) {\n  // Create the iframe\n  var iframeOrigin = 'chrome-extension://' + u2f.EXTENSION_ID;\n  var iframe = document.createElement('iframe');\n  iframe.src = iframeOrigin + '/u2f-comms.html';\n  iframe.setAttribute('style', 'display:none');\n  document.body.appendChild(iframe);\n\n  var hasCalledBack = false;\n\n  var channel = new MessageChannel();\n  var ready = function(message) {\n    if (message.data == 'ready') {\n      channel.port1.removeEventListener('message', ready);\n      if (!hasCalledBack)\n      {\n        hasCalledBack = true;\n        callback(null, channel.port1);\n      }\n    } else {\n      console.error('First event on iframe port was not \"ready\"');\n    }\n  };\n  channel.port1.addEventListener('message', ready);\n  channel.port1.start();\n\n  iframe.addEventListener('load', function() {\n    // Deliver the port to the iframe and initialize\n    iframe.contentWindow.postMessage('init', iframeOrigin, [channel.port2]);\n  });\n\n  // Give this 200ms to initialize, after that, we treat this method as failed\n  setTimeout(function() {\n    if (!hasCalledBack)\n    {\n      hasCalledBack = true;\n      callback(new Error(\"IFrame extension not supported\"));\n    }\n  }, 200);\n};\n\n\n// High-level JS API\n\n/**\n * Default extension response timeout in seconds.\n * @const\n */\nu2f.EXTENSION_TIMEOUT_SEC = 30;\n\n/**\n * A singleton instance for a MessagePort to the extension.\n * @type {MessagePort|u2f.WrappedChromeRuntimePort_}\n * @private\n */\nu2f.port_ = null;\n\n/**\n * Callbacks waiting for a port\n * @type {Array.<function((MessagePort|u2f.WrappedChromeRuntimePort_))>}\n * @private\n */\nu2f.waitingForPort_ = [];\n\n/**\n * A counter for requestIds.\n * @type {number}\n * @private\n */\nu2f.reqCounter_ = 0;\n\n/**\n * A map from requestIds to client callbacks\n * @type {Object.<number,(function((u2f.Error|u2f.RegisterResponse))\n *                       |function((u2f.Error|u2f.SignResponse)))>}\n * @private\n */\nu2f.callbackMap_ = {};\n\n/**\n * Creates or retrieves the MessagePort singleton to use.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n * @private\n */\nu2f.getPortSingleton_ = function(callback) {\n  if (u2f.port_) {\n    callback(null, u2f.port_);\n  } else {\n    if (u2f.waitingForPort_.length == 0) {\n      u2f.getMessagePort(function(err, port) {\n        if (!err) {\n          u2f.port_ = port;\n          u2f.port_.addEventListener('message',\n            /** @type {function(Event)} */ (u2f.responseHandler_));\n        }\n\n        // Careful, here be async callbacks. Maybe.\n        while (u2f.waitingForPort_.length)\n          u2f.waitingForPort_.shift()(err, port);\n      });\n    }\n    u2f.waitingForPort_.push(callback);\n  }\n};\n\n/**\n * Handles response messages from the extension.\n * @param {MessageEvent.<u2f.Response>} message\n * @private\n */\nu2f.responseHandler_ = function(message) {\n  var response = message.data;\n  var reqId = response['requestId'];\n  if (!reqId || !u2f.callbackMap_[reqId]) {\n    console.error('Unknown or missing requestId in response.');\n    return;\n  }\n  var cb = u2f.callbackMap_[reqId];\n  delete u2f.callbackMap_[reqId];\n  cb(null, response['responseData']);\n};\n\n/**\n * Calls the callback with true or false as first and only argument\n * @param {Function} callback\n */\nu2f.isSupported = function(callback) {\n  u2f.getPortSingleton_(function(err, port) {\n    callback(!err);\n  });\n}\n\n/**\n * Dispatches an array of sign requests to available U2F tokens.\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.SignResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.sign = function(signRequests, callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: signRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n\n/**\n * Dispatches register requests to available U2F tokens. An array of sign\n * requests identifies already registered tokens.\n * @param {Array.<u2f.RegisterRequest>} registerRequests\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.RegisterResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.register = function(registerRequests, signRequests,\n    callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_REGISTER_REQUEST,\n      signRequests: signRequests,\n      registerRequests: registerRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///69d5\n")},7799:function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {\n\nmodule.exports = API;\n\nvar chromeApi = __webpack_require__( "69d5" );\n\n// Feature detection (yes really)\nvar isBrowser = ( typeof navigator !== \'undefined\' ) && !!navigator.userAgent;\nvar isSafari = isBrowser && navigator.userAgent.match( /Safari\\// )\n\t&& !navigator.userAgent.match( /Chrome\\// );\nvar isEDGE = isBrowser && navigator.userAgent.match( /Edge\\/1[2345]/ );\n\nvar _backend = null;\nfunction getBackend( Promise )\n{\n\tif ( !_backend )\n\t\t_backend = new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction notSupported( )\n\t\t\t{\n\t\t\t\t// Note; {native: true} means *not* using Google\'s hack\n\t\t\t\tresolve( { u2f: null, native: true } );\n\t\t\t}\n\n\t\t\tif ( !isBrowser )\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( isSafari )\n\t\t\t\t// Safari doesn\'t support U2F, and the Safari-FIDO-U2F\n\t\t\t\t// extension lacks full support (Multi-facet apps), so we\n\t\t\t\t// block it until proper support.\n\t\t\t\treturn notSupported( );\n\n\t\t\tvar hasNativeSupport =\n\t\t\t\t( typeof window.u2f !== \'undefined\' ) &&\n\t\t\t\t( typeof window.u2f.sign === \'function\' );\n\n\t\t\tif ( hasNativeSupport )\n\t\t\t\tresolve( { u2f: window.u2f, native: true } );\n\n\t\t\tif ( isEDGE )\n\t\t\t\t// We don\'t want to check for Google\'s extension hack on EDGE\n\t\t\t\t// as it\'ll cause trouble (popups, etc)\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( location.protocol === \'http:\' )\n\t\t\t\t// U2F isn\'t supported over http, only https\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( typeof MessageChannel === \'undefined\' )\n\t\t\t\t// Unsupported browser, the chrome hack would throw\n\t\t\t\treturn notSupported( );\n\n\t\t\t// Test for google extension support\n\t\t\tchromeApi.isSupported( function( ok )\n\t\t\t{\n\t\t\t\tif ( ok )\n\t\t\t\t\tresolve( { u2f: chromeApi, native: false } );\n\t\t\t\telse\n\t\t\t\t\tnotSupported( );\n\t\t\t} );\n\t\t} );\n\n\treturn _backend;\n}\n\nfunction API( Promise )\n{\n\treturn {\n\t\tisSupported   : isSupported.bind( Promise ),\n\t\tensureSupport : ensureSupport.bind( Promise ),\n\t\tregister      : register.bind( Promise ),\n\t\tsign          : sign.bind( Promise ),\n\t\tErrorCodes    : API.ErrorCodes,\n\t\tErrorNames    : API.ErrorNames\n\t};\n}\n\nAPI.ErrorCodes = {\n\tCANCELLED: -1,\n\tOK: 0,\n\tOTHER_ERROR: 1,\n\tBAD_REQUEST: 2,\n\tCONFIGURATION_UNSUPPORTED: 3,\n\tDEVICE_INELIGIBLE: 4,\n\tTIMEOUT: 5\n};\nAPI.ErrorNames = {\n\t"-1": "CANCELLED",\n\t"0": "OK",\n\t"1": "OTHER_ERROR",\n\t"2": "BAD_REQUEST",\n\t"3": "CONFIGURATION_UNSUPPORTED",\n\t"4": "DEVICE_INELIGIBLE",\n\t"5": "TIMEOUT"\n};\n\nfunction makeError( msg, err )\n{\n\tvar code = err != null ? err.errorCode : 1; // Default to OTHER_ERROR\n\tvar type = API.ErrorNames[ \'\' + code ];\n\tvar error = new Error( msg );\n\terror.metaData = {\n\t\ttype: type,\n\t\tcode: code\n\t}\n\treturn error;\n}\n\nfunction deferPromise( Promise, promise )\n{\n\tvar ret = { };\n\tret.promise = new Promise( function( resolve, reject ) {\n\t\tret.resolve = resolve;\n\t\tret.reject = reject;\n\t\tpromise.then( resolve, reject );\n\t} );\n\t/**\n\t * Reject request promise and disconnect port if \'disconnect\' flag is true\n\t * @param {string} msg\n\t * @param {boolean} disconnect\n\t */\n\tret.promise.cancel = function( msg, disconnect )\n\t{\n\t\tgetBackend( Promise )\n\t\t.then( function( backend )\n\t\t{\n\t\t\tif ( disconnect && !backend.native )\n\t\t\t\tbackend.u2f.disconnect( );\n\n\t\t\tret.reject( makeError( msg, { errorCode: -1 } ) );\n\t\t} );\n\t};\n\treturn ret;\n}\n\nfunction defer( Promise, fun )\n{\n\treturn deferPromise( Promise, new Promise( function( resolve, reject )\n\t{\n\t\ttry\n\t\t{\n\t\t\tfun && fun( resolve, reject );\n\t\t}\n\t\tcatch ( err )\n\t\t{\n\t\t\treject( err );\n\t\t}\n\t} ) );\n}\n\nfunction isSupported( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\treturn !!backend.u2f;\n\t} );\n}\n\nfunction _ensureSupport( backend )\n{\n\tif ( !backend.u2f )\n\t{\n\t\tif ( location.protocol === \'http:\' )\n\t\t\tthrow new Error( "U2F isn\'t supported over http, only https" );\n\t\tthrow new Error( "U2F not supported" );\n\t}\n}\n\nfunction ensureSupport( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( _ensureSupport );\n}\n\nfunction register( registerRequests, signRequests /* = null */, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( registerRequests ) )\n\t\tregisterRequests = [ registerRequests ];\n\n\tif ( typeof signRequests === \'number\' && typeof timeout === \'undefined\' )\n\t{\n\t\ttimeout = signRequests;\n\t\tsignRequests = null;\n\t}\n\n\tif ( !signRequests )\n\t\tsignRequests = [ ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( "Registration failed", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( "Registration failed", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = registerRequests[ 0 ].appId;\n\n\t\t\t\tu2f.register(\n\t\t\t\t\tappId, registerRequests, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.register(\n\t\t\t\t\tregisterRequests, signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction sign( signRequests, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( signRequests ) )\n\t\tsignRequests = [ signRequests ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( "Sign failed", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( "Sign failed", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = signRequests[ 0 ].appId;\n\t\t\t\tvar challenge = signRequests[ 0 ].challenge;\n\n\t\t\t\tu2f.sign( appId, challenge, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.sign( signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction makeDefault( func )\n{\n\tAPI[ func ] = function( )\n\t{\n\t\tif ( !global.Promise )\n\t\t\t// This is very unlikely to ever happen, since browsers\n\t\t\t// supporting U2F will most likely support Promises.\n\t\t\tthrow new Error( "The platform doesn\'t natively support promises" );\n\n\t\tvar args = [ ].slice.call( arguments );\n\t\treturn API( global.Promise )[ func ].apply( null, args );\n\t};\n}\n\n// Provide default functions using the built-in Promise if available.\nmakeDefault( \'isSupported\' );\nmakeDefault( \'ensureSupport\' );\nmakeDefault( \'register\' );\nmakeDefault( \'sign\' );\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7799\n')},a8fc:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* unused harmony export AccountNameRequiredError */\n/* unused harmony export AccountNotSupported */\n/* unused harmony export AmountRequired */\n/* unused harmony export BluetoothRequired */\n/* unused harmony export BtcUnmatchedApp */\n/* unused harmony export CantOpenDevice */\n/* unused harmony export CantScanQRCode */\n/* unused harmony export CashAddrNotSupported */\n/* unused harmony export CurrencyNotSupported */\n/* unused harmony export DBNotReset */\n/* unused harmony export DBWrongPassword */\n/* unused harmony export DeviceAppVerifyNotSupported */\n/* unused harmony export DeviceGenuineSocketEarlyClose */\n/* unused harmony export DeviceHalted */\n/* unused harmony export DeviceInOSUExpected */\n/* unused harmony export DeviceNameInvalid */\n/* unused harmony export DeviceNotGenuineError */\n/* unused harmony export DeviceOnDashboardExpected */\n/* unused harmony export DeviceOnDashboardUnexpected */\n/* unused harmony export DeviceShouldStayInApp */\n/* unused harmony export DeviceSocketFail */\n/* unused harmony export DeviceSocketNoBulkStatus */\n/* unused harmony export DisconnectedDevice */\n/* unused harmony export DisconnectedDeviceDuringOperation */\n/* unused harmony export ETHAddressNonEIP */\n/* unused harmony export EnpointConfigError */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EthAppPleaseEnableContractData; });\n/* unused harmony export FeeEstimationFailed */\n/* unused harmony export FeeNotLoaded */\n/* unused harmony export FeeRequired */\n/* unused harmony export FeeTooHigh */\n/* unused harmony export FirmwareNotRecognized */\n/* unused harmony export FirmwareOrAppUpdateRequired */\n/* unused harmony export GasLessThanEstimate */\n/* unused harmony export GenuineCheckFailed */\n/* unused harmony export HardResetFail */\n/* unused harmony export InvalidAddress */\n/* unused harmony export InvalidAddressBecauseDestinationIsAlsoSource */\n/* unused harmony export InvalidXRPTag */\n/* unused harmony export LatestMCUInstalledError */\n/* unused harmony export LedgerAPI4xx */\n/* unused harmony export LedgerAPI5xx */\n/* unused harmony export LedgerAPIError */\n/* unused harmony export LedgerAPIErrorWithMessage */\n/* unused harmony export LedgerAPINotAvailable */\n/* unused harmony export MCUNotGenuineToDashboard */\n/* unused harmony export ManagerAppAlreadyInstalledError */\n/* unused harmony export ManagerAppDepInstallRequired */\n/* unused harmony export ManagerAppDepUninstallRequired */\n/* unused harmony export ManagerAppRelyOnBTCError */\n/* unused harmony export ManagerDeviceLockedError */\n/* unused harmony export ManagerFirmwareNotEnoughSpaceError */\n/* unused harmony export ManagerNotEnoughSpaceError */\n/* unused harmony export ManagerUninstallBTCDep */\n/* unused harmony export NetworkDown */\n/* unused harmony export NoAccessToCamera */\n/* unused harmony export NoAddressesFound */\n/* unused harmony export NoDBPathGiven */\n/* unused harmony export NotEnoughBalance */\n/* unused harmony export NotEnoughBalanceBecauseDestinationNotCreated */\n/* unused harmony export NotEnoughBalanceInParentAccount */\n/* unused harmony export NotEnoughBalanceToDelegate */\n/* unused harmony export NotEnoughGas */\n/* unused harmony export NotEnoughSpendableBalance */\n/* unused harmony export NotSupportedLegacyAddress */\n/* unused harmony export PairingFailed */\n/* unused harmony export PasswordIncorrectError */\n/* unused harmony export PasswordsDontMatchError */\n/* unused harmony export RecipientRequired */\n/* unused harmony export RecommendSubAccountsToEmpty */\n/* unused harmony export RecommendUndelegation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return StatusCodes; });\n/* unused harmony export SyncError */\n/* unused harmony export TimeoutTagged */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return TransportError; });\n/* unused harmony export TransportInterfaceNotAvailable */\n/* unused harmony export TransportOpenUserCancelled */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return TransportRaceCondition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return TransportStatusError; });\n/* unused harmony export TransportWebUSBGestureRequired */\n/* unused harmony export UnavailableTezosOriginatedAccountReceive */\n/* unused harmony export UnavailableTezosOriginatedAccountSend */\n/* unused harmony export UnexpectedBootloader */\n/* unused harmony export UnknownMCU */\n/* unused harmony export UpdateFetchFileFail */\n/* unused harmony export UpdateIncorrectHash */\n/* unused harmony export UpdateIncorrectSig */\n/* unused harmony export UpdateYourApp */\n/* unused harmony export UserRefusedAddress */\n/* unused harmony export UserRefusedAllowManager */\n/* unused harmony export UserRefusedDeviceNameChange */\n/* unused harmony export UserRefusedFirmwareUpdate */\n/* unused harmony export UserRefusedOnDevice */\n/* unused harmony export WebsocketConnectionError */\n/* unused harmony export WebsocketConnectionFailed */\n/* unused harmony export WrongAppForCurrency */\n/* unused harmony export WrongDeviceForAccount */\n/* unused harmony export addCustomErrorDeserializer */\n/* unused harmony export createCustomErrorClass */\n/* unused harmony export deserializeError */\n/* unused harmony export getAltStatusMessage */\n/* unused harmony export serializeError */\n/* eslint-disable no-continue */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-prototype-builtins */\r\nvar errorClasses = {};\r\nvar deserializers = {};\r\nvar addCustomErrorDeserializer = function (name, deserializer) {\r\n    deserializers[name] = deserializer;\r\n};\r\nvar createCustomErrorClass = function (name) {\r\n    var C = function CustomError(message, fields) {\r\n        Object.assign(this, fields);\r\n        this.name = name;\r\n        this.message = message || name;\r\n        this.stack = new Error().stack;\r\n    };\r\n    C.prototype = new Error();\r\n    errorClasses[name] = C;\r\n    return C;\r\n};\r\n// inspired from https://github.com/programble/errio/blob/master/index.js\r\nvar deserializeError = function (object) {\r\n    if (typeof object === "object" && object) {\r\n        try {\r\n            // $FlowFixMe FIXME HACK\r\n            var msg = JSON.parse(object.message);\r\n            if (msg.message && msg.name) {\r\n                object = msg;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n        }\r\n        var error = void 0;\r\n        if (typeof object.name === "string") {\r\n            var name_1 = object.name;\r\n            var des = deserializers[name_1];\r\n            if (des) {\r\n                error = des(object);\r\n            }\r\n            else {\r\n                var constructor = name_1 === "Error" ? Error : errorClasses[name_1];\r\n                if (!constructor) {\r\n                    console.warn("deserializing an unknown class \'" + name_1 + "\'");\r\n                    constructor = createCustomErrorClass(name_1);\r\n                }\r\n                error = Object.create(constructor.prototype);\r\n                try {\r\n                    for (var prop in object) {\r\n                        if (object.hasOwnProperty(prop)) {\r\n                            error[prop] = object[prop];\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // sometimes setting a property can fail (e.g. .name)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            error = new Error(object.message);\r\n        }\r\n        if (!error.stack && Error.captureStackTrace) {\r\n            Error.captureStackTrace(error, deserializeError);\r\n        }\r\n        return error;\r\n    }\r\n    return new Error(String(object));\r\n};\r\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\r\nvar serializeError = function (value) {\r\n    if (!value)\r\n        return value;\r\n    if (typeof value === "object") {\r\n        return destroyCircular(value, []);\r\n    }\r\n    if (typeof value === "function") {\r\n        return "[Function: " + (value.name || "anonymous") + "]";\r\n    }\r\n    return value;\r\n};\r\n// https://www.npmjs.com/package/destroy-circular\r\nfunction destroyCircular(from, seen) {\r\n    var to = {};\r\n    seen.push(from);\r\n    for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var value = from[key];\r\n        if (typeof value === "function") {\r\n            continue;\r\n        }\r\n        if (!value || typeof value !== "object") {\r\n            to[key] = value;\r\n            continue;\r\n        }\r\n        if (seen.indexOf(from[key]) === -1) {\r\n            to[key] = destroyCircular(from[key], seen.slice(0));\r\n            continue;\r\n        }\r\n        to[key] = "[Circular]";\r\n    }\r\n    if (typeof from.name === "string") {\r\n        to.name = from.name;\r\n    }\r\n    if (typeof from.message === "string") {\r\n        to.message = from.message;\r\n    }\r\n    if (typeof from.stack === "string") {\r\n        to.stack = from.stack;\r\n    }\r\n    return to;\r\n}\n\nvar AccountNameRequiredError = createCustomErrorClass("AccountNameRequired");\r\nvar AccountNotSupported = createCustomErrorClass("AccountNotSupported");\r\nvar AmountRequired = createCustomErrorClass("AmountRequired");\r\nvar BluetoothRequired = createCustomErrorClass("BluetoothRequired");\r\nvar BtcUnmatchedApp = createCustomErrorClass("BtcUnmatchedApp");\r\nvar CantOpenDevice = createCustomErrorClass("CantOpenDevice");\r\nvar CashAddrNotSupported = createCustomErrorClass("CashAddrNotSupported");\r\nvar CurrencyNotSupported = createCustomErrorClass("CurrencyNotSupported");\r\nvar DeviceAppVerifyNotSupported = createCustomErrorClass("DeviceAppVerifyNotSupported");\r\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass("DeviceGenuineSocketEarlyClose");\r\nvar DeviceNotGenuineError = createCustomErrorClass("DeviceNotGenuine");\r\nvar DeviceOnDashboardExpected = createCustomErrorClass("DeviceOnDashboardExpected");\r\nvar DeviceOnDashboardUnexpected = createCustomErrorClass("DeviceOnDashboardUnexpected");\r\nvar DeviceInOSUExpected = createCustomErrorClass("DeviceInOSUExpected");\r\nvar DeviceHalted = createCustomErrorClass("DeviceHalted");\r\nvar DeviceNameInvalid = createCustomErrorClass("DeviceNameInvalid");\r\nvar DeviceSocketFail = createCustomErrorClass("DeviceSocketFail");\r\nvar DeviceSocketNoBulkStatus = createCustomErrorClass("DeviceSocketNoBulkStatus");\r\nvar DisconnectedDevice = createCustomErrorClass("DisconnectedDevice");\r\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass("DisconnectedDeviceDuringOperation");\r\nvar EnpointConfigError = createCustomErrorClass("EnpointConfig");\r\nvar EthAppPleaseEnableContractData = createCustomErrorClass("EthAppPleaseEnableContractData");\r\nvar FeeEstimationFailed = createCustomErrorClass("FeeEstimationFailed");\r\nvar FirmwareNotRecognized = createCustomErrorClass("FirmwareNotRecognized");\r\nvar HardResetFail = createCustomErrorClass("HardResetFail");\r\nvar InvalidXRPTag = createCustomErrorClass("InvalidXRPTag");\r\nvar InvalidAddress = createCustomErrorClass("InvalidAddress");\r\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass("InvalidAddressBecauseDestinationIsAlsoSource");\r\nvar LatestMCUInstalledError = createCustomErrorClass("LatestMCUInstalledError");\r\nvar UnknownMCU = createCustomErrorClass("UnknownMCU");\r\nvar LedgerAPIError = createCustomErrorClass("LedgerAPIError");\r\nvar LedgerAPIErrorWithMessage = createCustomErrorClass("LedgerAPIErrorWithMessage");\r\nvar LedgerAPINotAvailable = createCustomErrorClass("LedgerAPINotAvailable");\r\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass("ManagerAppAlreadyInstalled");\r\nvar ManagerAppRelyOnBTCError = createCustomErrorClass("ManagerAppRelyOnBTC");\r\nvar ManagerAppDepInstallRequired = createCustomErrorClass("ManagerAppDepInstallRequired");\r\nvar ManagerAppDepUninstallRequired = createCustomErrorClass("ManagerAppDepUninstallRequired");\r\nvar ManagerDeviceLockedError = createCustomErrorClass("ManagerDeviceLocked");\r\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass("ManagerFirmwareNotEnoughSpace");\r\nvar ManagerNotEnoughSpaceError = createCustomErrorClass("ManagerNotEnoughSpace");\r\nvar ManagerUninstallBTCDep = createCustomErrorClass("ManagerUninstallBTCDep");\r\nvar NetworkDown = createCustomErrorClass("NetworkDown");\r\nvar NoAddressesFound = createCustomErrorClass("NoAddressesFound");\r\nvar NotEnoughBalance = createCustomErrorClass("NotEnoughBalance");\r\nvar NotEnoughBalanceToDelegate = createCustomErrorClass("NotEnoughBalanceToDelegate");\r\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass("NotEnoughBalanceInParentAccount");\r\nvar NotEnoughSpendableBalance = createCustomErrorClass("NotEnoughSpendableBalance");\r\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass("NotEnoughBalanceBecauseDestinationNotCreated");\r\nvar NoAccessToCamera = createCustomErrorClass("NoAccessToCamera");\r\nvar NotEnoughGas = createCustomErrorClass("NotEnoughGas");\r\nvar NotSupportedLegacyAddress = createCustomErrorClass("NotSupportedLegacyAddress");\r\nvar GasLessThanEstimate = createCustomErrorClass("GasLessThanEstimate");\r\nvar PasswordsDontMatchError = createCustomErrorClass("PasswordsDontMatch");\r\nvar PasswordIncorrectError = createCustomErrorClass("PasswordIncorrect");\r\nvar RecommendSubAccountsToEmpty = createCustomErrorClass("RecommendSubAccountsToEmpty");\r\nvar RecommendUndelegation = createCustomErrorClass("RecommendUndelegation");\r\nvar TimeoutTagged = createCustomErrorClass("TimeoutTagged");\r\nvar UnexpectedBootloader = createCustomErrorClass("UnexpectedBootloader");\r\nvar MCUNotGenuineToDashboard = createCustomErrorClass("MCUNotGenuineToDashboard");\r\nvar RecipientRequired = createCustomErrorClass("RecipientRequired");\r\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass("UnavailableTezosOriginatedAccountReceive");\r\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass("UnavailableTezosOriginatedAccountSend");\r\nvar UpdateFetchFileFail = createCustomErrorClass("UpdateFetchFileFail");\r\nvar UpdateIncorrectHash = createCustomErrorClass("UpdateIncorrectHash");\r\nvar UpdateIncorrectSig = createCustomErrorClass("UpdateIncorrectSig");\r\nvar UpdateYourApp = createCustomErrorClass("UpdateYourApp");\r\nvar UserRefusedDeviceNameChange = createCustomErrorClass("UserRefusedDeviceNameChange");\r\nvar UserRefusedAddress = createCustomErrorClass("UserRefusedAddress");\r\nvar UserRefusedFirmwareUpdate = createCustomErrorClass("UserRefusedFirmwareUpdate");\r\nvar UserRefusedAllowManager = createCustomErrorClass("UserRefusedAllowManager");\r\nvar UserRefusedOnDevice = createCustomErrorClass("UserRefusedOnDevice"); // TODO rename because it\'s just for transaction refusal\r\nvar TransportOpenUserCancelled = createCustomErrorClass("TransportOpenUserCancelled");\r\nvar TransportInterfaceNotAvailable = createCustomErrorClass("TransportInterfaceNotAvailable");\r\nvar TransportRaceCondition = createCustomErrorClass("TransportRaceCondition");\r\nvar TransportWebUSBGestureRequired = createCustomErrorClass("TransportWebUSBGestureRequired");\r\nvar DeviceShouldStayInApp = createCustomErrorClass("DeviceShouldStayInApp");\r\nvar WebsocketConnectionError = createCustomErrorClass("WebsocketConnectionError");\r\nvar WebsocketConnectionFailed = createCustomErrorClass("WebsocketConnectionFailed");\r\nvar WrongDeviceForAccount = createCustomErrorClass("WrongDeviceForAccount");\r\nvar WrongAppForCurrency = createCustomErrorClass("WrongAppForCurrency");\r\nvar ETHAddressNonEIP = createCustomErrorClass("ETHAddressNonEIP");\r\nvar CantScanQRCode = createCustomErrorClass("CantScanQRCode");\r\nvar FeeNotLoaded = createCustomErrorClass("FeeNotLoaded");\r\nvar FeeRequired = createCustomErrorClass("FeeRequired");\r\nvar FeeTooHigh = createCustomErrorClass("FeeTooHigh");\r\nvar SyncError = createCustomErrorClass("SyncError");\r\nvar PairingFailed = createCustomErrorClass("PairingFailed");\r\nvar GenuineCheckFailed = createCustomErrorClass("GenuineCheckFailed");\r\nvar LedgerAPI4xx = createCustomErrorClass("LedgerAPI4xx");\r\nvar LedgerAPI5xx = createCustomErrorClass("LedgerAPI5xx");\r\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass("FirmwareOrAppUpdateRequired");\r\n// db stuff, no need to translate\r\nvar NoDBPathGiven = createCustomErrorClass("NoDBPathGiven");\r\nvar DBWrongPassword = createCustomErrorClass("DBWrongPassword");\r\nvar DBNotReset = createCustomErrorClass("DBNotReset");\r\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\r\nfunction TransportError(message, id) {\r\n    this.name = "TransportError";\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.id = id;\r\n}\r\nTransportError.prototype = new Error();\r\naddCustomErrorDeserializer("TransportError", function (e) { return new TransportError(e.message, e.id); });\r\nvar StatusCodes = {\r\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\r\n    INCORRECT_LENGTH: 0x6700,\r\n    MISSING_CRITICAL_PARAMETER: 0x6800,\r\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\r\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\r\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\r\n    INCORRECT_DATA: 0x6a80,\r\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\r\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\r\n    FILE_ALREADY_EXISTS: 0x6a89,\r\n    INCORRECT_P1_P2: 0x6b00,\r\n    INS_NOT_SUPPORTED: 0x6d00,\r\n    CLA_NOT_SUPPORTED: 0x6e00,\r\n    TECHNICAL_PROBLEM: 0x6f00,\r\n    OK: 0x9000,\r\n    MEMORY_PROBLEM: 0x9240,\r\n    NO_EF_SELECTED: 0x9400,\r\n    INVALID_OFFSET: 0x9402,\r\n    FILE_NOT_FOUND: 0x9404,\r\n    INCONSISTENT_FILE: 0x9408,\r\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\r\n    INVALID_KCV: 0x9485,\r\n    CODE_NOT_INITIALIZED: 0x9802,\r\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\r\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\r\n    CONTRADICTION_INVALIDATION: 0x9810,\r\n    CODE_BLOCKED: 0x9840,\r\n    MAX_VALUE_REACHED: 0x9850,\r\n    GP_AUTH_FAILED: 0x6300,\r\n    LICENSING: 0x6f42,\r\n    HALTED: 0x6faa,\r\n};\r\nfunction getAltStatusMessage(code) {\r\n    switch (code) {\r\n        // improve text of most common errors\r\n        case 0x6700:\r\n            return "Incorrect length";\r\n        case 0x6800:\r\n            return "Missing critical parameter";\r\n        case 0x6982:\r\n            return "Security not satisfied (dongle locked or have invalid access rights)";\r\n        case 0x6985:\r\n            return "Condition of use not satisfied (denied by the user?)";\r\n        case 0x6a80:\r\n            return "Invalid data received";\r\n        case 0x6b00:\r\n            return "Invalid parameter received";\r\n    }\r\n    if (0x6f00 <= code && code <= 0x6fff) {\r\n        return "Internal error, please report";\r\n    }\r\n}\r\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\r\nfunction TransportStatusError(statusCode) {\r\n    this.name = "TransportStatusError";\r\n    var statusText = Object.keys(StatusCodes).find(function (k) { return StatusCodes[k] === statusCode; }) ||\r\n        "UNKNOWN_ERROR";\r\n    var smsg = getAltStatusMessage(statusCode) || statusText;\r\n    var statusCodeStr = statusCode.toString(16);\r\n    this.message = "Ledger device: " + smsg + " (0x" + statusCodeStr + ")";\r\n    this.stack = new Error().stack;\r\n    this.statusCode = statusCode;\r\n    this.statusText = statusText;\r\n}\r\nTransportStatusError.prototype = new Error();\r\naddCustomErrorDeserializer("TransportStatusError", function (e) { return new TransportStatusError(e.statusCode); });\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///a8fc\n')},bd42:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return log; });\n/* unused harmony export listen */\n/**\n * A Log object\n */\nlet id = 0;\nconst subscribers = [];\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like "debug", "error" but more like "apdu-in", "apdu-out", etc...)\n * @param message a clear message of the log associated to the type\n */\n\nconst log = (type, message, data) => {\n  const obj = {\n    type,\n    id: String(++id),\n    date: new Date()\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\n\nconst listen = cb => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n} // for debug purpose\n\n\nif (typeof window !== "undefined") {\n  window.__ledgerLogsListen = listen;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2xvZ3MvbGliLWVzL2luZGV4LmpzP2JkNDIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQix3QkFBd0I7QUFDekM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDOzs7QUFHRDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJiZDQyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIExvZyBvYmplY3RcbiAqL1xubGV0IGlkID0gMDtcbmNvbnN0IHN1YnNjcmliZXJzID0gW107XG4vKipcbiAqIGxvZyBzb21ldGhpbmdcbiAqIEBwYXJhbSB0eXBlIGEgbmFtZXNwYWNlZCBpZGVudGlmaWVyIG9mIHRoZSBsb2cgKGl0IGlzIG5vdCBhIGxldmVsIGxpa2UgXCJkZWJ1Z1wiLCBcImVycm9yXCIgYnV0IG1vcmUgbGlrZSBcImFwZHUtaW5cIiwgXCJhcGR1LW91dFwiLCBldGMuLi4pXG4gKiBAcGFyYW0gbWVzc2FnZSBhIGNsZWFyIG1lc3NhZ2Ugb2YgdGhlIGxvZyBhc3NvY2lhdGVkIHRvIHRoZSB0eXBlXG4gKi9cblxuZXhwb3J0IGNvbnN0IGxvZyA9ICh0eXBlLCBtZXNzYWdlLCBkYXRhKSA9PiB7XG4gIGNvbnN0IG9iaiA9IHtcbiAgICB0eXBlLFxuICAgIGlkOiBTdHJpbmcoKytpZCksXG4gICAgZGF0ZTogbmV3IERhdGUoKVxuICB9O1xuICBpZiAobWVzc2FnZSkgb2JqLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICBpZiAoZGF0YSkgb2JqLmRhdGEgPSBkYXRhO1xuICBkaXNwYXRjaChvYmopO1xufTtcbi8qKlxuICogbGlzdGVuIHRvIGxvZ3MuXG4gKiBAcGFyYW0gY2IgdGhhdCBpcyBjYWxsZWQgZm9yIGVhY2ggZnV0dXJlIGxvZygpIHdpdGggdGhlIExvZyBvYmplY3RcbiAqIEByZXR1cm4gYSBmdW5jdGlvbiB0aGF0IGNhbiBiZSBjYWxsZWQgdG8gdW5zdWJzY3JpYmUgdGhlIGxpc3RlbmVyXG4gKi9cblxuZXhwb3J0IGNvbnN0IGxpc3RlbiA9IGNiID0+IHtcbiAgc3Vic2NyaWJlcnMucHVzaChjYik7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgY29uc3QgaSA9IHN1YnNjcmliZXJzLmluZGV4T2YoY2IpO1xuXG4gICAgaWYgKGkgIT09IC0xKSB7XG4gICAgICAvLyBlcXVpdmFsZW50IG9mIHN1YnNjcmliZXJzLnNwbGljZShpLCAxKSAvLyBodHRwczovL3R3aXR0ZXIuY29tL1JpY2hfSGFycmlzL3N0YXR1cy8xMTI1ODUwMzkxMTU1OTY1OTUyXG4gICAgICBzdWJzY3JpYmVyc1tpXSA9IHN1YnNjcmliZXJzW3N1YnNjcmliZXJzLmxlbmd0aCAtIDFdO1xuICAgICAgc3Vic2NyaWJlcnMucG9wKCk7XG4gICAgfVxuICB9O1xufTtcblxuZnVuY3Rpb24gZGlzcGF0Y2gobG9nKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3Vic2NyaWJlcnMubGVuZ3RoOyBpKyspIHtcbiAgICB0cnkge1xuICAgICAgc3Vic2NyaWJlcnNbaV0obG9nKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgIH1cbiAgfVxufSAvLyBmb3IgZGVidWcgcHVycG9zZVxuXG5cbmlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gIHdpbmRvdy5fX2xlZGdlckxvZ3NMaXN0ZW4gPSBsaXN0ZW47XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///bd42\n')},d418:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return TransportU2F; });\n/* harmony import */ var u2f_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("d5cf");\n/* harmony import */ var u2f_api__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(u2f_api__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ledgerhq_hw_transport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("f685");\n/* harmony import */ var _ledgerhq_logs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("bd42");\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("a8fc");\n\n\n\n\n\nfunction wrapU2FTransportError(originalError, message, id) {\n  const err = new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_3__[/* TransportError */ "c"](message, id); // $FlowFixMe\n\n  err.originalError = originalError;\n  return err;\n}\n\nfunction wrapApdu(apdu, key) {\n  const result = Buffer.alloc(apdu.length);\n\n  for (let i = 0; i < apdu.length; i++) {\n    result[i] = apdu[i] ^ key[i % key.length];\n  }\n\n  return result;\n} // Convert from normal to web-safe, strip trailing "="s\n\n\nconst webSafe64 = base64 => base64.replace(/\\+/g, "-").replace(/\\//g, "_").replace(/=+$/, ""); // Convert from web-safe to normal, add trailing "="s\n\n\nconst normal64 = base64 => base64.replace(/-/g, "+").replace(/_/g, "/") + "==".substring(0, 3 * base64.length % 4);\n\nfunction attemptExchange(apdu, timeoutMillis, scrambleKey, unwrap) {\n  const keyHandle = wrapApdu(apdu, scrambleKey);\n  const challenge = Buffer.from("0000000000000000000000000000000000000000000000000000000000000000", "hex");\n  const signRequest = {\n    version: "U2F_V2",\n    keyHandle: webSafe64(keyHandle.toString("base64")),\n    challenge: webSafe64(challenge.toString("base64")),\n    appId: location.origin\n  };\n  Object(_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_2__[/* log */ "a"])("apdu", "=> " + apdu.toString("hex"));\n  return Object(u2f_api__WEBPACK_IMPORTED_MODULE_0__["sign"])(signRequest, timeoutMillis / 1000).then(response => {\n    const {\n      signatureData\n    } = response;\n\n    if (typeof signatureData === "string") {\n      const data = Buffer.from(normal64(signatureData), "base64");\n      let result;\n\n      if (!unwrap) {\n        result = data;\n      } else {\n        result = data.slice(5);\n      }\n\n      Object(_ledgerhq_logs__WEBPACK_IMPORTED_MODULE_2__[/* log */ "a"])("apdu", "<= " + result.toString("hex"));\n      return result;\n    } else {\n      throw response;\n    }\n  });\n}\n\nlet transportInstances = [];\n\nfunction emitDisconnect() {\n  transportInstances.forEach(t => t.emit("disconnect"));\n  transportInstances = [];\n}\n\nfunction isTimeoutU2FError(u2fError) {\n  return u2fError.metaData.code === 5;\n}\n/**\n * U2F web Transport implementation\n * @example\n * import TransportU2F from "@ledgerhq/hw-transport-u2f";\n * ...\n * TransportU2F.create().then(transport => ...)\n */\n\n\nclass TransportU2F extends _ledgerhq_hw_transport__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"] {\n  /*\n   */\n\n  /*\n   */\n\n  /**\n   * static function to create a new Transport from a connected Ledger device discoverable via U2F (browser support)\n   */\n  static async open(_, _openTimeout = 5000) {\n    return new TransportU2F();\n  }\n\n  constructor() {\n    super();\n    this.scrambleKey = void 0;\n    this.unwrap = true;\n    transportInstances.push(this);\n  }\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n\n\n  async exchange(apdu) {\n    try {\n      return await attemptExchange(apdu, this.exchangeTimeout, this.scrambleKey, this.unwrap);\n    } catch (e) {\n      const isU2FError = typeof e.metaData === "object";\n\n      if (isU2FError) {\n        if (isTimeoutU2FError(e)) {\n          emitDisconnect();\n        } // the wrapping make error more usable and "printable" to the end user.\n\n\n        throw wrapU2FTransportError(e, "Failed to sign with Ledger device: U2F " + e.metaData.type, "U2F_" + e.metaData.code);\n      } else {\n        throw e;\n      }\n    }\n  }\n  /**\n   */\n\n\n  setScrambleKey(scrambleKey) {\n    this.scrambleKey = Buffer.from(scrambleKey, "ascii");\n  }\n  /**\n   */\n\n\n  setUnwrap(unwrap) {\n    this.unwrap = unwrap;\n  }\n\n  close() {\n    // u2f have no way to clean things up\n    return Promise.resolve();\n  }\n\n}\nTransportU2F.isSupported = u2f_api__WEBPACK_IMPORTED_MODULE_0__["isSupported"];\n\nTransportU2F.list = () => // this transport is not discoverable but we are going to guess if it is here with isSupported()\nObject(u2f_api__WEBPACK_IMPORTED_MODULE_0__["isSupported"])().then(supported => supported ? [null] : []);\n\nTransportU2F.listen = observer => {\n  let unsubscribed = false;\n  Object(u2f_api__WEBPACK_IMPORTED_MODULE_0__["isSupported"])().then(supported => {\n    if (unsubscribed) return;\n\n    if (supported) {\n      observer.next({\n        type: "add",\n        descriptor: null\n      });\n      observer.complete();\n    } else {\n      observer.error(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_3__[/* TransportError */ "c"]("U2F browser support is needed for Ledger. " + "Please use Chrome, Opera or Firefox with a U2F extension. " + "Also make sure you\'re on an HTTPS connection", "U2FNotSupported"));\n    }\n  });\n  return {\n    unsubscribe: () => {\n      unsubscribed = true;\n    }\n  };\n};\n//# sourceMappingURL=TransportU2F.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("1c35").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC11MmYvbGliLWVzL1RyYW5zcG9ydFUyRi5qcz9kNDE4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTRDO0FBQ0c7QUFDVjtBQUNhOztBQUVsRDtBQUNBLGtCQUFrQix1RUFBYyxjQUFjOztBQUU5QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQSxDQUFDOzs7QUFHRCw4RkFBOEY7OztBQUc5Rjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLGtFQUFHO0FBQ0wsU0FBUyxvREFBSTtBQUNiO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUEsTUFBTSxrRUFBRztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdlLDJCQUEyQixzRUFBUztBQUNuRDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOzs7QUFHVDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJCQUEyQixtREFBVzs7QUFFdEM7QUFDQSwyREFBVzs7QUFFWDtBQUNBO0FBQ0EsRUFBRSwyREFBVztBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsS0FBSztBQUNMLHlCQUF5Qix1RUFBYztBQUN2QztBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QyIsImZpbGUiOiJkNDE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2lnbiwgaXNTdXBwb3J0ZWQgfSBmcm9tIFwidTJmLWFwaVwiO1xuaW1wb3J0IFRyYW5zcG9ydCBmcm9tIFwiQGxlZGdlcmhxL2h3LXRyYW5zcG9ydFwiO1xuaW1wb3J0IHsgbG9nIH0gZnJvbSBcIkBsZWRnZXJocS9sb2dzXCI7XG5pbXBvcnQgeyBUcmFuc3BvcnRFcnJvciB9IGZyb20gXCJAbGVkZ2VyaHEvZXJyb3JzXCI7XG5cbmZ1bmN0aW9uIHdyYXBVMkZUcmFuc3BvcnRFcnJvcihvcmlnaW5hbEVycm9yLCBtZXNzYWdlLCBpZCkge1xuICBjb25zdCBlcnIgPSBuZXcgVHJhbnNwb3J0RXJyb3IobWVzc2FnZSwgaWQpOyAvLyAkRmxvd0ZpeE1lXG5cbiAgZXJyLm9yaWdpbmFsRXJyb3IgPSBvcmlnaW5hbEVycm9yO1xuICByZXR1cm4gZXJyO1xufVxuXG5mdW5jdGlvbiB3cmFwQXBkdShhcGR1LCBrZXkpIHtcbiAgY29uc3QgcmVzdWx0ID0gQnVmZmVyLmFsbG9jKGFwZHUubGVuZ3RoKTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGFwZHUubGVuZ3RoOyBpKyspIHtcbiAgICByZXN1bHRbaV0gPSBhcGR1W2ldIF4ga2V5W2kgJSBrZXkubGVuZ3RoXTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59IC8vIENvbnZlcnQgZnJvbSBub3JtYWwgdG8gd2ViLXNhZmUsIHN0cmlwIHRyYWlsaW5nIFwiPVwic1xuXG5cbmNvbnN0IHdlYlNhZmU2NCA9IGJhc2U2NCA9PiBiYXNlNjQucmVwbGFjZSgvXFwrL2csIFwiLVwiKS5yZXBsYWNlKC9cXC8vZywgXCJfXCIpLnJlcGxhY2UoLz0rJC8sIFwiXCIpOyAvLyBDb252ZXJ0IGZyb20gd2ViLXNhZmUgdG8gbm9ybWFsLCBhZGQgdHJhaWxpbmcgXCI9XCJzXG5cblxuY29uc3Qgbm9ybWFsNjQgPSBiYXNlNjQgPT4gYmFzZTY0LnJlcGxhY2UoLy0vZywgXCIrXCIpLnJlcGxhY2UoL18vZywgXCIvXCIpICsgXCI9PVwiLnN1YnN0cmluZygwLCAzICogYmFzZTY0Lmxlbmd0aCAlIDQpO1xuXG5mdW5jdGlvbiBhdHRlbXB0RXhjaGFuZ2UoYXBkdSwgdGltZW91dE1pbGxpcywgc2NyYW1ibGVLZXksIHVud3JhcCkge1xuICBjb25zdCBrZXlIYW5kbGUgPSB3cmFwQXBkdShhcGR1LCBzY3JhbWJsZUtleSk7XG4gIGNvbnN0IGNoYWxsZW5nZSA9IEJ1ZmZlci5mcm9tKFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLCBcImhleFwiKTtcbiAgY29uc3Qgc2lnblJlcXVlc3QgPSB7XG4gICAgdmVyc2lvbjogXCJVMkZfVjJcIixcbiAgICBrZXlIYW5kbGU6IHdlYlNhZmU2NChrZXlIYW5kbGUudG9TdHJpbmcoXCJiYXNlNjRcIikpLFxuICAgIGNoYWxsZW5nZTogd2ViU2FmZTY0KGNoYWxsZW5nZS50b1N0cmluZyhcImJhc2U2NFwiKSksXG4gICAgYXBwSWQ6IGxvY2F0aW9uLm9yaWdpblxuICB9O1xuICBsb2coXCJhcGR1XCIsIFwiPT4gXCIgKyBhcGR1LnRvU3RyaW5nKFwiaGV4XCIpKTtcbiAgcmV0dXJuIHNpZ24oc2lnblJlcXVlc3QsIHRpbWVvdXRNaWxsaXMgLyAxMDAwKS50aGVuKHJlc3BvbnNlID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBzaWduYXR1cmVEYXRhXG4gICAgfSA9IHJlc3BvbnNlO1xuXG4gICAgaWYgKHR5cGVvZiBzaWduYXR1cmVEYXRhID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBjb25zdCBkYXRhID0gQnVmZmVyLmZyb20obm9ybWFsNjQoc2lnbmF0dXJlRGF0YSksIFwiYmFzZTY0XCIpO1xuICAgICAgbGV0IHJlc3VsdDtcblxuICAgICAgaWYgKCF1bndyYXApIHtcbiAgICAgICAgcmVzdWx0ID0gZGF0YTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdCA9IGRhdGEuc2xpY2UoNSk7XG4gICAgICB9XG5cbiAgICAgIGxvZyhcImFwZHVcIiwgXCI8PSBcIiArIHJlc3VsdC50b1N0cmluZyhcImhleFwiKSk7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyByZXNwb25zZTtcbiAgICB9XG4gIH0pO1xufVxuXG5sZXQgdHJhbnNwb3J0SW5zdGFuY2VzID0gW107XG5cbmZ1bmN0aW9uIGVtaXREaXNjb25uZWN0KCkge1xuICB0cmFuc3BvcnRJbnN0YW5jZXMuZm9yRWFjaCh0ID0+IHQuZW1pdChcImRpc2Nvbm5lY3RcIikpO1xuICB0cmFuc3BvcnRJbnN0YW5jZXMgPSBbXTtcbn1cblxuZnVuY3Rpb24gaXNUaW1lb3V0VTJGRXJyb3IodTJmRXJyb3IpIHtcbiAgcmV0dXJuIHUyZkVycm9yLm1ldGFEYXRhLmNvZGUgPT09IDU7XG59XG4vKipcbiAqIFUyRiB3ZWIgVHJhbnNwb3J0IGltcGxlbWVudGF0aW9uXG4gKiBAZXhhbXBsZVxuICogaW1wb3J0IFRyYW5zcG9ydFUyRiBmcm9tIFwiQGxlZGdlcmhxL2h3LXRyYW5zcG9ydC11MmZcIjtcbiAqIC4uLlxuICogVHJhbnNwb3J0VTJGLmNyZWF0ZSgpLnRoZW4odHJhbnNwb3J0ID0+IC4uLilcbiAqL1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRyYW5zcG9ydFUyRiBleHRlbmRzIFRyYW5zcG9ydCB7XG4gIC8qXG4gICAqL1xuXG4gIC8qXG4gICAqL1xuXG4gIC8qKlxuICAgKiBzdGF0aWMgZnVuY3Rpb24gdG8gY3JlYXRlIGEgbmV3IFRyYW5zcG9ydCBmcm9tIGEgY29ubmVjdGVkIExlZGdlciBkZXZpY2UgZGlzY292ZXJhYmxlIHZpYSBVMkYgKGJyb3dzZXIgc3VwcG9ydClcbiAgICovXG4gIHN0YXRpYyBhc3luYyBvcGVuKF8sIF9vcGVuVGltZW91dCA9IDUwMDApIHtcbiAgICByZXR1cm4gbmV3IFRyYW5zcG9ydFUyRigpO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnNjcmFtYmxlS2V5ID0gdm9pZCAwO1xuICAgIHRoaXMudW53cmFwID0gdHJ1ZTtcbiAgICB0cmFuc3BvcnRJbnN0YW5jZXMucHVzaCh0aGlzKTtcbiAgfVxuICAvKipcbiAgICogRXhjaGFuZ2Ugd2l0aCB0aGUgZGV2aWNlIHVzaW5nIEFQRFUgcHJvdG9jb2wuXG4gICAqIEBwYXJhbSBhcGR1XG4gICAqIEByZXR1cm5zIGEgcHJvbWlzZSBvZiBhcGR1IHJlc3BvbnNlXG4gICAqL1xuXG5cbiAgYXN5bmMgZXhjaGFuZ2UoYXBkdSkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gYXdhaXQgYXR0ZW1wdEV4Y2hhbmdlKGFwZHUsIHRoaXMuZXhjaGFuZ2VUaW1lb3V0LCB0aGlzLnNjcmFtYmxlS2V5LCB0aGlzLnVud3JhcCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc3QgaXNVMkZFcnJvciA9IHR5cGVvZiBlLm1ldGFEYXRhID09PSBcIm9iamVjdFwiO1xuXG4gICAgICBpZiAoaXNVMkZFcnJvcikge1xuICAgICAgICBpZiAoaXNUaW1lb3V0VTJGRXJyb3IoZSkpIHtcbiAgICAgICAgICBlbWl0RGlzY29ubmVjdCgpO1xuICAgICAgICB9IC8vIHRoZSB3cmFwcGluZyBtYWtlIGVycm9yIG1vcmUgdXNhYmxlIGFuZCBcInByaW50YWJsZVwiIHRvIHRoZSBlbmQgdXNlci5cblxuXG4gICAgICAgIHRocm93IHdyYXBVMkZUcmFuc3BvcnRFcnJvcihlLCBcIkZhaWxlZCB0byBzaWduIHdpdGggTGVkZ2VyIGRldmljZTogVTJGIFwiICsgZS5tZXRhRGF0YS50eXBlLCBcIlUyRl9cIiArIGUubWV0YURhdGEuY29kZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAvKipcbiAgICovXG5cblxuICBzZXRTY3JhbWJsZUtleShzY3JhbWJsZUtleSkge1xuICAgIHRoaXMuc2NyYW1ibGVLZXkgPSBCdWZmZXIuZnJvbShzY3JhbWJsZUtleSwgXCJhc2NpaVwiKTtcbiAgfVxuICAvKipcbiAgICovXG5cblxuICBzZXRVbndyYXAodW53cmFwKSB7XG4gICAgdGhpcy51bndyYXAgPSB1bndyYXA7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICAvLyB1MmYgaGF2ZSBubyB3YXkgdG8gY2xlYW4gdGhpbmdzIHVwXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG5cbn1cblRyYW5zcG9ydFUyRi5pc1N1cHBvcnRlZCA9IGlzU3VwcG9ydGVkO1xuXG5UcmFuc3BvcnRVMkYubGlzdCA9ICgpID0+IC8vIHRoaXMgdHJhbnNwb3J0IGlzIG5vdCBkaXNjb3ZlcmFibGUgYnV0IHdlIGFyZSBnb2luZyB0byBndWVzcyBpZiBpdCBpcyBoZXJlIHdpdGggaXNTdXBwb3J0ZWQoKVxuaXNTdXBwb3J0ZWQoKS50aGVuKHN1cHBvcnRlZCA9PiBzdXBwb3J0ZWQgPyBbbnVsbF0gOiBbXSk7XG5cblRyYW5zcG9ydFUyRi5saXN0ZW4gPSBvYnNlcnZlciA9PiB7XG4gIGxldCB1bnN1YnNjcmliZWQgPSBmYWxzZTtcbiAgaXNTdXBwb3J0ZWQoKS50aGVuKHN1cHBvcnRlZCA9PiB7XG4gICAgaWYgKHVuc3Vic2NyaWJlZCkgcmV0dXJuO1xuXG4gICAgaWYgKHN1cHBvcnRlZCkge1xuICAgICAgb2JzZXJ2ZXIubmV4dCh7XG4gICAgICAgIHR5cGU6IFwiYWRkXCIsXG4gICAgICAgIGRlc2NyaXB0b3I6IG51bGxcbiAgICAgIH0pO1xuICAgICAgb2JzZXJ2ZXIuY29tcGxldGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb2JzZXJ2ZXIuZXJyb3IobmV3IFRyYW5zcG9ydEVycm9yKFwiVTJGIGJyb3dzZXIgc3VwcG9ydCBpcyBuZWVkZWQgZm9yIExlZGdlci4gXCIgKyBcIlBsZWFzZSB1c2UgQ2hyb21lLCBPcGVyYSBvciBGaXJlZm94IHdpdGggYSBVMkYgZXh0ZW5zaW9uLiBcIiArIFwiQWxzbyBtYWtlIHN1cmUgeW91J3JlIG9uIGFuIEhUVFBTIGNvbm5lY3Rpb25cIiwgXCJVMkZOb3RTdXBwb3J0ZWRcIikpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiB7XG4gICAgdW5zdWJzY3JpYmU6ICgpID0+IHtcbiAgICAgIHVuc3Vic2NyaWJlZCA9IHRydWU7XG4gICAgfVxuICB9O1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyYW5zcG9ydFUyRi5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///d418\n')},d5cf:function(module,exports,__webpack_require__){"use strict";eval('\nmodule.exports = __webpack_require__( "7799" );//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdTJmLWFwaS9pbmRleC5qcz9kNWNmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsaUJBQWlCLG1CQUFPLEVBQUUsTUFBZSIsImZpbGUiOiJkNWNmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCAnLi9saWIvdTJmLWFwaScgKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///d5cf\n')},f685:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Transport; });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("faa1");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("a8fc");\n\n\n\n/**\n */\n\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\nclass Transport {\n  constructor() {\n    this.exchangeTimeout = 30000;\n    this.unresponsiveTimeout = 15000;\n    this.deviceModel = null;\n    this._events = new events__WEBPACK_IMPORTED_MODULE_0___default.a();\n\n    this.send = async (cla, ins, p1, p2, data = Buffer.alloc(0), statusList = [_ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__[/* StatusCodes */ "b"].OK]) => {\n      if (data.length >= 256) {\n        throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__[/* TransportError */ "c"]("data.length exceed 256 bytes limit. Got: " + data.length, "DataLengthTooBig");\n      }\n\n      const response = await this.exchange(Buffer.concat([Buffer.from([cla, ins, p1, p2]), Buffer.from([data.length]), data]));\n      const sw = response.readUInt16BE(response.length - 2);\n\n      if (!statusList.some(s => s === sw)) {\n        throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__[/* TransportStatusError */ "e"](sw);\n      }\n\n      return response;\n    };\n\n    this.exchangeBusyPromise = void 0;\n\n    this.exchangeAtomicImpl = async f => {\n      if (this.exchangeBusyPromise) {\n        throw new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__[/* TransportRaceCondition */ "d"]("An action was already pending on the Ledger device. Please deny or reconnect.");\n      }\n\n      let resolveBusy;\n      const busyPromise = new Promise(r => {\n        resolveBusy = r;\n      });\n      this.exchangeBusyPromise = busyPromise;\n      let unresponsiveReached = false;\n      const timeout = setTimeout(() => {\n        unresponsiveReached = true;\n        this.emit("unresponsive");\n      }, this.unresponsiveTimeout);\n\n      try {\n        const res = await f();\n\n        if (unresponsiveReached) {\n          this.emit("responsive");\n        }\n\n        return res;\n      } finally {\n        clearTimeout(timeout);\n        if (resolveBusy) resolveBusy();\n        this.exchangeBusyPromise = null;\n      }\n    };\n\n    this._appAPIlock = null;\n  }\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu) {\n    throw new Error("exchange not implemented");\n  }\n  /**\n   * set the "scramble key" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n\n\n  setScrambleKey(_key) {}\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n\n\n  close() {\n    return Promise.resolve();\n  }\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `"disconnect"` : triggered if Transport is disconnected\n   */\n  on(eventName, cb) {\n    this._events.on(eventName, cb);\n  }\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n\n\n  off(eventName, cb) {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event, ...args) {\n    this._events.emit(event, ...args);\n  }\n  /**\n   * Enable or not logs of the binary exchange\n   */\n\n\n  setDebugMode() {\n    console.warn("setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.");\n  }\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n\n\n  setExchangeTimeout(exchangeTimeout) {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n  /**\n   * Define the delay before emitting "unresponsive" on an exchange that does not respond\n   */\n\n\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\n  TransportFoo.create().then(transport => ...)\n   */\n  static create(openTimeout = 3000, listenTimeout) {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: e => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: e => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n\n          if (!found) {\n            reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__[/* TransportError */ "c"](this.ErrorMessage_NoDeviceFound, "NoDeviceFound"));\n          }\n        }\n      });\n      const listenTimeoutId = listenTimeout ? setTimeout(() => {\n        sub.unsubscribe();\n        reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__[/* TransportError */ "c"](this.ErrorMessage_ListenTimeout, "ListenTimeout"));\n      }, listenTimeout) : null;\n    });\n  }\n\n  decorateAppAPIMethods(self, methods, scrambleKey) {\n    for (let methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n    }\n  }\n\n  decorateAppAPIMethod(methodName, f, ctx, scrambleKey) {\n    return async (...args) => {\n      const {\n        _appAPIlock\n      } = this;\n\n      if (_appAPIlock) {\n        return Promise.reject(new _ledgerhq_errors__WEBPACK_IMPORTED_MODULE_1__[/* TransportError */ "c"]("Ledger Device is busy (lock " + _appAPIlock + ")", "TransportLocked"));\n      }\n\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n}\nTransport.isSupported = void 0;\nTransport.list = void 0;\nTransport.listen = void 0;\nTransport.open = void 0;\nTransport.ErrorMessage_ListenTimeout = "No Ledger device found (timeout)";\nTransport.ErrorMessage_NoDeviceFound = "No Ledger device found";\n//# sourceMappingURL=Transport.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("1c35").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///f685\n')}}]);